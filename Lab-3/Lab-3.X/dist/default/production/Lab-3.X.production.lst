

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 16:17:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0006                     _PORTBbits	set	6
   365  000B                     _INTCONbits	set	11
   366  000B                     _INTCON	set	11
   367  0008                     _PORTD	set	8
   368  0007                     _PORTC	set	7
   369  0006                     _PORTB	set	6
   370  0005                     _PORTAbits	set	5
   371  001E                     _ADRESH	set	30
   372  001F                     _ADCON0bits	set	31
   373  000C                     _PIR1bits	set	12
   374  008C                     _PIE1bits	set	140
   375  009F                     _ADCON1bits	set	159
   376  0087                     _TRISC	set	135
   377  0088                     _TRISD	set	136
   378  0086                     _TRISB	set	134
   379  0188                     _ANSEL	set	392
   380  0189                     _ANSELH	set	393
   381                           
   382                           ; #config settings
   383  0000                     
   384                           	psect	cinit
   385  000F                     start_initialization:	
   386  000F                     __initialization:	
   387                           
   388                           ; Clear objects allocated to COMMON
   389  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   390  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   391  0011                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  0011                     __end_of__initialization:	
   395  0011  0183               	clrf	3
   396  0012  120A  118A  2863   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMMON
   399  007A                     __pbssCOMMON:	
   400  007A                     _pot2:	
   401  007A                     	ds	1
   402  007B                     _pot1:	
   403  007B                     	ds	1
   404                           
   405                           	psect	cstackCOMMON
   406  0070                     __pcstackCOMMON:	
   407  0070                     ?_init:	
   408  0070                     ?_interADC:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_Lcd_Init:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_ADC1:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_ADC2:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_ISR:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_ISR:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_Lcd_Cmd:	
   430                           ; 1 bytes @ 0x0
   431                           
   432                           
   433                           ; 1 bytes @ 0x0
   434  0070                     	ds	3
   435  0073                     ??_init:	
   436  0073                     ??_interADC:	
   437                           ; 1 bytes @ 0x3
   438                           
   439  0073                     ??_ADC1:	
   440                           ; 1 bytes @ 0x3
   441                           
   442  0073                     ??_ADC2:	
   443                           ; 1 bytes @ 0x3
   444                           
   445  0073                     ??_Lcd_Cmd:	
   446                           ; 1 bytes @ 0x3
   447                           
   448                           
   449                           ; 1 bytes @ 0x3
   450  0073                     	ds	2
   451  0075                     Lcd_Cmd@a:	
   452                           
   453                           ; 1 bytes @ 0x5
   454  0075                     	ds	1
   455  0076                     ??_Lcd_Init:	
   456                           
   457                           ; 1 bytes @ 0x6
   458  0076                     	ds	2
   459  0078                     ??_main:	
   460                           
   461                           ; 1 bytes @ 0x8
   462  0078                     	ds	2
   463                           
   464                           	psect	maintext
   465  0063                     __pmaintext:	
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 60 in file "main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : B00/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          2       0       0       0       0
   488 ;;      Totals:         2       0       0       0       0
   489 ;;Total ram usage:        2 bytes
   490 ;; Hardware stack levels required when called:    3
   491 ;; This function calls:
   492 ;;		_ADC1
   493 ;;		_ADC2
   494 ;;		_Lcd_Init
   495 ;;		_init
   496 ;;		_interADC
   497 ;; This function is called by:
   498 ;;		Startup code after reset
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _main
   504  0063                     _main:	
   505  0063                     l802:	
   506                           ;incstack = 0
   507                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   508                           
   509                           
   510                           ;main.c: 61:     init();
   511  0063  120A  118A  20B0  120A  118A  	fcall	_init
   512                           
   513                           ;main.c: 62:     interADC();
   514  0068  120A  118A  20FF  120A  118A  	fcall	_interADC
   515  006D                     l804:	
   516                           
   517                           ;main.c: 63:     Lcd_Init();
   518  006D  120A  118A  2015  120A  118A  	fcall	_Lcd_Init
   519  0072                     l806:	
   520                           
   521                           ;main.c: 65:         ADC1();
   522  0072  120A  118A  20ED  120A  118A  	fcall	_ADC1
   523  0077                     l808:	
   524                           
   525                           ;main.c: 66:         _delay((unsigned long)((10)*(4000000/4000.0)));
   526  0077  300D               	movlw	13
   527  0078  00F9               	movwf	??_main+1
   528  0079  30FB               	movlw	251
   529  007A  00F8               	movwf	??_main
   530  007B                     u77:	
   531  007B  0BF8               	decfsz	??_main,f
   532  007C  287B               	goto	u77
   533  007D  0BF9               	decfsz	??_main+1,f
   534  007E  287B               	goto	u77
   535  007F  2880               	nop2
   536                           
   537                           ;main.c: 67:         ADC2();
   538  0080  120A  118A  20DB  120A  118A  	fcall	_ADC2
   539  0085                     l810:	
   540                           
   541                           ;main.c: 68:         _delay((unsigned long)((10)*(4000000/4000.0)));
   542  0085  300D               	movlw	13
   543  0086  00F9               	movwf	??_main+1
   544  0087  30FB               	movlw	251
   545  0088  00F8               	movwf	??_main
   546  0089                     u87:	
   547  0089  0BF8               	decfsz	??_main,f
   548  008A  2889               	goto	u87
   549  008B  0BF9               	decfsz	??_main+1,f
   550  008C  2889               	goto	u87
   551  008D  288E               	nop2
   552  008E  2872               	goto	l806
   553  008F  120A  118A  280C   	ljmp	start
   554  0092                     __end_of_main:	
   555                           
   556                           	psect	text1
   557  00FF                     __ptext1:	
   558 ;; *************** function _interADC *****************
   559 ;; Defined at:
   560 ;;		line 32 in file "ADC.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		None
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _interADC
   590  00FF                     _interADC:	
   591  00FF                     l722:	
   592                           ;incstack = 0
   593                           ; Regs used in _interADC: []
   594                           
   595                           
   596                           ;ADC.c: 33:     PIE1bits.ADIE=1;
   597  00FF  1683               	bsf	3,5	;RP0=1, select bank1
   598  0100  1303               	bcf	3,6	;RP1=0, select bank1
   599  0101  170C               	bsf	12,6	;volatile
   600                           
   601                           ;ADC.c: 34:     PIR1bits.ADIF=1;
   602  0102  1283               	bcf	3,5	;RP0=0, select bank0
   603  0103  1303               	bcf	3,6	;RP1=0, select bank0
   604  0104  170C               	bsf	12,6	;volatile
   605  0105                     l80:	
   606  0105  0008               	return
   607  0106                     __end_of_interADC:	
   608                           
   609                           	psect	text2
   610  00B0                     __ptext2:	
   611 ;; *************** function _init *****************
   612 ;; Defined at:
   613 ;;		line 77 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		status,2
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _init
   643  00B0                     _init:	
   644  00B0                     l710:	
   645                           ;incstack = 0
   646                           ; Regs used in _init: [status,2]
   647                           
   648                           
   649                           ;main.c: 78:     TRISB = 0;
   650  00B0  1683               	bsf	3,5	;RP0=1, select bank1
   651  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   652  00B2  0186               	clrf	6	;volatile
   653                           
   654                           ;main.c: 79:     TRISD = 0;
   655  00B3  0188               	clrf	8	;volatile
   656                           
   657                           ;main.c: 80:     TRISC = 0;
   658  00B4  0187               	clrf	7	;volatile
   659  00B5                     l712:	
   660                           
   661                           ;main.c: 81:     PORTAbits.RA0 = 1;
   662  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   663  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   664  00B7  1405               	bsf	5,0	;volatile
   665  00B8                     l714:	
   666                           
   667                           ;main.c: 82:     PORTAbits.RA1 = 1;
   668  00B8  1485               	bsf	5,1	;volatile
   669                           
   670                           ;main.c: 83:     ANSELH = 0;
   671  00B9  1683               	bsf	3,5	;RP0=1, select bank3
   672  00BA  1703               	bsf	3,6	;RP1=1, select bank3
   673  00BB  0189               	clrf	9	;volatile
   674                           
   675                           ;main.c: 84:     ANSEL = 0;
   676  00BC  0188               	clrf	8	;volatile
   677                           
   678                           ;main.c: 85:     PORTB = 0;
   679  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   680  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   681  00BF  0186               	clrf	6	;volatile
   682                           
   683                           ;main.c: 86:     PORTC = 0;
   684  00C0  0187               	clrf	7	;volatile
   685                           
   686                           ;main.c: 87:     PORTD = 0;
   687  00C1  0188               	clrf	8	;volatile
   688                           
   689                           ;main.c: 88:     INTCON=0;
   690  00C2  018B               	clrf	11	;volatile
   691  00C3                     l716:	
   692                           
   693                           ;main.c: 89:     INTCONbits.GIE = 1;
   694  00C3  178B               	bsf	11,7	;volatile
   695  00C4                     l718:	
   696                           
   697                           ;main.c: 90:     INTCONbits.RBIE = 1;
   698  00C4  158B               	bsf	11,3	;volatile
   699  00C5                     l720:	
   700                           
   701                           ;main.c: 91:     INTCONbits.RBIF = 0;
   702  00C5  100B               	bcf	11,0	;volatile
   703  00C6                     l63:	
   704  00C6  0008               	return
   705  00C7                     __end_of_init:	
   706                           
   707                           	psect	text3
   708  0015                     __ptext3:	
   709 ;; *************** function _Lcd_Init *****************
   710 ;; Defined at:
   711 ;;		line 39 in file "LCD8bits.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, pclath, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          2       0       0       0       0
   728 ;;      Totals:         2       0       0       0       0
   729 ;;Total ram usage:        2 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    2
   732 ;; This function calls:
   733 ;;		_Lcd_Cmd
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _Lcd_Init
   741  0015                     _Lcd_Init:	
   742  0015                     l724:	
   743                           ;incstack = 0
   744                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   745                           
   746                           
   747                           ;LCD8bits.c: 41:   _delay((unsigned long)((15)*(4000000/4000.0)));
   748  0015  3014               	movlw	20
   749  0016  00F7               	movwf	??_Lcd_Init+1
   750  0017  3079               	movlw	121
   751  0018  00F6               	movwf	??_Lcd_Init
   752  0019                     u97:	
   753  0019  0BF6               	decfsz	??_Lcd_Init,f
   754  001A  2819               	goto	u97
   755  001B  0BF7               	decfsz	??_Lcd_Init+1,f
   756  001C  2819               	goto	u97
   757  001D  281E               	nop2
   758  001E                     l726:	
   759                           
   760                           ;LCD8bits.c: 42:   Lcd_Cmd(0x030);
   761  001E  3030               	movlw	48
   762  001F  120A  118A  20C7  120A  118A  	fcall	_Lcd_Cmd
   763  0024                     l728:	
   764                           
   765                           ;LCD8bits.c: 43:  _delay((unsigned long)((5)*(4000000/4000.0)));
   766  0024  3007               	movlw	7
   767  0025  00F7               	movwf	??_Lcd_Init+1
   768  0026  307D               	movlw	125
   769  0027  00F6               	movwf	??_Lcd_Init
   770  0028                     u107:	
   771  0028  0BF6               	decfsz	??_Lcd_Init,f
   772  0029  2828               	goto	u107
   773  002A  0BF7               	decfsz	??_Lcd_Init+1,f
   774  002B  2828               	goto	u107
   775                           
   776                           ;LCD8bits.c: 44:   Lcd_Cmd(0x030);
   777  002C  3030               	movlw	48
   778  002D  120A  118A  20C7  120A  118A  	fcall	_Lcd_Cmd
   779  0032                     l730:	
   780                           
   781                           ;LCD8bits.c: 45:  _delay((unsigned long)((11)*(4000000/4000.0)));
   782  0032  300F               	movlw	15
   783  0033  00F7               	movwf	??_Lcd_Init+1
   784  0034  3047               	movlw	71
   785  0035  00F6               	movwf	??_Lcd_Init
   786  0036                     u117:	
   787  0036  0BF6               	decfsz	??_Lcd_Init,f
   788  0037  2836               	goto	u117
   789  0038  0BF7               	decfsz	??_Lcd_Init+1,f
   790  0039  2836               	goto	u117
   791  003A  283B               	nop2
   792  003B                     l732:	
   793                           
   794                           ;LCD8bits.c: 46:   Lcd_Cmd(0x030);
   795  003B  3030               	movlw	48
   796  003C  120A  118A  20C7  120A  118A  	fcall	_Lcd_Cmd
   797                           
   798                           ;LCD8bits.c: 47:   _delay((unsigned long)((160)*(4000000/4000.0)));
   799  0041  30D0               	movlw	208
   800  0042  00F7               	movwf	??_Lcd_Init+1
   801  0043  30C9               	movlw	201
   802  0044  00F6               	movwf	??_Lcd_Init
   803  0045                     u127:	
   804  0045  0BF6               	decfsz	??_Lcd_Init,f
   805  0046  2845               	goto	u127
   806  0047  0BF7               	decfsz	??_Lcd_Init+1,f
   807  0048  2845               	goto	u127
   808  0049  284A               	nop2
   809  004A                     l734:	
   810                           
   811                           ;LCD8bits.c: 49:   Lcd_Cmd(0x38);
   812  004A  3038               	movlw	56
   813  004B  120A  118A  20C7  120A  118A  	fcall	_Lcd_Cmd
   814  0050                     l736:	
   815                           
   816                           ;LCD8bits.c: 51:   Lcd_Cmd(0x01);
   817  0050  3001               	movlw	1
   818  0051  120A  118A  20C7  120A  118A  	fcall	_Lcd_Cmd
   819  0056                     l738:	
   820                           
   821                           ;LCD8bits.c: 52:   Lcd_Cmd(0x06);
   822  0056  3006               	movlw	6
   823  0057  120A  118A  20C7  120A  118A  	fcall	_Lcd_Cmd
   824  005C                     l740:	
   825                           
   826                           ;LCD8bits.c: 53:   Lcd_Cmd(0x0E);
   827  005C  300E               	movlw	14
   828  005D  120A  118A  20C7  120A  118A  	fcall	_Lcd_Cmd
   829  0062                     l101:	
   830  0062  0008               	return
   831  0063                     __end_of_Lcd_Init:	
   832                           
   833                           	psect	text4
   834  00C7                     __ptext4:	
   835 ;; *************** function _Lcd_Cmd *****************
   836 ;; Defined at:
   837 ;;		line 9 in file "LCD8bits.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  a               1    wreg     unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  a               1    5[COMMON] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         1       0       0       0       0
   853 ;;      Temps:          2       0       0       0       0
   854 ;;      Totals:         3       0       0       0       0
   855 ;;Total ram usage:        3 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_Lcd_Init
   862 ;;		_Lcd_Clear
   863 ;;		_Lcd_Set_Cursor
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _Lcd_Cmd
   869  00C7                     _Lcd_Cmd:	
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in _Lcd_Cmd: [wreg]
   873                           ;Lcd_Cmd@a stored from wreg
   874  00C7  00F5               	movwf	Lcd_Cmd@a
   875  00C8                     l702:	
   876                           
   877                           ;LCD8bits.c: 9: void Lcd_Cmd(char a);LCD8bits.c: 10: {;LCD8bits.c: 11:  PORTBbits.RB6 = 
      +                          0;
   878  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   879  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   880  00CA  1306               	bcf	6,6	;volatile
   881  00CB                     l704:	
   882                           
   883                           ;LCD8bits.c: 12:  PORTD = a;
   884  00CB  0875               	movf	Lcd_Cmd@a,w
   885  00CC  0088               	movwf	8	;volatile
   886  00CD                     l706:	
   887                           
   888                           ;LCD8bits.c: 13:  PORTBbits.RB7 = 1;
   889  00CD  1786               	bsf	6,7	;volatile
   890                           
   891                           ;LCD8bits.c: 14:     _delay((unsigned long)((4)*(4000000/4000.0)));
   892  00CE  3006               	movlw	6
   893  00CF  00F4               	movwf	??_Lcd_Cmd+1
   894  00D0  3030               	movlw	48
   895  00D1  00F3               	movwf	??_Lcd_Cmd
   896  00D2                     u137:	
   897  00D2  0BF3               	decfsz	??_Lcd_Cmd,f
   898  00D3  28D2               	goto	u137
   899  00D4  0BF4               	decfsz	??_Lcd_Cmd+1,f
   900  00D5  28D2               	goto	u137
   901  00D6  0000               	nop
   902  00D7                     l708:	
   903                           
   904                           ;LCD8bits.c: 15:     PORTBbits.RB7 = 0;
   905  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   906  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   907  00D9  1386               	bcf	6,7	;volatile
   908  00DA                     l89:	
   909  00DA  0008               	return
   910  00DB                     __end_of_Lcd_Cmd:	
   911                           
   912                           	psect	text5
   913  00DB                     __ptext5:	
   914 ;; *************** function _ADC2 *****************
   915 ;; Defined at:
   916 ;;		line 18 in file "ADC.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _ADC2
   946  00DB                     _ADC2:	
   947  00DB                     l762:	
   948                           ;incstack = 0
   949                           ; Regs used in _ADC2: [wreg+status,2+status,0]
   950                           
   951                           
   952                           ;ADC.c: 20: ADCON0bits.ADCS=01;
   953  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   954  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   955  00DD  081F               	movf	31,w	;volatile
   956  00DE  393F               	andlw	-193
   957  00DF  3840               	iorlw	64
   958  00E0  009F               	movwf	31	;volatile
   959  00E1                     l764:	
   960                           
   961                           ;ADC.c: 21: ADCON0bits.CHS0=1;
   962  00E1  151F               	bsf	31,2	;volatile
   963  00E2                     l766:	
   964                           
   965                           ;ADC.c: 22: ADCON0bits.CHS1=0;
   966  00E2  119F               	bcf	31,3	;volatile
   967  00E3                     l768:	
   968                           
   969                           ;ADC.c: 23: ADCON0bits.CHS2=0;
   970  00E3  121F               	bcf	31,4	;volatile
   971  00E4                     l770:	
   972                           
   973                           ;ADC.c: 24: ADCON0bits.CHS3=0;
   974  00E4  129F               	bcf	31,5	;volatile
   975  00E5                     l772:	
   976                           
   977                           ;ADC.c: 25: ADCON0bits.GO_nDONE=0;
   978  00E5  109F               	bcf	31,1	;volatile
   979  00E6                     l774:	
   980                           
   981                           ;ADC.c: 26: ADCON0bits.ADON=1;
   982  00E6  141F               	bsf	31,0	;volatile
   983  00E7                     l776:	
   984                           
   985                           ;ADC.c: 27: ADCON1bits.ADFM=0;
   986  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   987  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   988  00E9  139F               	bcf	31,7	;volatile
   989  00EA                     l778:	
   990                           
   991                           ;ADC.c: 28: ADCON1bits.VCFG0=0;
   992  00EA  121F               	bcf	31,4	;volatile
   993  00EB                     l780:	
   994                           
   995                           ;ADC.c: 29: ADCON1bits.VCFG1=0;
   996  00EB  129F               	bcf	31,5	;volatile
   997  00EC                     l77:	
   998  00EC  0008               	return
   999  00ED                     __end_of_ADC2:	
  1000                           
  1001                           	psect	text6
  1002  00ED                     __ptext6:	
  1003 ;; *************** function _ADC1 *****************
  1004 ;; Defined at:
  1005 ;;		line 5 in file "ADC.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0
  1022 ;;      Totals:         0       0       0       0       0
  1023 ;;Total ram usage:        0 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    1
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _ADC1
  1035  00ED                     _ADC1:	
  1036  00ED                     l742:	
  1037                           ;incstack = 0
  1038                           ; Regs used in _ADC1: [wreg+status,2+status,0]
  1039                           
  1040                           
  1041                           ;ADC.c: 7: ADCON0bits.ADCS=01;
  1042  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1043  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1044  00EF  081F               	movf	31,w	;volatile
  1045  00F0  393F               	andlw	-193
  1046  00F1  3840               	iorlw	64
  1047  00F2  009F               	movwf	31	;volatile
  1048  00F3                     l744:	
  1049                           
  1050                           ;ADC.c: 8: ADCON0bits.CHS0=0;
  1051  00F3  111F               	bcf	31,2	;volatile
  1052  00F4                     l746:	
  1053                           
  1054                           ;ADC.c: 9: ADCON0bits.CHS1=0;
  1055  00F4  119F               	bcf	31,3	;volatile
  1056  00F5                     l748:	
  1057                           
  1058                           ;ADC.c: 10: ADCON0bits.CHS2=0;
  1059  00F5  121F               	bcf	31,4	;volatile
  1060  00F6                     l750:	
  1061                           
  1062                           ;ADC.c: 11: ADCON0bits.CHS3=0;
  1063  00F6  129F               	bcf	31,5	;volatile
  1064  00F7                     l752:	
  1065                           
  1066                           ;ADC.c: 12: ADCON0bits.GO_nDONE=0;
  1067  00F7  109F               	bcf	31,1	;volatile
  1068  00F8                     l754:	
  1069                           
  1070                           ;ADC.c: 13: ADCON0bits.ADON=1;
  1071  00F8  141F               	bsf	31,0	;volatile
  1072  00F9                     l756:	
  1073                           
  1074                           ;ADC.c: 14: ADCON1bits.ADFM=0;
  1075  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1076  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1077  00FB  139F               	bcf	31,7	;volatile
  1078  00FC                     l758:	
  1079                           
  1080                           ;ADC.c: 15: ADCON1bits.VCFG0=0;
  1081  00FC  121F               	bcf	31,4	;volatile
  1082  00FD                     l760:	
  1083                           
  1084                           ;ADC.c: 16: ADCON1bits.VCFG1=0;
  1085  00FD  129F               	bcf	31,5	;volatile
  1086  00FE                     l74:	
  1087  00FE  0008               	return
  1088  00FF                     __end_of_ADC1:	
  1089                           
  1090                           	psect	text7
  1091  0092                     __ptext7:	
  1092 ;; *************** function _ISR *****************
  1093 ;; Defined at:
  1094 ;;		line 47 in file "main.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          3       0       0       0       0
  1111 ;;      Totals:         3       0       0       0       0
  1112 ;;Total ram usage:        3 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		Interrupt level 1
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _ISR
  1123  0092                     _ISR:	
  1124  0092                     i1l790:	
  1125                           
  1126                           ;main.c: 48:     if (PIR1bits.ADIF == 1){
  1127  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0094  1F0C               	btfss	12,6	;volatile
  1130  0095  2897               	goto	u1_21
  1131  0096  2898               	goto	u1_20
  1132  0097                     u1_21:	
  1133  0097  28A9               	goto	i1l52
  1134  0098                     u1_20:	
  1135  0098                     i1l792:	
  1136                           
  1137                           ;main.c: 49:         if (ADCON0bits.CHS0 == 0){
  1138  0098  191F               	btfsc	31,2	;volatile
  1139  0099  289B               	goto	u2_21
  1140  009A  289C               	goto	u2_20
  1141  009B                     u2_21:	
  1142  009B  28A0               	goto	i1l796
  1143  009C                     u2_20:	
  1144  009C                     i1l794:	
  1145                           
  1146                           ;main.c: 50:             pot1 = ADRESH;
  1147  009C  081E               	movf	30,w	;volatile
  1148  009D  00F0               	movwf	??_ISR
  1149  009E  0870               	movf	??_ISR,w
  1150  009F  00FB               	movwf	_pot1
  1151  00A0                     i1l796:	
  1152                           
  1153                           ;main.c: 52:         if (ADCON0bits.CHS0 == 1){
  1154  00A0  1D1F               	btfss	31,2	;volatile
  1155  00A1  28A3               	goto	u3_21
  1156  00A2  28A4               	goto	u3_20
  1157  00A3                     u3_21:	
  1158  00A3  28A8               	goto	i1l800
  1159  00A4                     u3_20:	
  1160  00A4                     i1l798:	
  1161                           
  1162                           ;main.c: 53:             pot2 = ADRESH;
  1163  00A4  081E               	movf	30,w	;volatile
  1164  00A5  00F0               	movwf	??_ISR
  1165  00A6  0870               	movf	??_ISR,w
  1166  00A7  00FA               	movwf	_pot2
  1167  00A8                     i1l800:	
  1168                           
  1169                           ;main.c: 55:         PIR1bits.ADIF = 0;
  1170  00A8  130C               	bcf	12,6	;volatile
  1171  00A9                     i1l52:	
  1172  00A9  0872               	movf	??_ISR+2,w
  1173  00AA  008A               	movwf	10
  1174  00AB  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  1175  00AC  0083               	movwf	3
  1176  00AD  0EFE               	swapf	btemp,f
  1177  00AE  0E7E               	swapf	btemp,w
  1178  00AF  0009               	retfie
  1179  00B0                     __end_of_ISR:	
  1180  007E                     btemp	set	126	;btemp
  1181  007E                     wtemp0	set	126
  1182                           
  1183                           	psect	intentry
  1184  0004                     __pintentry:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _ISR: [wreg]
  1187                           
  1188  0004                     interrupt_function:	
  1189  007E                     saved_w	set	btemp
  1190  0004  00FE               	movwf	btemp
  1191  0005  0E03               	swapf	3,w
  1192  0006  00F1               	movwf	??_ISR+1
  1193  0007  080A               	movf	10,w
  1194  0008  00F2               	movwf	??_ISR+2
  1195  0009  120A  118A  2892   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              8 COMMON     2     2      0
                               _ADC1
                               _ADC2
                           _Lcd_Init
                               _init
                           _interADC
 ---------------------------------------------------------------------------------
 (1) _interADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      15
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC2                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1
   _ADC2
   _Lcd_Init
     _Lcd_Cmd
   _init
   _interADC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 16:17:44 2020

             __CFG_CP$OFF 0000                        l63 00C6                        l80 0105  
                      l74 00FE                        l77 00EC                        l89 00DA  
                      u77 007B                        u87 0089                        u97 0019  
                     l101 0062                       l702 00C8                       l710 00B0  
                     l704 00CB                       l720 00C5                       l712 00B5  
                     l706 00CD                       l730 0032                       l714 00B8  
                     l722 00FF                       l810 0085                       l802 0063  
                     l708 00D7                       l740 005C                       l732 003B  
                     l724 0015                       l716 00C3                       l804 006D  
                     l750 00F6                       l742 00ED                       l734 004A  
                     l726 001E                       l718 00C4                       l806 0072  
                     l760 00FD                       l752 00F7                       l744 00F3  
                     l736 0050                       l728 0024                       l808 0077  
                     l754 00F8                       l746 00F4                       l770 00E4  
                     l762 00DB                       l738 0056                       l756 00F9  
                     l748 00F5                       l780 00EB                       l772 00E5  
                     l764 00E1                       l758 00FC                       l774 00E6  
                     l766 00E2                       l776 00E7                       l768 00E3  
                     l778 00EA                       u107 0028                       u117 0036  
                     u127 0045                       u137 00D2              __CFG_CPD$OFF 0000  
                     _ISR 0092              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    _ADC1 00ED                      _ADC2 00DB                      i1l52 00A9  
                    u1_20 0098                      u1_21 0097                      u2_20 009C  
                    u2_21 009B                      u3_20 00A4                      u3_21 00A3  
            __CFG_WRT$OFF 0000                      _main 0063                      _init 00B0  
                    _pot1 007B                      _pot2 007A                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000           __end_of_Lcd_Cmd 00DB  
                   ??_ISR 0070                     ?_ADC1 0070                     ?_ADC2 0070  
                   ?_main 0070                     ?_init 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l800 00A8                     i1l790 0092  
                   i1l792 0098                     i1l794 009C                     i1l796 00A0  
                   i1l798 00A4                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
            __end_of_ADC1 00FF              __end_of_ADC2 00ED          __end_of_Lcd_Init 0063  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0092  
            __end_of_init 00C7                    ??_ADC1 0073                    ??_ADC2 0073  
                  ??_main 0078                    ??_init 0073                    _ADRESH 001E  
                  _ANSELH 0189                    _INTCON 000B                 ??_Lcd_Cmd 0073  
          __CFG_PWRTE$OFF 0000          __end_of_interADC 0106                    saved_w 007E  
 __end_of__initialization 0011            __pcstackCOMMON 0070                 ?_Lcd_Init 0070  
              __pmaintext 0063                __pintentry 0004                ??_Lcd_Init 0076  
                 _Lcd_Cmd 00C7                 ?_interADC 0070                   __ptext1 00FF  
                 __ptext2 00B0                   __ptext3 0015                   __ptext4 00C7  
                 __ptext5 00DB                   __ptext6 00ED                   __ptext7 0092  
            __size_of_ISR 001E      end_of_initialization 0011                ??_interADC 0073  
               _PORTAbits 0005                 _PORTBbits 0006       start_initialization 000F  
             __end_of_ISR 00B0         __size_of_Lcd_Init 004E  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 007A                 ___latbits 0002                  ?_Lcd_Cmd 0070  
       __size_of_interADC 0007         interrupt_function 0004                  _PIE1bits 008C  
                Lcd_Cmd@a 0075                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F                  _Lcd_Init 0015          __size_of_Lcd_Cmd 0014  
       __CFG_BOR4V$BOR40V 0000             __size_of_ADC1 0012             __size_of_ADC2 0012  
                _interADC 00FF             __size_of_main 002F             __size_of_init 0017  
              _INTCONbits 000B                  intlevel1 0000  
