

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 07 12:44:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  000B                     _INTCONbits	set	11
   285  000B                     _INTCON	set	11
   286  0008                     _PORTD	set	8
   287  0007                     _PORTC	set	7
   288  0006                     _PORTB	set	6
   289  001E                     _ADRESH	set	30
   290  001F                     _ADCON0bits	set	31
   291  000C                     _PIR1bits	set	12
   292  008C                     _PIE1bits	set	140
   293  009F                     _ADCON1bits	set	159
   294  0096                     _IOCBbits	set	150
   295  0086                     _TRISBbits	set	134
   296  0087                     _TRISC	set	135
   297  0088                     _TRISD	set	136
   298  0188                     _ANSEL	set	392
   299  0189                     _ANSELH	set	393
   300                           
   301                           ; #config settings
   302  0000                     
   303                           	psect	cinit
   304  000F                     start_initialization:	
   305  000F                     __initialization:	
   306                           
   307                           ; Clear objects allocated to COMMON
   308  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   309  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   310  0011                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  0011                     __end_of__initialization:	
   314  0011  0183               	clrf	3
   315  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMMON
   318  0075                     __pbssCOMMON:	
   319  0075                     _pot2:	
   320  0075                     	ds	1
   321  0076                     _pot1:	
   322  0076                     	ds	1
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:	
   326  0070                     ?_init:	
   327  0070                     ?_interADC:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_ADC1:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_ADC2:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_ISR:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_ISR:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	3
   348  0073                     ??_init:	
   349  0073                     ??_interADC:	
   350                           ; 1 bytes @ 0x3
   351                           
   352  0073                     ??_ADC1:	
   353                           ; 1 bytes @ 0x3
   354                           
   355  0073                     ??_ADC2:	
   356                           ; 1 bytes @ 0x3
   357                           
   358  0073                     ??_main:	
   359                           ; 1 bytes @ 0x3
   360                           
   361                           
   362                           ; 1 bytes @ 0x3
   363  0073                     	ds	2
   364                           
   365                           	psect	maintext
   366  0015                     __pmaintext:	
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 59 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : B00/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0
   388 ;;      Temps:          2       0       0       0       0
   389 ;;      Totals:         2       0       0       0       0
   390 ;;Total ram usage:        2 bytes
   391 ;; Hardware stack levels required when called:    2
   392 ;; This function calls:
   393 ;;		_ADC1
   394 ;;		_ADC2
   395 ;;		_init
   396 ;;		_interADC
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _main
   404  0015                     _main:	
   405  0015                     l740:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   408                           
   409                           
   410                           ;main.c: 60:     init();
   411  0015  120A  118A  205D  120A  118A  	fcall	_init
   412                           
   413                           ;main.c: 61:     interADC();
   414  001A  120A  118A  2099  120A  118A  	fcall	_interADC
   415  001F                     l742:	
   416                           
   417                           ;main.c: 63:         ADC1();
   418  001F  120A  118A  2087  120A  118A  	fcall	_ADC1
   419                           
   420                           ;main.c: 64:         _delay((unsigned long)((10)*(8000000/4000.0)));
   421  0024  301A               	movlw	26
   422  0025  00F4               	movwf	??_main+1
   423  0026  30F8               	movlw	248
   424  0027  00F3               	movwf	??_main
   425  0028                     u47:	
   426  0028  0BF3               	decfsz	??_main,f
   427  0029  2828               	goto	u47
   428  002A  0BF4               	decfsz	??_main+1,f
   429  002B  2828               	goto	u47
   430  002C  0000               	nop
   431  002D                     l744:	
   432                           
   433                           ;main.c: 65:         ADC2();
   434  002D  120A  118A  2075  120A  118A  	fcall	_ADC2
   435  0032                     l746:	
   436                           
   437                           ;main.c: 66:         _delay((unsigned long)((10)*(8000000/4000.0)));
   438  0032  301A               	movlw	26
   439  0033  00F4               	movwf	??_main+1
   440  0034  30F8               	movlw	248
   441  0035  00F3               	movwf	??_main
   442  0036                     u57:	
   443  0036  0BF3               	decfsz	??_main,f
   444  0037  2836               	goto	u57
   445  0038  0BF4               	decfsz	??_main+1,f
   446  0039  2836               	goto	u57
   447  003A  0000               	nop
   448  003B  281F               	goto	l742
   449  003C  120A  118A  280C   	ljmp	start
   450  003F                     __end_of_main:	
   451                           
   452                           	psect	text1
   453  0099                     __ptext1:	
   454 ;; *************** function _interADC *****************
   455 ;; Defined at:
   456 ;;		line 32 in file "ADC.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		None
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    1
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _interADC
   486  0099                     _interADC:	
   487  0099                     l686:	
   488                           ;incstack = 0
   489                           ; Regs used in _interADC: []
   490                           
   491                           
   492                           ;ADC.c: 33:     PIE1bits.ADIE=1;
   493  0099  1683               	bsf	3,5	;RP0=1, select bank1
   494  009A  1303               	bcf	3,6	;RP1=0, select bank1
   495  009B  170C               	bsf	12,6	;volatile
   496                           
   497                           ;ADC.c: 34:     PIR1bits.ADIF=1;
   498  009C  1283               	bcf	3,5	;RP0=0, select bank0
   499  009D  1303               	bcf	3,6	;RP1=0, select bank0
   500  009E  170C               	bsf	12,6	;volatile
   501  009F                     l78:	
   502  009F  0008               	return
   503  00A0                     __end_of_interADC:	
   504                           
   505                           	psect	text2
   506  005D                     __ptext2:	
   507 ;; *************** function _init *****************
   508 ;; Defined at:
   509 ;;		line 75 in file "main.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		status,2
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _init
   539  005D                     _init:	
   540  005D                     l670:	
   541                           ;incstack = 0
   542                           ; Regs used in _init: [status,2]
   543                           
   544                           
   545                           ;main.c: 76:     TRISD = 0;
   546  005D  1683               	bsf	3,5	;RP0=1, select bank1
   547  005E  1303               	bcf	3,6	;RP1=0, select bank1
   548  005F  0188               	clrf	8	;volatile
   549                           
   550                           ;main.c: 77:     TRISC = 0;
   551  0060  0187               	clrf	7	;volatile
   552  0061                     l672:	
   553                           
   554                           ;main.c: 78:     TRISBbits.TRISB1 = 1;
   555  0061  1486               	bsf	6,1	;volatile
   556  0062                     l674:	
   557                           
   558                           ;main.c: 79:     TRISBbits.TRISB4 = 1;
   559  0062  1606               	bsf	6,4	;volatile
   560                           
   561                           ;main.c: 80:     ANSELH = 0;
   562  0063  1683               	bsf	3,5	;RP0=1, select bank3
   563  0064  1703               	bsf	3,6	;RP1=1, select bank3
   564  0065  0189               	clrf	9	;volatile
   565                           
   566                           ;main.c: 81:     ANSEL = 0;
   567  0066  0188               	clrf	8	;volatile
   568                           
   569                           ;main.c: 82:     PORTB = 0;
   570  0067  1283               	bcf	3,5	;RP0=0, select bank0
   571  0068  1303               	bcf	3,6	;RP1=0, select bank0
   572  0069  0186               	clrf	6	;volatile
   573                           
   574                           ;main.c: 83:     PORTC = 0;
   575  006A  0187               	clrf	7	;volatile
   576                           
   577                           ;main.c: 84:     PORTD = 0;
   578  006B  0188               	clrf	8	;volatile
   579                           
   580                           ;main.c: 85:     INTCON=0;
   581  006C  018B               	clrf	11	;volatile
   582  006D                     l676:	
   583                           
   584                           ;main.c: 86:     INTCONbits.GIE = 1;
   585  006D  178B               	bsf	11,7	;volatile
   586  006E                     l678:	
   587                           
   588                           ;main.c: 87:     INTCONbits.RBIE = 1;
   589  006E  158B               	bsf	11,3	;volatile
   590  006F                     l680:	
   591                           
   592                           ;main.c: 88:     INTCONbits.RBIF = 0;
   593  006F  100B               	bcf	11,0	;volatile
   594  0070                     l682:	
   595                           
   596                           ;main.c: 89:     IOCBbits.IOCB4 = 1;
   597  0070  1683               	bsf	3,5	;RP0=1, select bank1
   598  0071  1303               	bcf	3,6	;RP1=0, select bank1
   599  0072  1616               	bsf	22,4	;volatile
   600  0073                     l684:	
   601                           
   602                           ;main.c: 90:     IOCBbits.IOCB1 = 1;
   603  0073  1496               	bsf	22,1	;volatile
   604  0074                     l61:	
   605  0074  0008               	return
   606  0075                     __end_of_init:	
   607                           
   608                           	psect	text3
   609  0075                     __ptext3:	
   610 ;; *************** function _ADC2 *****************
   611 ;; Defined at:
   612 ;;		line 18 in file "ADC.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _ADC2
   642  0075                     _ADC2:	
   643  0075                     l708:	
   644                           ;incstack = 0
   645                           ; Regs used in _ADC2: [wreg+status,2+status,0]
   646                           
   647                           
   648                           ;ADC.c: 20: ADCON0bits.ADCS=01;
   649  0075  1283               	bcf	3,5	;RP0=0, select bank0
   650  0076  1303               	bcf	3,6	;RP1=0, select bank0
   651  0077  081F               	movf	31,w	;volatile
   652  0078  393F               	andlw	-193
   653  0079  3840               	iorlw	64
   654  007A  009F               	movwf	31	;volatile
   655  007B                     l710:	
   656                           
   657                           ;ADC.c: 21: ADCON0bits.CHS0=1;
   658  007B  151F               	bsf	31,2	;volatile
   659  007C                     l712:	
   660                           
   661                           ;ADC.c: 22: ADCON0bits.CHS1=1;
   662  007C  159F               	bsf	31,3	;volatile
   663  007D                     l714:	
   664                           
   665                           ;ADC.c: 23: ADCON0bits.CHS2=0;
   666  007D  121F               	bcf	31,4	;volatile
   667  007E                     l716:	
   668                           
   669                           ;ADC.c: 24: ADCON0bits.CHS3=1;
   670  007E  169F               	bsf	31,5	;volatile
   671  007F                     l718:	
   672                           
   673                           ;ADC.c: 25: ADCON0bits.GO_nDONE=0;
   674  007F  109F               	bcf	31,1	;volatile
   675  0080                     l720:	
   676                           
   677                           ;ADC.c: 26: ADCON0bits.ADON=1;
   678  0080  141F               	bsf	31,0	;volatile
   679  0081                     l722:	
   680                           
   681                           ;ADC.c: 27: ADCON1bits.ADFM=0;
   682  0081  1683               	bsf	3,5	;RP0=1, select bank1
   683  0082  1303               	bcf	3,6	;RP1=0, select bank1
   684  0083  139F               	bcf	31,7	;volatile
   685  0084                     l724:	
   686                           
   687                           ;ADC.c: 28: ADCON1bits.VCFG0=0;
   688  0084  121F               	bcf	31,4	;volatile
   689  0085                     l726:	
   690                           
   691                           ;ADC.c: 29: ADCON1bits.VCFG1=0;
   692  0085  129F               	bcf	31,5	;volatile
   693  0086                     l75:	
   694  0086  0008               	return
   695  0087                     __end_of_ADC2:	
   696                           
   697                           	psect	text4
   698  0087                     __ptext4:	
   699 ;; *************** function _ADC1 *****************
   700 ;; Defined at:
   701 ;;		line 5 in file "ADC.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    1
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _ADC1
   731  0087                     _ADC1:	
   732  0087                     l688:	
   733                           ;incstack = 0
   734                           ; Regs used in _ADC1: [wreg+status,2+status,0]
   735                           
   736                           
   737                           ;ADC.c: 7: ADCON0bits.ADCS=01;
   738  0087  1283               	bcf	3,5	;RP0=0, select bank0
   739  0088  1303               	bcf	3,6	;RP1=0, select bank0
   740  0089  081F               	movf	31,w	;volatile
   741  008A  393F               	andlw	-193
   742  008B  3840               	iorlw	64
   743  008C  009F               	movwf	31	;volatile
   744  008D                     l690:	
   745                           
   746                           ;ADC.c: 8: ADCON0bits.CHS0=0;
   747  008D  111F               	bcf	31,2	;volatile
   748  008E                     l692:	
   749                           
   750                           ;ADC.c: 9: ADCON0bits.CHS1=1;
   751  008E  159F               	bsf	31,3	;volatile
   752  008F                     l694:	
   753                           
   754                           ;ADC.c: 10: ADCON0bits.CHS2=0;
   755  008F  121F               	bcf	31,4	;volatile
   756  0090                     l696:	
   757                           
   758                           ;ADC.c: 11: ADCON0bits.CHS3=1;
   759  0090  169F               	bsf	31,5	;volatile
   760  0091                     l698:	
   761                           
   762                           ;ADC.c: 12: ADCON0bits.GO_nDONE=0;
   763  0091  109F               	bcf	31,1	;volatile
   764  0092                     l700:	
   765                           
   766                           ;ADC.c: 13: ADCON0bits.ADON=1;
   767  0092  141F               	bsf	31,0	;volatile
   768  0093                     l702:	
   769                           
   770                           ;ADC.c: 14: ADCON1bits.ADFM=0;
   771  0093  1683               	bsf	3,5	;RP0=1, select bank1
   772  0094  1303               	bcf	3,6	;RP1=0, select bank1
   773  0095  139F               	bcf	31,7	;volatile
   774  0096                     l704:	
   775                           
   776                           ;ADC.c: 15: ADCON1bits.VCFG0=0;
   777  0096  121F               	bcf	31,4	;volatile
   778  0097                     l706:	
   779                           
   780                           ;ADC.c: 16: ADCON1bits.VCFG1=0;
   781  0097  129F               	bcf	31,5	;volatile
   782  0098                     l72:	
   783  0098  0008               	return
   784  0099                     __end_of_ADC1:	
   785                           
   786                           	psect	text5
   787  003F                     __ptext5:	
   788 ;; *************** function _ISR *****************
   789 ;; Defined at:
   790 ;;		line 46 in file "main.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0
   806 ;;      Temps:          3       0       0       0       0
   807 ;;      Totals:         3       0       0       0       0
   808 ;;Total ram usage:        3 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		Interrupt level 1
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _ISR
   819  003F                     _ISR:	
   820  003F                     i1l728:	
   821                           
   822                           ;main.c: 47:     if (PIR1bits.ADIF == 1){
   823  003F  1283               	bcf	3,5	;RP0=0, select bank0
   824  0040  1303               	bcf	3,6	;RP1=0, select bank0
   825  0041  1F0C               	btfss	12,6	;volatile
   826  0042  2844               	goto	u1_21
   827  0043  2845               	goto	u1_20
   828  0044                     u1_21:	
   829  0044  2856               	goto	i1l50
   830  0045                     u1_20:	
   831  0045                     i1l730:	
   832                           
   833                           ;main.c: 48:         if (ADCON0bits.CHS0 == 0){
   834  0045  191F               	btfsc	31,2	;volatile
   835  0046  2848               	goto	u2_21
   836  0047  2849               	goto	u2_20
   837  0048                     u2_21:	
   838  0048  284D               	goto	i1l734
   839  0049                     u2_20:	
   840  0049                     i1l732:	
   841                           
   842                           ;main.c: 49:             pot1 = ADRESH;
   843  0049  081E               	movf	30,w	;volatile
   844  004A  00F0               	movwf	??_ISR
   845  004B  0870               	movf	??_ISR,w
   846  004C  00F6               	movwf	_pot1
   847  004D                     i1l734:	
   848                           
   849                           ;main.c: 51:         if (ADCON0bits.CHS0 == 1){
   850  004D  1D1F               	btfss	31,2	;volatile
   851  004E  2850               	goto	u3_21
   852  004F  2851               	goto	u3_20
   853  0050                     u3_21:	
   854  0050  2855               	goto	i1l738
   855  0051                     u3_20:	
   856  0051                     i1l736:	
   857                           
   858                           ;main.c: 52:             pot2 = ADRESH;
   859  0051  081E               	movf	30,w	;volatile
   860  0052  00F0               	movwf	??_ISR
   861  0053  0870               	movf	??_ISR,w
   862  0054  00F5               	movwf	_pot2
   863  0055                     i1l738:	
   864                           
   865                           ;main.c: 54:         PIR1bits.ADIF = 0;
   866  0055  130C               	bcf	12,6	;volatile
   867  0056                     i1l50:	
   868  0056  0872               	movf	??_ISR+2,w
   869  0057  008A               	movwf	10
   870  0058  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   871  0059  0083               	movwf	3
   872  005A  0EFE               	swapf	btemp,f
   873  005B  0E7E               	swapf	btemp,w
   874  005C  0009               	retfie
   875  005D                     __end_of_ISR:	
   876  007E                     btemp	set	126	;btemp
   877  007E                     wtemp0	set	126
   878                           
   879                           	psect	intentry
   880  0004                     __pintentry:	
   881                           ;incstack = 0
   882                           ; Regs used in _ISR: [wreg]
   883                           
   884  0004                     interrupt_function:	
   885  007E                     saved_w	set	btemp
   886  0004  00FE               	movwf	btemp
   887  0005  0E03               	swapf	3,w
   888  0006  00F1               	movwf	??_ISR+1
   889  0007  080A               	movf	10,w
   890  0008  00F2               	movwf	??_ISR+2
   891  0009  120A  118A  283F   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                               _ADC1
                               _ADC2
                               _init
                           _interADC
 ---------------------------------------------------------------------------------
 (1) _interADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC2                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1
   _ADC2
   _init
   _interADC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 07 12:44:07 2020

             __CFG_CP$OFF 0000                        l61 0074                        l72 0098  
                      l75 0086                        l78 009F                        u47 0028  
                      u57 0036                       l700 0092                       l702 0093  
                     l710 007B                       l704 0096                       l720 0080  
                     l712 007C                       l706 0097                       l722 0081  
                     l714 007D                       l724 0084                       l716 007E  
                     l708 0075                       l740 0015                       l726 0085  
                     l718 007F                       l670 005D                       l742 001F  
                     l680 006F                       l672 0061                       l744 002D  
                     l690 008D                       l682 0070                       l674 0062  
                     l746 0032                       l692 008E                       l684 0073  
                     l676 006D                       l694 008F                       l678 006E  
                     l686 0099                       l696 0090                       l688 0087  
                     l698 0091              __CFG_CPD$OFF 0000                       _ISR 003F  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      _ADC1 0087  
                    _ADC2 0075                      i1l50 0056                      u1_20 0045  
                    u1_21 0044                      u2_20 0049                      u2_21 0048  
                    u3_20 0051                      u3_21 0050              __CFG_WRT$OFF 0000  
                    _main 0015                      _init 005D                      _pot1 0076  
                    _pot2 0075                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0070                     ?_ADC1 0070  
                   ?_ADC2 0070                     ?_main 0070                     ?_init 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l730 0045  
                   i1l732 0049                     i1l734 004D                     i1l736 0051  
                   i1l728 003F                     i1l738 0055                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISC 0087  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
            __end_of_ADC1 0099              __end_of_ADC2 0087            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 003F              __end_of_init 0075  
                  ??_ADC1 0073                    ??_ADC2 0073                    ??_main 0073  
                  ??_init 0073                    _ADRESH 001E                    _ANSELH 0189  
                  _INTCON 000B            __CFG_PWRTE$OFF 0000          __end_of_interADC 00A0  
                  saved_w 007E   __end_of__initialization 0011            __pcstackCOMMON 0070  
              __pmaintext 0015                __pintentry 0004                 ?_interADC 0070  
                 __ptext1 0099                   __ptext2 005D                   __ptext3 0075  
                 __ptext4 0087                   __ptext5 003F              __size_of_ISR 001E  
    end_of_initialization 0011                ??_interADC 0073                 _TRISBbits 0086  
     start_initialization 000F               __end_of_ISR 005D  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0075                 ___latbits 0002         __size_of_interADC 0007  
       interrupt_function 0004                  _IOCBbits 0096                  _PIE1bits 008C  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
       __CFG_BOR4V$BOR40V 0000             __size_of_ADC1 0012             __size_of_ADC2 0012  
                _interADC 0099             __size_of_main 002A             __size_of_init 0018  
              _INTCONbits 000B                  intlevel1 0000  
