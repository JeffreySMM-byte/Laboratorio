Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Lab-3.X.production.sym \
  --cmf=dist/default/production\Lab-3.X.production.cmf -z -Q16F887 \
  -oC:\Users\jeffr\AppData\Local\Temp\s52c.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Lab-3.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\jeffr\AppData\Local\Temp\s52c.o \
  dist/default/production\Lab-3.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\jeffr\AppData\Local\Temp\s52c.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\Lab-3.X.production.o
                cinit                                 F        F       14        8       0
                intentry                              4        4        8        8       0
                text21                              8C9      8C9       14     1192       0
                text20                              8F1      8F1       18     11E2       0
                text19                              909      909       18     1212       0
                text18                              8DD      8DD       14     11BA       0
                text17                              8AD      8AD        D     115A       0
                text16                              A91      A91       4E     1522       0
                text15                              95A      95A       24     12B4       0
                text14                              8BA      8BA        F     1174       0
                text13                              A4B      A4B       46     1496       0
                text12                              A07      A07       44     140E       0
                text11                              9CB      9CB       3C     1396       0
                text10                              662      662       EA        8       0
                text9                               93C      93C       1E     1278       0
                text8                               B9B      B9B      1DD     1736       0
                text7                               9A2      9A2       29     1344       0
                text6                                23       23      361        8       0
                text5                               D78      D78      288     1AF0       0
                text4                               97E      97E       24     12FC       0
                text3                               74C      74C       7C        8       0
                text2                               ADF      ADF       BC     15BE       0
                text1                               921      921       1B     1242       0
                maintext                            384      384      2DE        8       0
                cstackBANK0                          20       20       4C       20       1
                cstackCOMMON                         70       70        A       70       1
                clrtext                             7F8      7F8        8      FF0       0
                bssBANK1                             A0       A0       10       A0       1
                bssBANK0                             6C       6C        3       20       1
                bssCOMMON                            7A       7A        2       70       1
                strings                             7C8      7C8       30      F90       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       14         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text21                              8C9      8C9       14         0
                text20                              8F1      8F1       18         0
                text19                              909      909       18         0
                text18                              8DD      8DD       14         0
                text17                              8AD      8AD        D         0
                text16                              A91      A91       4E         0
                text15                              95A      95A       24         0
                text14                              8BA      8BA        F         0
                text13                              A4B      A4B       46         0
                text12                              A07      A07       44         0
                text11                              9CB      9CB       3C         0
                text10                              662      662       EA         0
                text9                               93C      93C       1E         0
                text8                               B9B      B9B      1DD         0
                text7                               9A2      9A2       29         0
                text6                                23       23      361         0
                text5                               D78      D78      288         0
                text4                               97E      97E       24         0
                text3                               74C      74C       7C         0
                text2                               ADF      ADF       BC         0
                text1                               921      921       1B         0
                maintext                            384      384      2DE         0
                clrtext                             7F8      7F8        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             7C8      7C8       30         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        A         1
                bssCOMMON                            7A       7A        2         1

        CLASS   BANK0          
                cstackBANK0                          20       20       4C         1
                bssBANK0                             6C       6C        3         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       10         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007C4  0007C8         8       0  CODE        2
                cstackBANK0                    000020  00004F  00006F        20       1  BANK0       1
                cstackCOMMON                   000070  00000C  00007C        70       1  COMMON      1
                bssBANK1                       0000A0  000010  0000B0        A0       1  BANK1       1
                strings                        0007C8  000030  0007F8       F90       0  STRING      2
                clrtext                        0007F8  000008  000800       FF0       0  CODE        2
                text17                         0008AD  00000D  0008BA      115A       0  CODE        2
                text14                         0008BA  00000F  0008C9      1174       0  CODE        2
                text21                         0008C9  000014  0008DD      1192       0  CODE        2
                text18                         0008DD  000014  0008F1      11BA       0  CODE        2
                text20                         0008F1  000018  000909      11E2       0  CODE        2
                text19                         000909  000018  000921      1212       0  CODE        2
                text1                          000921  00001B  00093C      1242       0  CODE        2
                text9                          00093C  00001E  00095A      1278       0  CODE        2
                text15                         00095A  000024  00097E      12B4       0  CODE        2
                text4                          00097E  000024  0009A2      12FC       0  CODE        2
                text7                          0009A2  000029  0009CB      1344       0  CODE        2
                text11                         0009CB  00003C  000A07      1396       0  CODE        2
                text12                         000A07  000044  000A4B      140E       0  CODE        2
                text13                         000A4B  000046  000A91      1496       0  CODE        2
                text16                         000A91  00004E  000ADF      1522       0  CODE        2
                text2                          000ADF  0000BC  000B9B      15BE       0  CODE        2
                text8                          000B9B  0001DD  000D78      1736       0  CODE        2
                text5                          000D78  000288  001000      1AF0       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006F-006F              1           1
        BANK1            00B0-00EF             40           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0800-08AC             AD
                         1000-1FFF            800
        COMMON           007C-007D              2           1
        CONST            0003-0003              1           2
                         0800-08AC             AD
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0800-08AC             AD
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006F-006F              1           1
                         00B0-00EF             40
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0800-08AC             AD
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         0800-08AC             AD
                         1000-1FFF            100

                                  Symbol Table

?__Umul8_16                cstackCOMMON 0072
?___fladd                  cstackCOMMON 0072
?___fldiv                  cstackBANK0  004E
?___flmul                  cstackBANK0  0034
?___flsub                  cstackBANK0  002C
?___fltol                  cstackCOMMON 0072
?___lwdiv                  cstackCOMMON 0072
?___lwmod                  cstackBANK0  0020
?___xxtofl                 cstackCOMMON 0072
?_sprintf                  cstackBANK0  0026
Lcd_Cmd@z                  cstackCOMMON 0074
Lcd_Set_Cursor@temp        cstackCOMMON 0078
Lcd_Set_Cursor@x           cstackCOMMON 0077
Lcd_Set_Cursor@y           cstackCOMMON 0075
Lcd_Write_Char@a           cstackCOMMON 0073
Lcd_Write_Number@str       cstackBANK0  0036
Lcd_Write_Number@var       cstackBANK0  003A
Lcd_Write_String@a         cstackCOMMON 0074
Lcd_Write_String@i         cstackBANK0  0020
_ADC1                      text20       08F1
_ADC2                      text19       0909
_ADCON0bits                (abs)        001F
_ADCON1bits                (abs)        009F
_ADRESH                    (abs)        001E
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_INTCON                    (abs)        000B
_INTCONbits                (abs)        000B
_ISR                       text21       08C9
_Lcd_Clear                 text17       08AD
_Lcd_Cmd                   text18       08DD
_Lcd_Init                  text16       0A91
_Lcd_Set_Cursor            text15       095A
_Lcd_Write_Char            text14       08BA
_Lcd_Write_Number          text9        093C
_Lcd_Write_String          text13       0A4B
_OSCCONbits                (abs)        008F
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTA                     (abs)        0005
_PORTB                     (abs)        0006
_PORTBbits                 (abs)        0006
_PORTC                     (abs)        0007
_PORTD                     (abs)        0008
_TRISAbits                 (abs)        0085
_TRISB                     (abs)        0086
_TRISC                     (abs)        0087
_TRISD                     (abs)        0088
__CFG_BOR4V$BOR40V         (abs)        0000
__CFG_BOREN$OFF            (abs)        0000
__CFG_CP$OFF               (abs)        0000
__CFG_CPD$OFF              (abs)        0000
__CFG_FCMEN$OFF            (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT  (abs)        0000
__CFG_IESO$OFF             (abs)        0000
__CFG_LVP$OFF              (abs)        0000
__CFG_MCLRE$OFF            (abs)        0000
__CFG_PWRTE$OFF            (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__CFG_WRT$OFF              (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssBANK1                bssBANK1     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        0023
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     000F
__Hfunctab                 functab      0000
__Hidloc                   idloc        0000
__Hinit                    init         000C
__Hintentry                intentry     000C
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2009
__Hspace_1                 (abs)        00B0
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssBANK1                bssBANK1     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        000F
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000C
__Lfunctab                 functab      0000
__Lidloc                   idloc        0000
__Linit                    init         000C
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2009
__S1                       (abs)        00B0
__S2                       (abs)        0000
__S3                       (abs)        0000
__Umul8_16                 text7        09A2
__Umul8_16@multiplicand    cstackCOMMON 0072
__Umul8_16@multiplier      cstackBANK0  0024
__Umul8_16@product         cstackBANK0  0020
__Umul8_16@word_mpld       cstackBANK0  0022
___fladd                   text5        0D78
___fladd@a                 cstackCOMMON 0076
___fladd@aexp              cstackBANK0  0029
___fladd@b                 cstackCOMMON 0072
___fladd@bexp              cstackBANK0  002A
___fladd@grs               cstackBANK0  002B
___fladd@signs             cstackBANK0  0028
___fldiv                   text8        0B9B
___fldiv@a                 cstackBANK0  004E
___fldiv@aexp              cstackBANK0  0067
___fldiv@b                 cstackBANK0  0052
___fldiv@bexp              cstackBANK0  0066
___fldiv@grs               cstackBANK0  0062
___fldiv@new_exp           cstackBANK0  0060
___fldiv@rem               cstackBANK0  005B
___fldiv@sign              cstackBANK0  005F
___flmul                   text6        0023
___flmul@a                 cstackBANK0  0038
___flmul@aexp              cstackBANK0  0042
___flmul@b                 cstackBANK0  0034
___flmul@bexp              cstackBANK0  0047
___flmul@grs               cstackBANK0  0043
___flmul@prod              cstackBANK0  0048
___flmul@sign              cstackBANK0  0041
___flmul@temp              cstackBANK0  004C
___flsub                   text4        097E
___flsub@a                 cstackBANK0  002C
___flsub@b                 cstackBANK0  0030
___fltol                   text3        074C
___fltol@exp1              cstackCOMMON 0077
___fltol@f1                cstackCOMMON 0072
___fltol@sign1             cstackCOMMON 0076
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lwdiv                   text12       0A07
___lwdiv@counter           cstackCOMMON 0079
___lwdiv@dividend          cstackCOMMON 0074
___lwdiv@divisor           cstackCOMMON 0072
___lwdiv@quotient          cstackCOMMON 0077
___lwmod                   text11       09CB
___lwmod@counter           cstackBANK0  0025
___lwmod@dividend          cstackBANK0  0022
___lwmod@divisor           cstackBANK0  0020
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
___xxtofl                  text2        0ADF
___xxtofl@arg              cstackBANK0  0022
___xxtofl@exp              cstackBANK0  0021
___xxtofl@sign             cstackBANK0  0020
___xxtofl@val              cstackCOMMON 0072
__end_of_ADC1              text20       0909
__end_of_ADC2              text19       0921
__end_of_ISR               text21       08DD
__end_of_Lcd_Clear         text17       08BA
__end_of_Lcd_Cmd           text18       08F1
__end_of_Lcd_Init          text16       0ADF
__end_of_Lcd_Set_Cursor    text15       097E
__end_of_Lcd_Write_Char    text14       08C9
__end_of_Lcd_Write_Number  text9        095A
__end_of_Lcd_Write_String  text13       0A91
__end_of__Umul8_16         text7        09CB
__end_of___fladd           text5        1000
__end_of___fldiv           text8        0D78
__end_of___flmul           text6        0384
__end_of___flsub           text4        09A2
__end_of___fltol           text3        07C8
__end_of___lwdiv           text12       0A4B
__end_of___lwmod           text11       0A07
__end_of___xxtofl          text2        0B9B
__end_of__initialization   cinit        001F
__end_of__stringtab        strings      07D8
__end_of_dpowers           strings      07E2
__end_of_init              text1        093C
__end_of_main              maintext     0662
__end_of_sprintf           text10       074C
__initialization           cinit        000F
__pbssBANK0                bssBANK0     006C
__pbssBANK1                bssBANK1     00A0
__pbssCOMMON               bssCOMMON    007A
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     0384
__pstrings                 strings      07C8
__ptext1                   text1        0921
__ptext10                  text10       0662
__ptext11                  text11       09CB
__ptext12                  text12       0A07
__ptext13                  text13       0A4B
__ptext14                  text14       08BA
__ptext15                  text15       095A
__ptext16                  text16       0A91
__ptext17                  text17       08AD
__ptext18                  text18       08DD
__ptext19                  text19       0909
__ptext2                   text2        0ADF
__ptext20                  text20       08F1
__ptext21                  text21       08C9
__ptext3                   text3        074C
__ptext4                   text4        097E
__ptext5                   text5        0D78
__ptext6                   text6        0023
__ptext7                   text7        09A2
__ptext8                   text8        0B9B
__ptext9                   text9        093C
__size_of_ADC1             (abs)        0000
__size_of_ADC2             (abs)        0000
__size_of_ISR              (abs)        0000
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_Number (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of__Umul8_16        (abs)        0000
__size_of___fladd          (abs)        0000
__size_of___fldiv          (abs)        0000
__size_of___flmul          (abs)        0000
__size_of___flsub          (abs)        0000
__size_of___fltol          (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___lwmod          (abs)        0000
__size_of___xxtofl         (abs)        0000
__size_of_init             (abs)        0000
__size_of_main             (abs)        0000
__size_of_sprintf          (abs)        0000
__stringbase               strings      07D7
__stringtab                strings      07C8
_adc                       bssCOMMON    007B
_dec1                      bssCOMMON    007A
_dec2                      bssBANK0     006C
_deci1                     bssBANK1     00A4
_deci2                     bssBANK1     00A0
_dpowers                   strings      07D8
_ent1                      bssBANK0     006E
_ent2                      bssBANK0     006D
_init                      text1        0921
_main                      maintext     0384
_pot1                      bssBANK1     00AC
_pot2                      bssBANK1     00A8
_sprintf                   text10       0662
btemp                      (abs)        007E
clear_ram0                 clrtext      07F8
end_of_initialization      cinit        001F
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
sprintf@ap                 cstackBANK0  002C
sprintf@c                  cstackBANK0  0032
sprintf@f                  cstackBANK0  0026
sprintf@flag               cstackBANK0  002D
sprintf@prec               cstackBANK0  002E
sprintf@sp                 cstackBANK0  0031
sprintf@val                cstackBANK0  002F
start                      init         000C
start_initialization       cinit        000F
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 72 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_ADC1
		_ADC2
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_Number
		_Lcd_Write_String
		___fldiv
		___flmul
		___flsub
		___fltol
		___xxtofl
		_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _init *****************
 Defined at:
		line 138 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___xxtofl *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
 Parameters:    Size  Location     Type
  sign            1    wreg     unsigned char 
  val             4    2[COMMON] long 
 Auto vars:     Size  Location     Type
  sign            1    0[BANK0 ] unsigned char 
  arg             4    2[BANK0 ] unsigned long 
  exp             1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    2[COMMON] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          4       0       0       0       0
      Totals:         8       6       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___fltol *****************
 Defined at:
		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 Parameters:    Size  Location     Type
  f1              4    2[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  exp1            1    7[COMMON] unsigned char 
  sign1           1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    2[COMMON] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       5       0       0       0
      Totals:         6       5       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___flsub *****************
 Defined at:
		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
 Parameters:    Size  Location     Type
  a               4   12[BANK0 ] long 
  b               4   16[BANK0 ] long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   12[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___fladd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___fladd *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
 Parameters:    Size  Location     Type
  b               4    2[COMMON] long 
  a               4    6[COMMON] long 
 Auto vars:     Size  Location     Type
  grs             1   11[BANK0 ] unsigned char 
  bexp            1   10[BANK0 ] unsigned char 
  aexp            1    9[BANK0 ] unsigned char 
  signs           1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    2[COMMON] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         8       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       8       0       0       0
      Totals:         8      12       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___flsub
 This function uses a non-reentrant model


 *************** function ___flmul *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
 Parameters:    Size  Location     Type
  b               4   20[BANK0 ] unsigned char 
  a               4   24[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  prod            4   40[BANK0 ] struct .
  grs             4   35[BANK0 ] unsigned long 
  temp            2   44[BANK0 ] struct .
  bexp            1   39[BANK0 ] unsigned char 
  aexp            1   34[BANK0 ] unsigned char 
  sign            1   33[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   20[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0      13       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      26       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		__Umul8_16
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __Umul8_16 *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    2[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    4[BANK0 ] unsigned char 
  word_mpld       2    2[BANK0 ] unsigned int 
  product         2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    2[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       5       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___flmul
 This function uses a non-reentrant model


 *************** function ___fldiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
 Parameters:    Size  Location     Type
  a               4   46[BANK0 ] unsigned int 
  b               4   50[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  grs             4   66[BANK0 ] unsigned long 
  rem             4   59[BANK0 ] unsigned long 
  new_exp         2   64[BANK0 ] int 
  aexp            1   71[BANK0 ] unsigned char 
  bexp            1   70[BANK0 ] unsigned char 
  sign            1   63[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   46[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0      13       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      26       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Number *****************
 Defined at:
		line 72 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  var             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  var             1   26[BANK0 ] unsigned char 
  str             4   22[BANK0 ] unsigned char [4]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Write_String
		_sprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> Lcd_Write_Number@str(4), 
  f               1    6[BANK0 ] PTR const unsigned char 
		 -> STR_7(3), 
 Auto vars:     Size  Location     Type
  sp              1   17[BANK0 ] PTR unsigned char 
		 -> Lcd_Write_Number@str(4), 
  tmpval          4    0        struct .
  val             2   15[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   18[BANK0 ] unsigned char 
  prec            1   14[BANK0 ] char 
  flag            1   13[BANK0 ] unsigned char 
  ap              1   12[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_Lcd_Write_Number
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] unsigned int 
  dividend        2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    2[COMMON] unsigned int 
  dividend        2    4[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    7[COMMON] unsigned int 
  counter         1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    2[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 65 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  a               2    4[COMMON] PTR unsigned char 
		 -> Lcd_Write_Number@str(4), STR_5(2), STR_3(5), STR_2(5), 
		 -> STR_1(5), 
 Auto vars:     Size  Location     Type
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          3       0       0       0       0
      Totals:         5       2       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
		_Lcd_Write_Number
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 56 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 24 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    7[COMMON] unsigned char 
  temp            1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 39 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 18 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 9 in file "LCD8bits.c"
 Parameters:    Size  Location     Type
  z               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  z               1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
 This function uses a non-reentrant model


 *************** function _ADC2 *****************
 Defined at:
		line 27 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC1 *****************
 Defined at:
		line 5 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 52 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	0A07	0000	69

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c estimated size: 69

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c
		___fltol       		CODE           	074C	0000	125

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c estimated size: 125

LCD8bits.c
		_Lcd_Write_String		CODE           	0A4B	0000	71
		_Lcd_Write_Number		CODE           	093C	0000	31
		_Lcd_Init      		CODE           	0A91	0000	79
		_Lcd_Write_Char		CODE           	08BA	0000	16
		_Lcd_Cmd       		CODE           	08DD	0000	21
		_Lcd_Set_Cursor		CODE           	095A	0000	37
		_Lcd_Clear     		CODE           	08AD	0000	14

LCD8bits.c estimated size: 269

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c
		___flmul       		CODE           	0023	0000	866

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c estimated size: 866

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c
		__Umul8_16     		CODE           	09A2	0000	42

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c estimated size: 42

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c
		___fldiv       		CODE           	0B9B	0000	478

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c estimated size: 478

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c
		___xxtofl      		CODE           	0ADF	0000	189

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c estimated size: 189

shared
		__stringtab    		STRING         	07C8	0000	17
		_dpowers       		STRING         	07D8	0000	11
		__initialization		CODE           	000F	0000	17

shared estimated size: 45

ADC.c
		_ADC1          		CODE           	08F1	0000	25
		_ADC2          		CODE           	0909	0000	25

ADC.c estimated size: 50

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	09CB	0000	61

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c estimated size: 61

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c
		___flsub       		CODE           	097E	0000	37
		___fladd       		CODE           	0D78	0000	649

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c estimated size: 686

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c
		_sprintf       		CODE           	0662	0000	235

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c estimated size: 235

main.c
		_init          		CODE           	0921	0000	28
		_ISR           		CODE           	08C9	0000	21
		_main          		CODE           	0384	0000	735

main.c estimated size: 784

