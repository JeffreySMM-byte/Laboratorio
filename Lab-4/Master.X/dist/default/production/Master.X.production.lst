

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 12:14:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0008                     _PORTD	set	8
   367  0006                     _PORTB	set	6
   368  0005                     _PORTAbits	set	5
   369  0007                     _PORTCbits	set	7
   370  001A                     _RCREG	set	26
   371  000C                     _PIR1bits	set	12
   372  0019                     _TXREG	set	25
   373  0018                     _RCSTA	set	24
   374  000B                     _INTCONbits	set	11
   375  0013                     _SSPBUF	set	19
   376  0014                     _SSPCON	set	20
   377  0085                     _TRISAbits	set	133
   378  0088                     _TRISD	set	136
   379  0086                     _TRISB	set	134
   380  0098                     _TXSTAbits	set	152
   381  0099                     _SPBRG	set	153
   382  0098                     _TXSTA	set	152
   383  008C                     _PIE1bits	set	140
   384  0087                     _TRISCbits	set	135
   385  0094                     _SSPSTATbits	set	148
   386  0094                     _SSPSTAT	set	148
   387  043A                     _TRISC2	set	1082
   388  043B                     _TRISC3	set	1083
   389  043C                     _TRISC4	set	1084
   390  043D                     _TRISC5	set	1085
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393  0187                     _BAUDCTLbits	set	391
   394                           
   395                           ; #config settings
   396  0000                     
   397                           	psect	cinit
   398  000F                     start_initialization:	
   399  000F                     __initialization:	
   400                           
   401                           ; Clear objects allocated to COMMON
   402  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   403  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   404  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   405  0012                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0012                     __end_of__initialization:	
   409  0012  0183               	clrf	3
   410  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  0077                     __pbssCOMMON:	
   414  0077                     _adc2:	
   415  0077                     	ds	1
   416  0078                     _adc1:	
   417  0078                     	ds	1
   418  0079                     _datos:	
   419  0079                     	ds	1
   420                           
   421                           	psect	cstackCOMMON
   422  0070                     __pcstackCOMMON:	
   423  0070                     ?_setup:	
   424  0070                     ?_spiReceiveWait:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_spiRead:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_serial:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_isr:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_isr:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_main:	
   443                           ; 1 bytes @ 0x0
   444                           
   445                           
   446                           ; 1 bytes @ 0x0
   447  0070                     	ds	3
   448  0073                     ?_spiInit:	
   449  0073                     ??_spiReceiveWait:	
   450                           ; 1 bytes @ 0x3
   451                           
   452  0073                     ??_spiWrite:	
   453                           ; 1 bytes @ 0x3
   454                           
   455  0073                     ??_spiRead:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     ??_serial:	
   459                           ; 1 bytes @ 0x3
   460                           
   461  0073                     ?_enviar:	
   462                           ; 1 bytes @ 0x3
   463                           
   464  0073                     spiInit@sDataSample:	
   465                           ; 1 bytes @ 0x3
   466                           
   467  0073                     spiWrite@dat:	
   468                           ; 1 bytes @ 0x3
   469                           
   470  0073                     enviar@dat:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 2 bytes @ 0x3
   475  0073                     	ds	1
   476  0074                     spiInit@sClockIdle:	
   477                           
   478                           ; 1 bytes @ 0x4
   479  0074                     	ds	1
   480  0075                     ??_enviar:	
   481  0075                     spiInit@sTransmitEdge:	
   482                           ; 1 bytes @ 0x5
   483                           
   484                           
   485                           ; 1 bytes @ 0x5
   486  0075                     	ds	1
   487  0076                     ??_spiInit:	
   488  0076                     spiInit@sType:	
   489                           ; 1 bytes @ 0x6
   490                           
   491                           
   492                           ; 1 bytes @ 0x6
   493  0076                     	ds	1
   494  0077                     ??_setup:	
   495                           
   496                           	psect	cstackBANK0
   497  0020                     __pcstackBANK0:	
   498                           ; 1 bytes @ 0x7
   499                           
   500  0020                     ??_main:	
   501                           
   502                           ; 1 bytes @ 0x0
   503  0020                     	ds	2
   504                           
   505                           	psect	maintext
   506  0016                     __pmaintext:	
   507 ;;
   508 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   509 ;;
   510 ;; *************** function _main *****************
   511 ;; Defined at:
   512 ;;		line 68 in file "master.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, pclath, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : B00/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0
   528 ;;      Temps:          0       2       0       0       0
   529 ;;      Totals:         0       2       0       0       0
   530 ;;Total ram usage:        2 bytes
   531 ;; Hardware stack levels required when called:    3
   532 ;; This function calls:
   533 ;;		_enviar
   534 ;;		_serial
   535 ;;		_setup
   536 ;;		_spiRead
   537 ;;		_spiWrite
   538 ;; This function is called by:
   539 ;;		Startup code after reset
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _main
   545  0016                     _main:	
   546  0016                     l854:	
   547                           ;incstack = 0
   548                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   549                           
   550                           
   551                           ;master.c: 69:     setup();
   552  0016  120A  118A  2092  120A  118A  	fcall	_setup
   553                           
   554                           ;master.c: 70:     serial();
   555  001B  120A  118A  20C6  120A  118A  	fcall	_serial
   556  0020                     l856:	
   557                           
   558                           ;master.c: 75:        PORTCbits.RC2 = 0;
   559  0020  1283               	bcf	3,5	;RP0=0, select bank0
   560  0021  1303               	bcf	3,6	;RP1=0, select bank0
   561  0022  1107               	bcf	7,2	;volatile
   562  0023                     l858:	
   563                           
   564                           ;master.c: 76:        _delay((unsigned long)((1)*(4000000/4000.0)));
   565  0023  30C7               	movlw	199
   566  0024  1283               	bcf	3,5	;RP0=0, select bank0
   567  0025  1303               	bcf	3,6	;RP1=0, select bank0
   568  0026  00A0               	movwf	??_main
   569  0027                     u107:	
   570  0027  2828               	nop2
   571  0028  0BA0               	decfsz	??_main,f
   572  0029  2827               	goto	u107
   573  002A  282B               	nop2
   574  002B                     l860:	
   575                           
   576                           ;master.c: 78:        spiWrite(1);
   577  002B  3001               	movlw	1
   578  002C  120A  118A  210B  120A  118A  	fcall	_spiWrite
   579  0031                     l862:	
   580                           
   581                           ;master.c: 79:        adc1 = spiRead();
   582  0031  120A  118A  20FB  120A  118A  	fcall	_spiRead
   583  0036  1283               	bcf	3,5	;RP0=0, select bank0
   584  0037  1303               	bcf	3,6	;RP1=0, select bank0
   585  0038  00A0               	movwf	??_main
   586  0039  0820               	movf	??_main,w
   587  003A  00F8               	movwf	_adc1
   588  003B                     l864:	
   589                           
   590                           ;master.c: 80:        _delay((unsigned long)((10)*(4000000/4000.0)));
   591  003B  300D               	movlw	13
   592  003C  1283               	bcf	3,5	;RP0=0, select bank0
   593  003D  1303               	bcf	3,6	;RP1=0, select bank0
   594  003E  00A1               	movwf	??_main+1
   595  003F  30FB               	movlw	251
   596  0040  00A0               	movwf	??_main
   597  0041                     u117:	
   598  0041  0BA0               	decfsz	??_main,f
   599  0042  2841               	goto	u117
   600  0043  0BA1               	decfsz	??_main+1,f
   601  0044  2841               	goto	u117
   602                           
   603                           ;master.c: 82:        spiWrite(2);
   604  0045  3002               	movlw	2
   605  0046  120A  118A  210B  120A  118A  	fcall	_spiWrite
   606                           
   607                           ;master.c: 83:        adc2 = spiRead();
   608  004B  120A  118A  20FB  120A  118A  	fcall	_spiRead
   609  0050  1283               	bcf	3,5	;RP0=0, select bank0
   610  0051  1303               	bcf	3,6	;RP1=0, select bank0
   611  0052  00A0               	movwf	??_main
   612  0053  0820               	movf	??_main,w
   613  0054  00F7               	movwf	_adc2
   614  0055                     l866:	
   615                           
   616                           ;master.c: 84:        _delay((unsigned long)((10)*(4000000/4000.0)));
   617  0055  300D               	movlw	13
   618  0056  1283               	bcf	3,5	;RP0=0, select bank0
   619  0057  1303               	bcf	3,6	;RP1=0, select bank0
   620  0058  00A1               	movwf	??_main+1
   621  0059  30FB               	movlw	251
   622  005A  00A0               	movwf	??_main
   623  005B                     u127:	
   624  005B  0BA0               	decfsz	??_main,f
   625  005C  285B               	goto	u127
   626  005D  0BA1               	decfsz	??_main+1,f
   627  005E  285B               	goto	u127
   628  005F                     l868:	
   629                           
   630                           ;master.c: 86:        PORTCbits.RC2 = 1;
   631  005F  1283               	bcf	3,5	;RP0=0, select bank0
   632  0060  1303               	bcf	3,6	;RP1=0, select bank0
   633  0061  1507               	bsf	7,2	;volatile
   634  0062                     l870:	
   635                           
   636                           ;master.c: 88:        if(PORTAbits.RA0){
   637  0062  1C05               	btfss	5,0	;volatile
   638  0063  2865               	goto	u91
   639  0064  2866               	goto	u90
   640  0065                     u91:	
   641  0065  2869               	goto	l874
   642  0066                     u90:	
   643  0066                     l872:	
   644                           
   645                           ;master.c: 89:            PORTB = adc1;
   646  0066  0878               	movf	_adc1,w
   647  0067  0086               	movwf	6	;volatile
   648                           
   649                           ;master.c: 90:        }else{
   650  0068  286B               	goto	l876
   651  0069                     l874:	
   652                           
   653                           ;master.c: 91:            PORTB = adc2;
   654  0069  0877               	movf	_adc2,w
   655  006A  0086               	movwf	6	;volatile
   656  006B                     l876:	
   657                           
   658                           ;master.c: 94:        enviar(adc1);
   659  006B  0878               	movf	_adc1,w
   660  006C  00A0               	movwf	??_main
   661  006D  01A1               	clrf	??_main+1
   662  006E  0820               	movf	??_main,w
   663  006F  00F3               	movwf	enviar@dat
   664  0070  0821               	movf	??_main+1,w
   665  0071  00F4               	movwf	enviar@dat+1
   666  0072  120A  118A  20F0  120A  118A  	fcall	_enviar
   667  0077                     l878:	
   668                           
   669                           ;master.c: 95:        enviar(adc2);
   670  0077  0877               	movf	_adc2,w
   671  0078  1283               	bcf	3,5	;RP0=0, select bank0
   672  0079  1303               	bcf	3,6	;RP1=0, select bank0
   673  007A  00A0               	movwf	??_main
   674  007B  01A1               	clrf	??_main+1
   675  007C  0820               	movf	??_main,w
   676  007D  00F3               	movwf	enviar@dat
   677  007E  0821               	movf	??_main+1,w
   678  007F  00F4               	movwf	enviar@dat+1
   679  0080  120A  118A  20F0  120A  118A  	fcall	_enviar
   680  0085                     l880:	
   681                           
   682                           ;master.c: 96:        enviar(193);
   683  0085  30C1               	movlw	193
   684  0086  00F3               	movwf	enviar@dat
   685  0087  3000               	movlw	0
   686  0088  00F4               	movwf	enviar@dat+1
   687  0089  120A  118A  20F0  120A  118A  	fcall	_enviar
   688  008E  2820               	goto	l856
   689  008F  120A  118A  280C   	ljmp	start
   690  0092                     __end_of_main:	
   691                           
   692                           	psect	text1
   693  010B                     __ptext1:	
   694 ;; *************** function _spiWrite *****************
   695 ;; Defined at:
   696 ;;		line 35 in file "SPI.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  dat             1    wreg     unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  dat             1    3[COMMON] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         1       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0
   713 ;;      Totals:         1       0       0       0       0
   714 ;;Total ram usage:        1 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _spiWrite
   726  010B                     _spiWrite:	
   727                           
   728                           ;incstack = 0
   729                           ; Regs used in _spiWrite: [wreg]
   730                           ;spiWrite@dat stored from wreg
   731  010B  00F3               	movwf	spiWrite@dat
   732  010C                     l732:	
   733                           
   734                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   735  010C  0873               	movf	spiWrite@dat,w
   736  010D  1283               	bcf	3,5	;RP0=0, select bank0
   737  010E  1303               	bcf	3,6	;RP1=0, select bank0
   738  010F  0093               	movwf	19	;volatile
   739  0110                     l28:	
   740  0110  0008               	return
   741  0111                     __end_of_spiWrite:	
   742                           
   743                           	psect	text2
   744  00FB                     __ptext2:	
   745 ;; *************** function _spiRead *****************
   746 ;; Defined at:
   747 ;;		line 48 in file "SPI.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      unsigned char 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    2
   768 ;; This function calls:
   769 ;;		_spiReceiveWait
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _spiRead
   777  00FB                     _spiRead:	
   778  00FB                     l734:	
   779                           ;incstack = 0
   780                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   781                           
   782                           
   783                           ;SPI.c: 50:     spiReceiveWait();
   784  00FB  120A  118A  2104  120A  118A  	fcall	_spiReceiveWait
   785  0100                     l736:	
   786                           
   787                           ;SPI.c: 51:     return(SSPBUF);
   788  0100  1283               	bcf	3,5	;RP0=0, select bank0
   789  0101  1303               	bcf	3,6	;RP1=0, select bank0
   790  0102  0813               	movf	19,w	;volatile
   791  0103                     l36:	
   792  0103  0008               	return
   793  0104                     __end_of_spiRead:	
   794                           
   795                           	psect	text3
   796  0104                     __ptext3:	
   797 ;; *************** function _spiReceiveWait *****************
   798 ;; Defined at:
   799 ;;		line 30 in file "SPI.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		None
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       0       0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    1
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_spiRead
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _spiReceiveWait
   829  0104                     _spiReceiveWait:	
   830  0104                     l730:	
   831                           ;incstack = 0
   832                           ; Regs used in _spiReceiveWait: []
   833                           
   834  0104                     l22:	
   835                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
   836                           
   837  0104  1683               	bsf	3,5	;RP0=1, select bank1
   838  0105  1303               	bcf	3,6	;RP1=0, select bank1
   839  0106  1C14               	btfss	20,0	;volatile
   840  0107  2909               	goto	u21
   841  0108  290A               	goto	u20
   842  0109                     u21:	
   843  0109  2904               	goto	l22
   844  010A                     u20:	
   845  010A                     l25:	
   846  010A  0008               	return
   847  010B                     __end_of_spiReceiveWait:	
   848                           
   849                           	psect	text4
   850  0092                     __ptext4:	
   851 ;; *************** function _setup *****************
   852 ;; Defined at:
   853 ;;		line 105 in file "master.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, pclath, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    2
   874 ;; This function calls:
   875 ;;		_spiInit
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _setup
   883  0092                     _setup:	
   884  0092                     l816:	
   885                           ;incstack = 0
   886                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   887                           
   888                           
   889                           ;master.c: 106:     ANSEL = 0;
   890  0092  1683               	bsf	3,5	;RP0=1, select bank3
   891  0093  1703               	bsf	3,6	;RP1=1, select bank3
   892  0094  0188               	clrf	8	;volatile
   893                           
   894                           ;master.c: 107:     ANSELH = 0;
   895  0095  0189               	clrf	9	;volatile
   896  0096                     l818:	
   897                           
   898                           ;master.c: 108:     TRISC2 = 0;
   899  0096  1683               	bsf	3,5	;RP0=1, select bank1
   900  0097  1303               	bcf	3,6	;RP1=0, select bank1
   901  0098  1107               	bcf	7,2	;volatile
   902                           
   903                           ;master.c: 109:     TRISB = 0;
   904  0099  0186               	clrf	6	;volatile
   905                           
   906                           ;master.c: 110:     TRISD = 0;
   907  009A  0188               	clrf	8	;volatile
   908                           
   909                           ;master.c: 111:     PORTB = 0;
   910  009B  1283               	bcf	3,5	;RP0=0, select bank0
   911  009C  1303               	bcf	3,6	;RP1=0, select bank0
   912  009D  0186               	clrf	6	;volatile
   913                           
   914                           ;master.c: 112:     PORTD = 0;
   915  009E  0188               	clrf	8	;volatile
   916  009F                     l820:	
   917                           
   918                           ;master.c: 113:     TRISAbits.TRISA0 = 1;
   919  009F  1683               	bsf	3,5	;RP0=1, select bank1
   920  00A0  1303               	bcf	3,6	;RP1=0, select bank1
   921  00A1  1405               	bsf	5,0	;volatile
   922  00A2                     l822:	
   923                           
   924                           ;master.c: 114:     PORTCbits.RC2 = 1;
   925  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   926  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   927  00A4  1507               	bsf	7,2	;volatile
   928  00A5                     l824:	
   929                           
   930                           ;master.c: 115:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   931  00A5  01F3               	clrf	spiInit@sDataSample
   932  00A6  01F4               	clrf	spiInit@sClockIdle
   933  00A7  01F5               	clrf	spiInit@sTransmitEdge
   934  00A8  3020               	movlw	32
   935  00A9  120A  118A  20AF  120A  118A  	fcall	_spiInit
   936  00AE                     l128:	
   937  00AE  0008               	return
   938  00AF                     __end_of_setup:	
   939                           
   940                           	psect	text5
   941  00AF                     __ptext5:	
   942 ;; *************** function _spiInit *****************
   943 ;; Defined at:
   944 ;;		line 12 in file "SPI.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  sType           1    wreg     enum E1264
   947 ;;  sDataSample     1    3[COMMON] enum E1272
   948 ;;  sClockIdle      1    4[COMMON] enum E1276
   949 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  sType           1    6[COMMON] enum E1264
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         3       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0
   964 ;;      Totals:         4       0       0       0       0
   965 ;;Total ram usage:        4 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_setup
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _spiInit
   977  00AF                     _spiInit:	
   978                           
   979                           ;incstack = 0
   980                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   981                           ;spiInit@sType stored from wreg
   982  00AF  00F6               	movwf	spiInit@sType
   983  00B0                     l802:	
   984                           
   985                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   986  00B0  1683               	bsf	3,5	;RP0=1, select bank1
   987  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   988  00B2  1287               	bcf	7,5	;volatile
   989                           
   990                           ;SPI.c: 15:     TRISC4 = 1;
   991  00B3  1607               	bsf	7,4	;volatile
   992                           
   993                           ;SPI.c: 16:     if(sType & 0b00000100)
   994  00B4  1D76               	btfss	spiInit@sType,2
   995  00B5  28B7               	goto	u61
   996  00B6  28B8               	goto	u60
   997  00B7                     u61:	
   998  00B7  28BC               	goto	l808
   999  00B8                     u60:	
  1000  00B8                     l804:	
  1001                           
  1002                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  1003  00B8  0875               	movf	spiInit@sTransmitEdge,w
  1004  00B9  0094               	movwf	20	;volatile
  1005  00BA                     l806:	
  1006                           
  1007                           ;SPI.c: 19:         TRISC3 = 1;
  1008  00BA  1587               	bsf	7,3	;volatile
  1009                           
  1010                           ;SPI.c: 20:     }
  1011  00BB  28C0               	goto	l18
  1012  00BC                     l808:	
  1013                           
  1014                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  1015  00BC  0873               	movf	spiInit@sDataSample,w
  1016  00BD  0475               	iorwf	spiInit@sTransmitEdge,w
  1017  00BE  0094               	movwf	20	;volatile
  1018  00BF                     l810:	
  1019                           
  1020                           ;SPI.c: 24:         TRISC3 = 0;
  1021  00BF  1187               	bcf	7,3	;volatile
  1022  00C0                     l18:	
  1023                           ;SPI.c: 25:     }
  1024                           
  1025                           
  1026                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  1027  00C0  0876               	movf	spiInit@sType,w
  1028  00C1  0474               	iorwf	spiInit@sClockIdle,w
  1029  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00C4  0094               	movwf	20	;volatile
  1032  00C5                     l19:	
  1033  00C5  0008               	return
  1034  00C6                     __end_of_spiInit:	
  1035                           
  1036                           	psect	text6
  1037  00C6                     __ptext6:	
  1038 ;; *************** function _serial *****************
  1039 ;; Defined at:
  1040 ;;		line 7 in file "USART.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0
  1057 ;;      Totals:         0       0       0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _serial
  1070  00C6                     _serial:	
  1071  00C6                     l740:	
  1072                           ;incstack = 0
  1073                           ; Regs used in _serial: [wreg]
  1074                           
  1075                           
  1076                           ;USART.c: 8:     INTCONbits.GIE = 1;
  1077  00C6  178B               	bsf	11,7	;volatile
  1078                           
  1079                           ;USART.c: 9:     INTCONbits.PEIE = 1;
  1080  00C7  170B               	bsf	11,6	;volatile
  1081                           
  1082                           ;USART.c: 10:     TRISCbits.TRISC7 = 1;
  1083  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1084  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1085  00CA  1787               	bsf	7,7	;volatile
  1086                           
  1087                           ;USART.c: 11:     TRISCbits.TRISC6 = 0;
  1088  00CB  1307               	bcf	7,6	;volatile
  1089                           
  1090                           ;USART.c: 12:     PIE1bits.RCIE = 1;
  1091  00CC  168C               	bsf	12,5	;volatile
  1092  00CD                     l742:	
  1093                           
  1094                           ;USART.c: 13:     TXSTA = 0b00100110;
  1095  00CD  3026               	movlw	38
  1096  00CE  0098               	movwf	24	;volatile
  1097                           
  1098                           ;USART.c: 14:     RCSTA = 0b10010000;
  1099  00CF  3090               	movlw	144
  1100  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1101  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1102  00D2  0098               	movwf	24	;volatile
  1103  00D3                     l744:	
  1104                           
  1105                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1106  00D3  1683               	bsf	3,5	;RP0=1, select bank3
  1107  00D4  1703               	bsf	3,6	;RP1=1, select bank3
  1108  00D5  1587               	bsf	7,3	;volatile
  1109                           
  1110                           ;USART.c: 16:     SPBRG = 103;
  1111  00D6  3067               	movlw	103
  1112  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1113  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1114  00D9  0099               	movwf	25	;volatile
  1115  00DA                     l57:	
  1116  00DA  0008               	return
  1117  00DB                     __end_of_serial:	
  1118                           
  1119                           	psect	text7
  1120  00F0                     __ptext7:	
  1121 ;; *************** function _enviar *****************
  1122 ;; Defined at:
  1123 ;;		line 21 in file "USART.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  dat             2    3[COMMON] int 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         2       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         2       0       0       0       0
  1141 ;;Total ram usage:        2 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           
  1152                           ;psect for function _enviar
  1153  00F0                     _enviar:	
  1154  00F0                     l812:	
  1155                           ;incstack = 0
  1156                           ; Regs used in _enviar: [wreg]
  1157                           
  1158  00F0                     l60:	
  1159                           ;USART.c: 29:     }
  1160                           
  1161                           
  1162                           ;USART.c: 28:     while (TXSTAbits.TRMT == 0){
  1163  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1164  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  1165  00F2  1C98               	btfss	24,1	;volatile
  1166  00F3  28F5               	goto	u71
  1167  00F4  28F6               	goto	u70
  1168  00F5                     u71:	
  1169  00F5  28F0               	goto	l60
  1170  00F6                     u70:	
  1171  00F6                     l814:	
  1172                           
  1173                           ;USART.c: 30:     TXREG = dat;
  1174  00F6  0873               	movf	enviar@dat,w
  1175  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1176  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1177  00F9  0099               	movwf	25	;volatile
  1178  00FA                     l63:	
  1179  00FA  0008               	return
  1180  00FB                     __end_of_enviar:	
  1181                           
  1182                           	psect	text8
  1183  00DB                     __ptext8:	
  1184 ;; *************** function _isr *****************
  1185 ;; Defined at:
  1186 ;;		line 51 in file "master.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1200 ;;      Params:         0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0
  1202 ;;      Temps:          3       0       0       0       0
  1203 ;;      Totals:         3       0       0       0       0
  1204 ;;Total ram usage:        3 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		Interrupt level 1
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _isr
  1215  00DB                     _isr:	
  1216  00DB                     i1l766:	
  1217                           
  1218                           ;master.c: 52:     INTCONbits.GIE = 0;
  1219  00DB  138B               	bcf	11,7	;volatile
  1220                           
  1221                           ;master.c: 53:     INTCONbits.PEIE = 0;
  1222  00DC  130B               	bcf	11,6	;volatile
  1223                           
  1224                           ;master.c: 55:     if (PIR1bits.RCIF == 1){
  1225  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1226  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1227  00DF  1E8C               	btfss	12,5	;volatile
  1228  00E0  28E2               	goto	u4_21
  1229  00E1  28E3               	goto	u4_20
  1230  00E2                     u4_21:	
  1231  00E2  28E7               	goto	i1l770
  1232  00E3                     u4_20:	
  1233  00E3                     i1l768:	
  1234                           
  1235                           ;master.c: 56:         datos = RCREG;
  1236  00E3  081A               	movf	26,w	;volatile
  1237  00E4  00F0               	movwf	??_isr
  1238  00E5  0870               	movf	??_isr,w
  1239  00E6  00F9               	movwf	_datos
  1240  00E7                     i1l770:	
  1241                           
  1242                           ;master.c: 58:     INTCONbits.GIE = 1;
  1243  00E7  178B               	bsf	11,7	;volatile
  1244  00E8                     i1l772:	
  1245                           
  1246                           ;master.c: 59:     INTCONbits.PEIE = 1;
  1247  00E8  170B               	bsf	11,6	;volatile
  1248  00E9                     i1l115:	
  1249  00E9  0872               	movf	??_isr+2,w
  1250  00EA  008A               	movwf	10
  1251  00EB  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1252  00EC  0083               	movwf	3
  1253  00ED  0EFE               	swapf	btemp,f
  1254  00EE  0E7E               	swapf	btemp,w
  1255  00EF  0009               	retfie
  1256  00F0                     __end_of_isr:	
  1257  007E                     btemp	set	126	;btemp
  1258  007E                     wtemp0	set	126
  1259                           
  1260                           	psect	intentry
  1261  0004                     __pintentry:	
  1262                           ;incstack = 0
  1263                           ; Regs used in _isr: [wreg]
  1264                           
  1265  0004                     interrupt_function:	
  1266  007E                     saved_w	set	btemp
  1267  0004  00FE               	movwf	btemp
  1268  0005  0E03               	swapf	3,w
  1269  0006  00F1               	movwf	??_isr+1
  1270  0007  080A               	movf	10,w
  1271  0008  00F2               	movwf	??_isr+2
  1272  0009  120A  118A  28DB   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     625
                                              0 BANK0      2     2      0
                             _enviar
                             _serial
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _serial                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar                                               2     0      2     250
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enviar
   _serial
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 12:14:33 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l22 0104  
                      l25 010A                        l18 00C0                        l19 00C5  
                      l60 00F0                        l36 0103                        l28 0110  
                      l63 00FA                        l57 00DA                        u20 010A  
                      u21 0109                        u60 00B8                        u61 00B7  
                      u70 00F6                        u71 00F5                        u90 0066  
                      u91 0065                       l128 00AE                       l810 00BF  
                     l802 00B0                       l730 0104                       l812 00F0  
                     l740 00C6                       l804 00B8                       l820 009F  
                     l732 010C                       l814 00F6                       l742 00CD  
                     l806 00BA                       l822 00A2                       l734 00FB  
                     l744 00D3                       l808 00BC                       l824 00A5  
                     l816 0092                       l736 0100                       l818 0096  
                     l860 002B                       l870 0062                       l862 0031  
                     l854 0016                       l880 0085                       l872 0066  
                     l864 003B                       l856 0020                       l874 0069  
                     l866 0055                       l858 0023                       l876 006B  
                     l868 005F                       l878 0077                       u107 0027  
                     u117 0041                       u127 005B              __CFG_CPD$OFF 0000  
                     _isr 00DB              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    u4_20 00E3                      u4_21 00E2              __CFG_WRT$OFF 0000  
                    _adc1 0078                      _adc2 0077                      _main 0016  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l115 00E9                     i1l770 00E7  
                   i1l772 00E8                     i1l766 00DB                     i1l768 00E3  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _TXREG 0019                     _TXSTA 0098  
          __CFG_FCMEN$OFF 0000                     _datos 0079                     _setup 0092  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 00C6  
         __end_of_spiRead 0104                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0092  
                  ??_main 0020                    ?_setup 0070                    _ANSELH 0189  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    _enviar 00F0                    _serial 00C6  
                  saved_w 007E          __end_of_spiWrite 0111                 ??_spiInit 0076  
               ??_spiRead 0073   __end_of__initialization 0012            __pcstackCOMMON 0070  
           __end_of_setup 00AF                   ??_setup 0077                __pmaintext 0016  
              __pintentry 0004   __size_of_spiReceiveWait 0007                   ?_enviar 0073  
                 ?_serial 0070                   _SSPSTAT 0094                 ?_spiWrite 0070  
         __size_of_enviar 000B                   __ptext1 010B                   __ptext2 00FB  
         __size_of_serial 0015                   __ptext3 0104                   __ptext4 0092  
                 __ptext5 00AF                   __ptext6 00C6                   __ptext7 00F0  
                 __ptext8 00DB              __size_of_isr 0015                   _spiInit 00AF  
                 _spiRead 00FB      end_of_initialization 0012                ??_spiWrite 0073  
               _PORTAbits 0005                 _PORTCbits 0007                 _TRISAbits 0085  
               _TRISCbits 0087               spiWrite@dat 0073                 _TXSTAbits 0098  
          _spiReceiveWait 0104               _BAUDCTLbits 0187            __end_of_enviar 00FB  
          __end_of_serial 00DB       start_initialization 000F               __end_of_isr 00F0  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 010B                  ??_enviar 0075  
                ??_serial 0073               __pbssCOMMON 0077                 ___latbits 0002  
           __pcstackBANK0 0020           ?_spiReceiveWait 0070         __size_of_spiWrite 0006  
                ?_spiInit 0073                  ?_spiRead 0070            __size_of_setup 001D  
    spiInit@sTransmitEdge 0075         interrupt_function 0004                  _PIE1bits 008C  
      spiInit@sDataSample 0073                  _PIR1bits 000C                 enviar@dat 0073  
        __size_of_spiInit 0017          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 007C                  _spiWrite 010B              spiInit@sType 0076  
       spiInit@sClockIdle 0074                _INTCONbits 000B                  intlevel1 0000  
        ??_spiReceiveWait 0073  
