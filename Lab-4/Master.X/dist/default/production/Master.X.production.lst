

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 22:42:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0008                     _PORTD	set	8
   367  0006                     _PORTB	set	6
   368  0007                     _PORTCbits	set	7
   369  001A                     _RCREG	set	26
   370  000C                     _PIR1bits	set	12
   371  0019                     _TXREG	set	25
   372  0018                     _RCSTA	set	24
   373  000B                     _INTCONbits	set	11
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCON	set	20
   376  0088                     _TRISD	set	136
   377  0086                     _TRISB	set	134
   378  0098                     _TXSTAbits	set	152
   379  0099                     _SPBRG	set	153
   380  0098                     _TXSTA	set	152
   381  008C                     _PIE1bits	set	140
   382  0087                     _TRISCbits	set	135
   383  0094                     _SSPSTATbits	set	148
   384  0094                     _SSPSTAT	set	148
   385  043A                     _TRISC2	set	1082
   386  043B                     _TRISC3	set	1083
   387  043C                     _TRISC4	set	1084
   388  043D                     _TRISC5	set	1085
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391  0187                     _BAUDCTLbits	set	391
   392                           
   393                           ; #config settings
   394  0000                     
   395                           	psect	cinit
   396  000F                     start_initialization:	
   397  000F                     __initialization:	
   398                           
   399                           ; Clear objects allocated to COMMON
   400  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   401  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   402  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   403  0012                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0012                     __end_of__initialization:	
   407  0012  0183               	clrf	3
   408  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0077                     __pbssCOMMON:	
   412  0077                     _adc2:	
   413  0077                     	ds	1
   414  0078                     _adc1:	
   415  0078                     	ds	1
   416  0079                     _datos:	
   417  0079                     	ds	1
   418                           
   419                           	psect	cstackCOMMON
   420  0070                     __pcstackCOMMON:	
   421  0070                     ?_setup:	
   422  0070                     ?_spiReceiveWait:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_spiRead:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_serial:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_isr:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445  0070                     	ds	3
   446  0073                     ?_spiInit:	
   447  0073                     ??_spiReceiveWait:	
   448                           ; 1 bytes @ 0x3
   449                           
   450  0073                     ??_spiWrite:	
   451                           ; 1 bytes @ 0x3
   452                           
   453  0073                     ??_spiRead:	
   454                           ; 1 bytes @ 0x3
   455                           
   456  0073                     ??_serial:	
   457                           ; 1 bytes @ 0x3
   458                           
   459  0073                     ?_enviar:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     spiInit@sDataSample:	
   463                           ; 1 bytes @ 0x3
   464                           
   465  0073                     spiWrite@dat:	
   466                           ; 1 bytes @ 0x3
   467                           
   468  0073                     enviar@dat:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 2 bytes @ 0x3
   473  0073                     	ds	1
   474  0074                     spiInit@sClockIdle:	
   475                           
   476                           ; 1 bytes @ 0x4
   477  0074                     	ds	1
   478  0075                     ??_enviar:	
   479  0075                     spiInit@sTransmitEdge:	
   480                           ; 1 bytes @ 0x5
   481                           
   482                           
   483                           ; 1 bytes @ 0x5
   484  0075                     	ds	1
   485  0076                     ??_spiInit:	
   486  0076                     spiInit@sType:	
   487                           ; 1 bytes @ 0x6
   488                           
   489                           
   490                           ; 1 bytes @ 0x6
   491  0076                     	ds	1
   492  0077                     ??_setup:	
   493                           
   494                           	psect	cstackBANK0
   495  0020                     __pcstackBANK0:	
   496                           ; 1 bytes @ 0x7
   497                           
   498  0020                     ??_main:	
   499                           
   500                           ; 1 bytes @ 0x0
   501  0020                     	ds	2
   502                           
   503                           	psect	maintext
   504  0016                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 68 in file "master.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       2       0       0       0
   527 ;;      Totals:         0       2       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels required when called:    3
   530 ;; This function calls:
   531 ;;		_enviar
   532 ;;		_serial
   533 ;;		_setup
   534 ;;		_spiRead
   535 ;;		_spiWrite
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _main
   543  0016                     _main:	
   544  0016                     l832:	
   545                           ;incstack = 0
   546                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   547                           
   548                           
   549                           ;master.c: 69:     setup();
   550  0016  120A  118A  208D  120A  118A  	fcall	_setup
   551                           
   552                           ;master.c: 70:     serial();
   553  001B  120A  118A  20BC  120A  118A  	fcall	_serial
   554  0020                     l834:	
   555                           
   556                           ;master.c: 75:        PORTCbits.RC2 = 0;
   557  0020  1283               	bcf	3,5	;RP0=0, select bank0
   558  0021  1303               	bcf	3,6	;RP1=0, select bank0
   559  0022  1107               	bcf	7,2	;volatile
   560  0023                     l836:	
   561                           
   562                           ;master.c: 76:        _delay((unsigned long)((1)*(4000000/4000.0)));
   563  0023  30C7               	movlw	199
   564  0024  1283               	bcf	3,5	;RP0=0, select bank0
   565  0025  1303               	bcf	3,6	;RP1=0, select bank0
   566  0026  00A0               	movwf	??_main
   567  0027                     u77:	
   568  0027  2828               	nop2
   569  0028  0BA0               	decfsz	??_main,f
   570  0029  2827               	goto	u77
   571  002A  282B               	nop2
   572  002B                     l838:	
   573                           
   574                           ;master.c: 78:        spiWrite(1);
   575  002B  3001               	movlw	1
   576  002C  120A  118A  2101  120A  118A  	fcall	_spiWrite
   577  0031                     l840:	
   578                           
   579                           ;master.c: 79:        adc1 = spiRead();
   580  0031  120A  118A  20F1  120A  118A  	fcall	_spiRead
   581  0036  1283               	bcf	3,5	;RP0=0, select bank0
   582  0037  1303               	bcf	3,6	;RP1=0, select bank0
   583  0038  00A0               	movwf	??_main
   584  0039  0820               	movf	??_main,w
   585  003A  00F8               	movwf	_adc1
   586  003B                     l842:	
   587                           
   588                           ;master.c: 80:        _delay((unsigned long)((10)*(4000000/4000.0)));
   589  003B  300D               	movlw	13
   590  003C  1283               	bcf	3,5	;RP0=0, select bank0
   591  003D  1303               	bcf	3,6	;RP1=0, select bank0
   592  003E  00A1               	movwf	??_main+1
   593  003F  30FB               	movlw	251
   594  0040  00A0               	movwf	??_main
   595  0041                     u87:	
   596  0041  0BA0               	decfsz	??_main,f
   597  0042  2841               	goto	u87
   598  0043  0BA1               	decfsz	??_main+1,f
   599  0044  2841               	goto	u87
   600                           
   601                           ;master.c: 82:        spiWrite(2);
   602  0045  3002               	movlw	2
   603  0046  120A  118A  2101  120A  118A  	fcall	_spiWrite
   604                           
   605                           ;master.c: 83:        adc2 = spiRead();
   606  004B  120A  118A  20F1  120A  118A  	fcall	_spiRead
   607  0050  1283               	bcf	3,5	;RP0=0, select bank0
   608  0051  1303               	bcf	3,6	;RP1=0, select bank0
   609  0052  00A0               	movwf	??_main
   610  0053  0820               	movf	??_main,w
   611  0054  00F7               	movwf	_adc2
   612  0055                     l844:	
   613                           
   614                           ;master.c: 84:        _delay((unsigned long)((10)*(4000000/4000.0)));
   615  0055  300D               	movlw	13
   616  0056  1283               	bcf	3,5	;RP0=0, select bank0
   617  0057  1303               	bcf	3,6	;RP1=0, select bank0
   618  0058  00A1               	movwf	??_main+1
   619  0059  30FB               	movlw	251
   620  005A  00A0               	movwf	??_main
   621  005B                     u97:	
   622  005B  0BA0               	decfsz	??_main,f
   623  005C  285B               	goto	u97
   624  005D  0BA1               	decfsz	??_main+1,f
   625  005E  285B               	goto	u97
   626  005F                     l846:	
   627                           
   628                           ;master.c: 86:        PORTCbits.RC2 = 1;
   629  005F  1283               	bcf	3,5	;RP0=0, select bank0
   630  0060  1303               	bcf	3,6	;RP1=0, select bank0
   631  0061  1507               	bsf	7,2	;volatile
   632  0062                     l848:	
   633                           
   634                           ;master.c: 90:        enviar(adc1);
   635  0062  0878               	movf	_adc1,w
   636  0063  00A0               	movwf	??_main
   637  0064  01A1               	clrf	??_main+1
   638  0065  0820               	movf	??_main,w
   639  0066  00F3               	movwf	enviar@dat
   640  0067  0821               	movf	??_main+1,w
   641  0068  00F4               	movwf	enviar@dat+1
   642  0069  120A  118A  20E6  120A  118A  	fcall	_enviar
   643  006E                     l850:	
   644                           
   645                           ;master.c: 91:        enviar(adc2);
   646  006E  0877               	movf	_adc2,w
   647  006F  1283               	bcf	3,5	;RP0=0, select bank0
   648  0070  1303               	bcf	3,6	;RP1=0, select bank0
   649  0071  00A0               	movwf	??_main
   650  0072  01A1               	clrf	??_main+1
   651  0073  0820               	movf	??_main,w
   652  0074  00F3               	movwf	enviar@dat
   653  0075  0821               	movf	??_main+1,w
   654  0076  00F4               	movwf	enviar@dat+1
   655  0077  120A  118A  20E6  120A  118A  	fcall	_enviar
   656  007C                     l852:	
   657                           
   658                           ;master.c: 92:        enviar(255);
   659  007C  30FF               	movlw	255
   660  007D  00F3               	movwf	enviar@dat
   661  007E  3000               	movlw	0
   662  007F  00F4               	movwf	enviar@dat+1
   663  0080  120A  118A  20E6  120A  118A  	fcall	_enviar
   664                           
   665                           ;master.c: 93:        PORTB = datos;
   666  0085  0879               	movf	_datos,w
   667  0086  1283               	bcf	3,5	;RP0=0, select bank0
   668  0087  1303               	bcf	3,6	;RP1=0, select bank0
   669  0088  0086               	movwf	6	;volatile
   670  0089  2820               	goto	l834
   671  008A  120A  118A  280C   	ljmp	start
   672  008D                     __end_of_main:	
   673                           
   674                           	psect	text1
   675  0101                     __ptext1:	
   676 ;; *************** function _spiWrite *****************
   677 ;; Defined at:
   678 ;;		line 35 in file "SPI.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  dat             1    wreg     unsigned char 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  dat             1    3[COMMON] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         1       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         1       0       0       0       0
   696 ;;Total ram usage:        1 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; Hardware stack levels required when called:    1
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           
   707                           ;psect for function _spiWrite
   708  0101                     _spiWrite:	
   709                           
   710                           ;incstack = 0
   711                           ; Regs used in _spiWrite: [wreg]
   712                           ;spiWrite@dat stored from wreg
   713  0101  00F3               	movwf	spiWrite@dat
   714  0102                     l726:	
   715                           
   716                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   717  0102  0873               	movf	spiWrite@dat,w
   718  0103  1283               	bcf	3,5	;RP0=0, select bank0
   719  0104  1303               	bcf	3,6	;RP1=0, select bank0
   720  0105  0093               	movwf	19	;volatile
   721  0106                     l28:	
   722  0106  0008               	return
   723  0107                     __end_of_spiWrite:	
   724                           
   725                           	psect	text2
   726  00F1                     __ptext2:	
   727 ;; *************** function _spiRead *****************
   728 ;; Defined at:
   729 ;;		line 48 in file "SPI.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      unsigned char 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    2
   750 ;; This function calls:
   751 ;;		_spiReceiveWait
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _spiRead
   759  00F1                     _spiRead:	
   760  00F1                     l728:	
   761                           ;incstack = 0
   762                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   763                           
   764                           
   765                           ;SPI.c: 50:     spiReceiveWait();
   766  00F1  120A  118A  20FA  120A  118A  	fcall	_spiReceiveWait
   767  00F6                     l730:	
   768                           
   769                           ;SPI.c: 51:     return(SSPBUF);
   770  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   771  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   772  00F8  0813               	movf	19,w	;volatile
   773  00F9                     l36:	
   774  00F9  0008               	return
   775  00FA                     __end_of_spiRead:	
   776                           
   777                           	psect	text3
   778  00FA                     __ptext3:	
   779 ;; *************** function _spiReceiveWait *****************
   780 ;; Defined at:
   781 ;;		line 30 in file "SPI.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		None
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0
   798 ;;      Totals:         0       0       0       0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_spiRead
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _spiReceiveWait
   811  00FA                     _spiReceiveWait:	
   812  00FA                     l724:	
   813                           ;incstack = 0
   814                           ; Regs used in _spiReceiveWait: []
   815                           
   816  00FA                     l22:	
   817                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
   818                           
   819  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   820  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   821  00FC  1C14               	btfss	20,0	;volatile
   822  00FD  28FF               	goto	u21
   823  00FE  2900               	goto	u20
   824  00FF                     u21:	
   825  00FF  28FA               	goto	l22
   826  0100                     u20:	
   827  0100                     l25:	
   828  0100  0008               	return
   829  0101                     __end_of_spiReceiveWait:	
   830                           
   831                           	psect	text4
   832  008D                     __ptext4:	
   833 ;; *************** function _setup *****************
   834 ;; Defined at:
   835 ;;		line 101 in file "master.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0
   852 ;;      Totals:         0       0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    2
   856 ;; This function calls:
   857 ;;		_spiInit
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _setup
   865  008D                     _setup:	
   866  008D                     l802:	
   867                           ;incstack = 0
   868                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   869                           
   870                           
   871                           ;master.c: 102:     ANSEL = 0;
   872  008D  1683               	bsf	3,5	;RP0=1, select bank3
   873  008E  1703               	bsf	3,6	;RP1=1, select bank3
   874  008F  0188               	clrf	8	;volatile
   875                           
   876                           ;master.c: 103:     ANSELH = 0;
   877  0090  0189               	clrf	9	;volatile
   878  0091                     l804:	
   879                           
   880                           ;master.c: 104:     TRISC2 = 0;
   881  0091  1683               	bsf	3,5	;RP0=1, select bank1
   882  0092  1303               	bcf	3,6	;RP1=0, select bank1
   883  0093  1107               	bcf	7,2	;volatile
   884                           
   885                           ;master.c: 105:     TRISB = 0;
   886  0094  0186               	clrf	6	;volatile
   887                           
   888                           ;master.c: 106:     TRISD = 0;
   889  0095  0188               	clrf	8	;volatile
   890                           
   891                           ;master.c: 107:     PORTB = 0;
   892  0096  1283               	bcf	3,5	;RP0=0, select bank0
   893  0097  1303               	bcf	3,6	;RP1=0, select bank0
   894  0098  0186               	clrf	6	;volatile
   895                           
   896                           ;master.c: 108:     PORTD = 0;
   897  0099  0188               	clrf	8	;volatile
   898  009A                     l806:	
   899                           
   900                           ;master.c: 109:     PORTCbits.RC2 = 1;
   901  009A  1507               	bsf	7,2	;volatile
   902  009B                     l808:	
   903                           
   904                           ;master.c: 110:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   905  009B  01F3               	clrf	spiInit@sDataSample
   906  009C  01F4               	clrf	spiInit@sClockIdle
   907  009D  01F5               	clrf	spiInit@sTransmitEdge
   908  009E  3020               	movlw	32
   909  009F  120A  118A  20A5  120A  118A  	fcall	_spiInit
   910  00A4                     l122:	
   911  00A4  0008               	return
   912  00A5                     __end_of_setup:	
   913                           
   914                           	psect	text5
   915  00A5                     __ptext5:	
   916 ;; *************** function _spiInit *****************
   917 ;; Defined at:
   918 ;;		line 12 in file "SPI.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  sType           1    wreg     enum E1264
   921 ;;  sDataSample     1    3[COMMON] enum E1272
   922 ;;  sClockIdle      1    4[COMMON] enum E1276
   923 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  sType           1    6[COMMON] enum E1264
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         3       0       0       0       0
   936 ;;      Locals:         1       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0
   938 ;;      Totals:         4       0       0       0       0
   939 ;;Total ram usage:        4 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_setup
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _spiInit
   951  00A5                     _spiInit:	
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   955                           ;spiInit@sType stored from wreg
   956  00A5  00F6               	movwf	spiInit@sType
   957  00A6                     l788:	
   958                           
   959                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   960  00A6  1683               	bsf	3,5	;RP0=1, select bank1
   961  00A7  1303               	bcf	3,6	;RP1=0, select bank1
   962  00A8  1287               	bcf	7,5	;volatile
   963                           
   964                           ;SPI.c: 15:     TRISC4 = 1;
   965  00A9  1607               	bsf	7,4	;volatile
   966                           
   967                           ;SPI.c: 16:     if(sType & 0b00000100)
   968  00AA  1D76               	btfss	spiInit@sType,2
   969  00AB  28AD               	goto	u51
   970  00AC  28AE               	goto	u50
   971  00AD                     u51:	
   972  00AD  28B2               	goto	l794
   973  00AE                     u50:	
   974  00AE                     l790:	
   975                           
   976                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   977  00AE  0875               	movf	spiInit@sTransmitEdge,w
   978  00AF  0094               	movwf	20	;volatile
   979  00B0                     l792:	
   980                           
   981                           ;SPI.c: 19:         TRISC3 = 1;
   982  00B0  1587               	bsf	7,3	;volatile
   983                           
   984                           ;SPI.c: 20:     }
   985  00B1  28B6               	goto	l18
   986  00B2                     l794:	
   987                           
   988                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   989  00B2  0873               	movf	spiInit@sDataSample,w
   990  00B3  0475               	iorwf	spiInit@sTransmitEdge,w
   991  00B4  0094               	movwf	20	;volatile
   992  00B5                     l796:	
   993                           
   994                           ;SPI.c: 24:         TRISC3 = 0;
   995  00B5  1187               	bcf	7,3	;volatile
   996  00B6                     l18:	
   997                           ;SPI.c: 25:     }
   998                           
   999                           
  1000                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  1001  00B6  0876               	movf	spiInit@sType,w
  1002  00B7  0474               	iorwf	spiInit@sClockIdle,w
  1003  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1004  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1005  00BA  0094               	movwf	20	;volatile
  1006  00BB                     l19:	
  1007  00BB  0008               	return
  1008  00BC                     __end_of_spiInit:	
  1009                           
  1010                           	psect	text6
  1011  00BC                     __ptext6:	
  1012 ;; *************** function _serial *****************
  1013 ;; Defined at:
  1014 ;;		line 7 in file "USART.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _serial
  1044  00BC                     _serial:	
  1045  00BC                     l734:	
  1046                           ;incstack = 0
  1047                           ; Regs used in _serial: [wreg]
  1048                           
  1049                           
  1050                           ;USART.c: 8:     INTCONbits.GIE = 1;
  1051  00BC  178B               	bsf	11,7	;volatile
  1052                           
  1053                           ;USART.c: 9:     INTCONbits.PEIE = 1;
  1054  00BD  170B               	bsf	11,6	;volatile
  1055                           
  1056                           ;USART.c: 10:     TRISCbits.TRISC7 = 1;
  1057  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1058  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  1059  00C0  1787               	bsf	7,7	;volatile
  1060                           
  1061                           ;USART.c: 11:     TRISCbits.TRISC6 = 0;
  1062  00C1  1307               	bcf	7,6	;volatile
  1063                           
  1064                           ;USART.c: 12:     PIE1bits.RCIE = 1;
  1065  00C2  168C               	bsf	12,5	;volatile
  1066  00C3                     l736:	
  1067                           
  1068                           ;USART.c: 13:     TXSTA = 0b00100110;
  1069  00C3  3026               	movlw	38
  1070  00C4  0098               	movwf	24	;volatile
  1071                           
  1072                           ;USART.c: 14:     RCSTA = 0b10010000;
  1073  00C5  3090               	movlw	144
  1074  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1075  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1076  00C8  0098               	movwf	24	;volatile
  1077  00C9                     l738:	
  1078                           
  1079                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1080  00C9  1683               	bsf	3,5	;RP0=1, select bank3
  1081  00CA  1703               	bsf	3,6	;RP1=1, select bank3
  1082  00CB  1587               	bsf	7,3	;volatile
  1083                           
  1084                           ;USART.c: 16:     SPBRG = 103;
  1085  00CC  3067               	movlw	103
  1086  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1087  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1088  00CF  0099               	movwf	25	;volatile
  1089  00D0                     l57:	
  1090  00D0  0008               	return
  1091  00D1                     __end_of_serial:	
  1092                           
  1093                           	psect	text7
  1094  00E6                     __ptext7:	
  1095 ;; *************** function _enviar *****************
  1096 ;; Defined at:
  1097 ;;		line 21 in file "USART.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  dat             2    3[COMMON] int 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         2       0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         2       0       0       0       0
  1115 ;;Total ram usage:        2 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _enviar
  1127  00E6                     _enviar:	
  1128  00E6                     l798:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _enviar: [wreg]
  1131                           
  1132  00E6                     l60:	
  1133                           ;USART.c: 29:     }
  1134                           
  1135                           
  1136                           ;USART.c: 28:     while (TXSTAbits.TRMT == 0){
  1137  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1138  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1139  00E8  1C98               	btfss	24,1	;volatile
  1140  00E9  28EB               	goto	u61
  1141  00EA  28EC               	goto	u60
  1142  00EB                     u61:	
  1143  00EB  28E6               	goto	l60
  1144  00EC                     u60:	
  1145  00EC                     l800:	
  1146                           
  1147                           ;USART.c: 30:     TXREG = dat;
  1148  00EC  0873               	movf	enviar@dat,w
  1149  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1150  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1151  00EF  0099               	movwf	25	;volatile
  1152  00F0                     l63:	
  1153  00F0  0008               	return
  1154  00F1                     __end_of_enviar:	
  1155                           
  1156                           	psect	text8
  1157  00D1                     __ptext8:	
  1158 ;; *************** function _isr *****************
  1159 ;; Defined at:
  1160 ;;		line 51 in file "master.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0
  1176 ;;      Temps:          3       0       0       0       0
  1177 ;;      Totals:         3       0       0       0       0
  1178 ;;Total ram usage:        3 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		Interrupt level 1
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _isr
  1189  00D1                     _isr:	
  1190  00D1                     i1l758:	
  1191                           
  1192                           ;master.c: 52:     INTCONbits.GIE = 0;
  1193  00D1  138B               	bcf	11,7	;volatile
  1194                           
  1195                           ;master.c: 53:     INTCONbits.PEIE = 0;
  1196  00D2  130B               	bcf	11,6	;volatile
  1197                           
  1198                           ;master.c: 55:     if (PIR1bits.RCIF == 1){
  1199  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1200  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1201  00D5  1E8C               	btfss	12,5	;volatile
  1202  00D6  28D8               	goto	u4_21
  1203  00D7  28D9               	goto	u4_20
  1204  00D8                     u4_21:	
  1205  00D8  28DD               	goto	i1l762
  1206  00D9                     u4_20:	
  1207  00D9                     i1l760:	
  1208                           
  1209                           ;master.c: 56:         datos = RCREG;
  1210  00D9  081A               	movf	26,w	;volatile
  1211  00DA  00F0               	movwf	??_isr
  1212  00DB  0870               	movf	??_isr,w
  1213  00DC  00F9               	movwf	_datos
  1214  00DD                     i1l762:	
  1215                           
  1216                           ;master.c: 58:     INTCONbits.GIE = 1;
  1217  00DD  178B               	bsf	11,7	;volatile
  1218  00DE                     i1l764:	
  1219                           
  1220                           ;master.c: 59:     INTCONbits.PEIE = 1;
  1221  00DE  170B               	bsf	11,6	;volatile
  1222  00DF                     i1l111:	
  1223  00DF  0872               	movf	??_isr+2,w
  1224  00E0  008A               	movwf	10
  1225  00E1  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1226  00E2  0083               	movwf	3
  1227  00E3  0EFE               	swapf	btemp,f
  1228  00E4  0E7E               	swapf	btemp,w
  1229  00E5  0009               	retfie
  1230  00E6                     __end_of_isr:	
  1231  007E                     btemp	set	126	;btemp
  1232  007E                     wtemp0	set	126
  1233                           
  1234                           	psect	intentry
  1235  0004                     __pintentry:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _isr: [wreg]
  1238                           
  1239  0004                     interrupt_function:	
  1240  007E                     saved_w	set	btemp
  1241  0004  00FE               	movwf	btemp
  1242  0005  0E03               	swapf	3,w
  1243  0006  00F1               	movwf	??_isr+1
  1244  0007  080A               	movf	10,w
  1245  0008  00F2               	movwf	??_isr+2
  1246  0009  120A  118A  28D1   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     625
                                              0 BANK0      2     2      0
                             _enviar
                             _serial
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _serial                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar                                               2     0      2     250
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enviar
   _serial
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 22:42:20 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l22 00FA  
                      l25 0100                        l18 00B6                        l19 00BB  
                      l60 00E6                        l36 00F9                        l28 0106  
                      l63 00F0                        l57 00D0                        u20 0100  
                      u21 00FF                        u50 00AE                        u51 00AD  
                      u60 00EC                        u61 00EB                        u77 0027  
                      u87 0041                        u97 005B                       l122 00A4  
                     l800 00EC                       l802 008D                       l730 00F6  
                     l804 0091                       l724 00FA                       l734 00BC  
                     l806 009A                       l726 0102                       l736 00C3  
                     l808 009B                       l728 00F1                       l840 0031  
                     l832 0016                       l738 00C9                       l850 006E  
                     l842 003B                       l834 0020                       l852 007C  
                     l844 0055                       l836 0023                       l790 00AE  
                     l846 005F                       l838 002B                       l792 00B0  
                     l848 0062                       l794 00B2                       l796 00B5  
                     l788 00A6                       l798 00E6              __CFG_CPD$OFF 0000  
                     _isr 00D1              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    u4_20 00D9                      u4_21 00D8              __CFG_WRT$OFF 0000  
                    _adc1 0078                      _adc2 0077                      _main 0016  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l111 00DF                     i1l760 00D9  
                   i1l762 00DD                     i1l764 00DE                     i1l758 00D1  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _TXREG 0019                     _TXSTA 0098  
          __CFG_FCMEN$OFF 0000                     _datos 0079                     _setup 008D  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 00BC  
         __end_of_spiRead 00FA                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 008D  
                  ??_main 0020                    ?_setup 0070                    _ANSELH 0189  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    _enviar 00E6                    _serial 00BC  
                  saved_w 007E          __end_of_spiWrite 0107                 ??_spiInit 0076  
               ??_spiRead 0073   __end_of__initialization 0012            __pcstackCOMMON 0070  
           __end_of_setup 00A5                   ??_setup 0077                __pmaintext 0016  
              __pintentry 0004   __size_of_spiReceiveWait 0007                   ?_enviar 0073  
                 ?_serial 0070                   _SSPSTAT 0094                 ?_spiWrite 0070  
         __size_of_enviar 000B                   __ptext1 0101                   __ptext2 00F1  
         __size_of_serial 0015                   __ptext3 00FA                   __ptext4 008D  
                 __ptext5 00A5                   __ptext6 00BC                   __ptext7 00E6  
                 __ptext8 00D1              __size_of_isr 0015                   _spiInit 00A5  
                 _spiRead 00F1      end_of_initialization 0012                ??_spiWrite 0073  
               _PORTCbits 0007                 _TRISCbits 0087               spiWrite@dat 0073  
               _TXSTAbits 0098            _spiReceiveWait 00FA               _BAUDCTLbits 0187  
          __end_of_enviar 00F1            __end_of_serial 00D1       start_initialization 000F  
             __end_of_isr 00E6  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 0101  
                ??_enviar 0075                  ??_serial 0073               __pbssCOMMON 0077  
               ___latbits 0002             __pcstackBANK0 0020           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006                  ?_spiInit 0073                  ?_spiRead 0070  
          __size_of_setup 0018      spiInit@sTransmitEdge 0075         interrupt_function 0004  
                _PIE1bits 008C        spiInit@sDataSample 0073                  _PIR1bits 000C  
               enviar@dat 0073          __size_of_spiInit 0017          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0077                  _spiWrite 0101  
            spiInit@sType 0076         spiInit@sClockIdle 0074                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0073  
