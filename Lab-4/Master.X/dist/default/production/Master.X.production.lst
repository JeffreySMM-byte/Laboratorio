

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 19:52:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  0105                     	;# 
   346  0107                     	;# 
   347  0108                     	;# 
   348  0109                     	;# 
   349  010C                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0187                     	;# 
   356  0188                     	;# 
   357  0189                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0006                     _PORTB	set	6
   361  0008                     _PORTD	set	8
   362  0007                     _PORTCbits	set	7
   363  0019                     _TXREG	set	25
   364  0018                     _RCSTA	set	24
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0088                     _TRISD	set	136
   368  0086                     _TRISB	set	134
   369  0098                     _TXSTAbits	set	152
   370  0099                     _SPBRG	set	153
   371  0098                     _TXSTA	set	152
   372  008C                     _PIE1bits	set	140
   373  0087                     _TRISC	set	135
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  043A                     _TRISC2	set	1082
   377  043B                     _TRISC3	set	1083
   378  043C                     _TRISC4	set	1084
   379  043D                     _TRISC5	set	1085
   380  0189                     _ANSELH	set	393
   381  0188                     _ANSEL	set	392
   382  0187                     _BAUDCTLbits	set	391
   383                           
   384                           ; #config settings
   385  0000                     
   386                           	psect	cinit
   387  07FC                     start_initialization:	
   388  07FC                     __initialization:	
   389  07FC                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392  07FC                     __end_of__initialization:	
   393  07FC  0183               	clrf	3
   394  07FD  120A  118A  2FB8   	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	cstackCOMMON
   397  0070                     __pcstackCOMMON:	
   398  0070                     ?_setup:	
   399  0070                     ?_spiInit:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_spiReceiveWait:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ??_spiReceiveWait:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_spiWrite:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ??_spiWrite:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_spiRead:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_spiRead:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_main:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     spiInit@sDataSample:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     spiWrite@dat:	
   427                           ; 1 bytes @ 0x0
   428                           
   429                           
   430                           ; 1 bytes @ 0x0
   431  0070                     	ds	1
   432  0071                     spiInit@sClockIdle:	
   433                           
   434                           ; 1 bytes @ 0x1
   435  0071                     	ds	1
   436  0072                     spiInit@sTransmitEdge:	
   437                           
   438                           ; 1 bytes @ 0x2
   439  0072                     	ds	1
   440  0073                     ??_spiInit:	
   441  0073                     spiInit@sType:	
   442                           ; 1 bytes @ 0x3
   443                           
   444                           
   445                           ; 1 bytes @ 0x3
   446  0073                     	ds	1
   447  0074                     ??_setup:	
   448  0074                     ??_main:	
   449                           ; 1 bytes @ 0x4
   450                           
   451                           
   452                           ; 1 bytes @ 0x4
   453  0074                     	ds	2
   454                           
   455                           	psect	maintext
   456  07B8                     __pmaintext:	
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 51 in file "master.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : B00/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          2       0       0       0       0
   479 ;;      Totals:         2       0       0       0       0
   480 ;;Total ram usage:        2 bytes
   481 ;; Hardware stack levels required when called:    2
   482 ;; This function calls:
   483 ;;		_setup
   484 ;;		_spiRead
   485 ;;		_spiWrite
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _main
   493  07B8                     _main:	
   494  07B8                     l768:	
   495                           ;incstack = 0
   496                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   497                           
   498                           
   499                           ;master.c: 52:     setup();
   500  07B8  120A  118A  27A0  120A  118A  	fcall	_setup
   501  07BD                     l770:	
   502                           
   503                           ;master.c: 57:        PORTCbits.RC2 = 0;
   504  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   505  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   506  07BF  1107               	bcf	7,2	;volatile
   507  07C0                     l772:	
   508                           
   509                           ;master.c: 58:        _delay((unsigned long)((1)*(4000000/4000.0)));
   510  07C0  30C7               	movlw	199
   511  07C1  00F4               	movwf	??_main
   512  07C2                     u57:	
   513  07C2  2FC3               	nop2
   514  07C3  0BF4               	decfsz	??_main,f
   515  07C4  2FC2               	goto	u57
   516  07C5  2FC6               	nop2
   517  07C6  2FC7               	nop2
   518  07C7                     l774:	
   519                           
   520                           ;master.c: 60:        spiWrite(1);
   521  07C7  3001               	movlw	1
   522  07C8  120A  118A  2773  120A  118A  	fcall	_spiWrite
   523  07CD                     l776:	
   524                           
   525                           ;master.c: 61:        PORTD = spiRead();
   526  07CD  120A  118A  2780  120A  118A  	fcall	_spiRead
   527  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   528  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   529  07D4  0088               	movwf	8	;volatile
   530  07D5                     l778:	
   531                           
   532                           ;master.c: 62:        _delay((unsigned long)((10)*(4000000/4000.0)));
   533  07D5  300D               	movlw	13
   534  07D6  00F5               	movwf	??_main+1
   535  07D7  30FB               	movlw	251
   536  07D8  00F4               	movwf	??_main
   537  07D9                     u67:	
   538  07D9  0BF4               	decfsz	??_main,f
   539  07DA  2FD9               	goto	u67
   540  07DB  0BF5               	decfsz	??_main+1,f
   541  07DC  2FD9               	goto	u67
   542  07DD  2FDE               	nop2
   543                           
   544                           ;master.c: 64:        spiWrite(2);
   545  07DE  3002               	movlw	2
   546  07DF  120A  118A  2773  120A  118A  	fcall	_spiWrite
   547                           
   548                           ;master.c: 65:        PORTB = spiRead();
   549  07E4  120A  118A  2780  120A  118A  	fcall	_spiRead
   550  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   551  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   552  07EB  0086               	movwf	6	;volatile
   553  07EC                     l780:	
   554                           
   555                           ;master.c: 66:        _delay((unsigned long)((10)*(4000000/4000.0)));
   556  07EC  300D               	movlw	13
   557  07ED  00F5               	movwf	??_main+1
   558  07EE  30FB               	movlw	251
   559  07EF  00F4               	movwf	??_main
   560  07F0                     u77:	
   561  07F0  0BF4               	decfsz	??_main,f
   562  07F1  2FF0               	goto	u77
   563  07F2  0BF5               	decfsz	??_main+1,f
   564  07F3  2FF0               	goto	u77
   565  07F4  2FF5               	nop2
   566  07F5                     l782:	
   567                           
   568                           ;master.c: 68:        PORTCbits.RC2 = 1;
   569  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   570  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   571  07F7  1507               	bsf	7,2	;volatile
   572  07F8  2FBD               	goto	l770
   573  07F9  120A  118A  2800   	ljmp	start
   574  07FC                     __end_of_main:	
   575                           
   576                           	psect	text1
   577  0773                     __ptext1:	
   578 ;; *************** function _spiWrite *****************
   579 ;; Defined at:
   580 ;;		line 35 in file "SPI.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;  dat             1    wreg     unsigned char 
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  dat             1    0[COMMON] unsigned char 
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         1       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0
   597 ;;      Totals:         1       0       0       0       0
   598 ;;Total ram usage:        1 bytes
   599 ;; Hardware stack levels used:    1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _spiWrite
   609  0773                     _spiWrite:	
   610                           
   611                           ;incstack = 0
   612                           ; Regs used in _spiWrite: [wreg]
   613                           ;spiWrite@dat stored from wreg
   614  0773  00F0               	movwf	spiWrite@dat
   615  0774                     l702:	
   616                           
   617                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   618  0774  0870               	movf	spiWrite@dat,w
   619  0775  1283               	bcf	3,5	;RP0=0, select bank0
   620  0776  1303               	bcf	3,6	;RP1=0, select bank0
   621  0777  0093               	movwf	19	;volatile
   622  0778                     l28:	
   623  0778  0008               	return
   624  0779                     __end_of_spiWrite:	
   625                           
   626                           	psect	text2
   627  0780                     __ptext2:	
   628 ;; *************** function _spiRead *****************
   629 ;; Defined at:
   630 ;;		line 48 in file "SPI.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      unsigned char 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    1
   651 ;; This function calls:
   652 ;;		_spiReceiveWait
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _spiRead
   660  0780                     _spiRead:	
   661  0780                     l704:	
   662                           ;incstack = 0
   663                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   664                           
   665                           
   666                           ;SPI.c: 50:     spiReceiveWait();
   667  0780  120A  118A  2779  120A  118A  	fcall	_spiReceiveWait
   668  0785                     l706:	
   669                           
   670                           ;SPI.c: 51:     return(SSPBUF);
   671  0785  1283               	bcf	3,5	;RP0=0, select bank0
   672  0786  1303               	bcf	3,6	;RP1=0, select bank0
   673  0787  0813               	movf	19,w	;volatile
   674  0788                     l36:	
   675  0788  0008               	return
   676  0789                     __end_of_spiRead:	
   677                           
   678                           	psect	text3
   679  0779                     __ptext3:	
   680 ;; *************** function _spiReceiveWait *****************
   681 ;; Defined at:
   682 ;;		line 30 in file "SPI.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		None
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_spiRead
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _spiReceiveWait
   711  0779                     _spiReceiveWait:	
   712  0779                     l700:	
   713                           ;incstack = 0
   714                           ; Regs used in _spiReceiveWait: []
   715                           
   716  0779                     l22:	
   717                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
   718                           
   719  0779  1683               	bsf	3,5	;RP0=1, select bank1
   720  077A  1303               	bcf	3,6	;RP1=0, select bank1
   721  077B  1C14               	btfss	20,0	;volatile
   722  077C  2F7E               	goto	u21
   723  077D  2F7F               	goto	u20
   724  077E                     u21:	
   725  077E  2F79               	goto	l22
   726  077F                     u20:	
   727  077F                     l25:	
   728  077F  0008               	return
   729  0780                     __end_of_spiReceiveWait:	
   730                           
   731                           	psect	text4
   732  07A0                     __ptext4:	
   733 ;; *************** function _setup *****************
   734 ;; Defined at:
   735 ;;		line 75 in file "master.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    1
   756 ;; This function calls:
   757 ;;		_spiInit
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _setup
   765  07A0                     _setup:	
   766  07A0                     l760:	
   767                           ;incstack = 0
   768                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   769                           
   770                           
   771                           ;master.c: 76:     ANSEL = 0;
   772  07A0  1683               	bsf	3,5	;RP0=1, select bank3
   773  07A1  1703               	bsf	3,6	;RP1=1, select bank3
   774  07A2  0188               	clrf	8	;volatile
   775                           
   776                           ;master.c: 77:     ANSELH = 0;
   777  07A3  0189               	clrf	9	;volatile
   778  07A4                     l762:	
   779                           
   780                           ;master.c: 78:     TRISC2 = 0;
   781  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   782  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   783  07A6  1107               	bcf	7,2	;volatile
   784                           
   785                           ;master.c: 79:     TRISB = 0;
   786  07A7  0186               	clrf	6	;volatile
   787                           
   788                           ;master.c: 80:     TRISD = 0;
   789  07A8  0188               	clrf	8	;volatile
   790                           
   791                           ;master.c: 81:     PORTB = 0;
   792  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   793  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   794  07AB  0186               	clrf	6	;volatile
   795                           
   796                           ;master.c: 82:     PORTD = 0;
   797  07AC  0188               	clrf	8	;volatile
   798  07AD                     l764:	
   799                           
   800                           ;master.c: 83:     PORTCbits.RC2 = 1;
   801  07AD  1507               	bsf	7,2	;volatile
   802  07AE                     l766:	
   803                           
   804                           ;master.c: 84:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   805  07AE  01F0               	clrf	spiInit@sDataSample
   806  07AF  01F1               	clrf	spiInit@sClockIdle
   807  07B0  01F2               	clrf	spiInit@sTransmitEdge
   808  07B1  3020               	movlw	32
   809  07B2  120A  118A  2789  120A  118A  	fcall	_spiInit
   810  07B7                     l98:	
   811  07B7  0008               	return
   812  07B8                     __end_of_setup:	
   813                           
   814                           	psect	text5
   815  0789                     __ptext5:	
   816 ;; *************** function _spiInit *****************
   817 ;; Defined at:
   818 ;;		line 12 in file "SPI.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  sType           1    wreg     enum E1264
   821 ;;  sDataSample     1    0[COMMON] enum E1272
   822 ;;  sClockIdle      1    1[COMMON] enum E1276
   823 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  sType           1    3[COMMON] enum E1264
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         3       0       0       0       0
   836 ;;      Locals:         1       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0
   838 ;;      Totals:         4       0       0       0       0
   839 ;;Total ram usage:        4 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_setup
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _spiInit
   850  0789                     _spiInit:	
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   854                           ;spiInit@sType stored from wreg
   855  0789  00F3               	movwf	spiInit@sType
   856  078A                     l750:	
   857                           
   858                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   859  078A  1683               	bsf	3,5	;RP0=1, select bank1
   860  078B  1303               	bcf	3,6	;RP1=0, select bank1
   861  078C  1287               	bcf	7,5	;volatile
   862                           
   863                           ;SPI.c: 15:     TRISC4 = 1;
   864  078D  1607               	bsf	7,4	;volatile
   865                           
   866                           ;SPI.c: 16:     if(sType & 0b00000100)
   867  078E  1D73               	btfss	spiInit@sType,2
   868  078F  2F91               	goto	u41
   869  0790  2F92               	goto	u40
   870  0791                     u41:	
   871  0791  2F96               	goto	l756
   872  0792                     u40:	
   873  0792                     l752:	
   874                           
   875                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   876  0792  0872               	movf	spiInit@sTransmitEdge,w
   877  0793  0094               	movwf	20	;volatile
   878  0794                     l754:	
   879                           
   880                           ;SPI.c: 19:         TRISC3 = 1;
   881  0794  1587               	bsf	7,3	;volatile
   882                           
   883                           ;SPI.c: 20:     }
   884  0795  2F9A               	goto	l18
   885  0796                     l756:	
   886                           
   887                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   888  0796  0870               	movf	spiInit@sDataSample,w
   889  0797  0472               	iorwf	spiInit@sTransmitEdge,w
   890  0798  0094               	movwf	20	;volatile
   891  0799                     l758:	
   892                           
   893                           ;SPI.c: 24:         TRISC3 = 0;
   894  0799  1187               	bcf	7,3	;volatile
   895  079A                     l18:	
   896                           ;SPI.c: 25:     }
   897                           
   898                           
   899                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   900  079A  0873               	movf	spiInit@sType,w
   901  079B  0471               	iorwf	spiInit@sClockIdle,w
   902  079C  1283               	bcf	3,5	;RP0=0, select bank0
   903  079D  1303               	bcf	3,6	;RP1=0, select bank0
   904  079E  0094               	movwf	20	;volatile
   905  079F                     l19:	
   906  079F  0008               	return
   907  07A0                     __end_of_spiInit:	
   908  007E                     btemp	set	126	;btemp
   909  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 19:52:30 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l22 0779  
                      l25 077F                        l18 079A                        l19 079F  
                      l36 0788                        l28 0778                        l98 07B7  
                      u20 077F                        u21 077E                        u40 0792  
                      u41 0791                        u57 07C2                        u67 07D9  
                      u77 07F0                       l700 0779                       l702 0774  
                     l704 0780                       l706 0785                       l750 078A  
                     l752 0792                       l760 07A0                       l754 0794  
                     l762 07A4                       l770 07BD                       l756 0796  
                     l764 07AD                       l780 07EC                       l772 07C0  
                     l758 0799                       l766 07AE                       l782 07F5  
                     l774 07C7                       l776 07CD                       l768 07B8  
                     l778 07D5              __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000                      _main 07B8                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _RCSTA 0018  
                   _SPBRG 0099                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019                     _TXSTA 0098            __CFG_FCMEN$OFF 0000  
                   _setup 07A0            __CFG_BOREN$OFF 0000           __end_of_spiInit 07A0  
         __end_of_spiRead 0789                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07FC              __end_of_main 07FC  
                  ??_main 0074                    ?_setup 0070                    _ANSELH 0189  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000          __end_of_spiWrite 0779                 ??_spiInit 0073  
               ??_spiRead 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 07B8                   ??_setup 0074                __pmaintext 07B8  
 __size_of_spiReceiveWait 0007                   _SSPSTAT 0094                 ?_spiWrite 0070  
                 __ptext1 0773                   __ptext2 0780                   __ptext3 0779  
                 __ptext4 07A0                   __ptext5 0789                   _spiInit 0789  
                 _spiRead 0780      end_of_initialization 07FC                ??_spiWrite 0070  
               _PORTCbits 0007               spiWrite@dat 0070                 _TXSTAbits 0098  
          _spiReceiveWait 0779               _BAUDCTLbits 0187       start_initialization 07FC  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 0780                 ___latbits 0002  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                  ?_spiInit 0070  
                ?_spiRead 0070            __size_of_setup 0018      spiInit@sTransmitEdge 0072  
                _PIE1bits 008C        spiInit@sDataSample 0070          __size_of_spiInit 0017  
        __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000             __size_of_main 0044  
                _spiWrite 0773              spiInit@sType 0073         spiInit@sClockIdle 0071  
        ??_spiReceiveWait 0070  
