

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 14:53:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0008                     _PORTD	set	8
   367  0006                     _PORTB	set	6
   368  0007                     _PORTCbits	set	7
   369  001A                     _RCREG	set	26
   370  000C                     _PIR1bits	set	12
   371  0019                     _TXREG	set	25
   372  0018                     _RCSTA	set	24
   373  000B                     _INTCONbits	set	11
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCON	set	20
   376  0088                     _TRISD	set	136
   377  0086                     _TRISB	set	134
   378  0098                     _TXSTAbits	set	152
   379  0099                     _SPBRG	set	153
   380  0098                     _TXSTA	set	152
   381  008C                     _PIE1bits	set	140
   382  0087                     _TRISCbits	set	135
   383  0094                     _SSPSTATbits	set	148
   384  0094                     _SSPSTAT	set	148
   385  043A                     _TRISC2	set	1082
   386  043B                     _TRISC3	set	1083
   387  043C                     _TRISC4	set	1084
   388  043D                     _TRISC5	set	1085
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391  0187                     _BAUDCTLbits	set	391
   392                           
   393                           ; #config settings
   394  0000                     
   395                           	psect	cinit
   396  000F                     start_initialization:	
   397  000F                     __initialization:	
   398                           
   399                           ; Clear objects allocated to COMMON
   400  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   401  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   402  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   403  0012                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0012                     __end_of__initialization:	
   407  0012  0183               	clrf	3
   408  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0077                     __pbssCOMMON:	
   412  0077                     _adc2:	
   413  0077                     	ds	1
   414  0078                     _adc1:	
   415  0078                     	ds	1
   416  0079                     _datos:	
   417  0079                     	ds	1
   418                           
   419                           	psect	cstackCOMMON
   420  0070                     __pcstackCOMMON:	
   421  0070                     ?_setup:	
   422  0070                     ?_spiReceiveWait:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_spiRead:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_serial:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_isr:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445  0070                     	ds	3
   446  0073                     ?_spiInit:	
   447  0073                     ??_spiReceiveWait:	
   448                           ; 1 bytes @ 0x3
   449                           
   450  0073                     ??_spiWrite:	
   451                           ; 1 bytes @ 0x3
   452                           
   453  0073                     ??_spiRead:	
   454                           ; 1 bytes @ 0x3
   455                           
   456  0073                     ??_serial:	
   457                           ; 1 bytes @ 0x3
   458                           
   459  0073                     ?_enviar:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     spiInit@sDataSample:	
   463                           ; 1 bytes @ 0x3
   464                           
   465  0073                     spiWrite@dat:	
   466                           ; 1 bytes @ 0x3
   467                           
   468  0073                     enviar@dat:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 2 bytes @ 0x3
   473  0073                     	ds	1
   474  0074                     spiInit@sClockIdle:	
   475                           
   476                           ; 1 bytes @ 0x4
   477  0074                     	ds	1
   478  0075                     ??_enviar:	
   479  0075                     spiInit@sTransmitEdge:	
   480                           ; 1 bytes @ 0x5
   481                           
   482                           
   483                           ; 1 bytes @ 0x5
   484  0075                     	ds	1
   485  0076                     ??_spiInit:	
   486  0076                     spiInit@sType:	
   487                           ; 1 bytes @ 0x6
   488                           
   489                           
   490                           ; 1 bytes @ 0x6
   491  0076                     	ds	1
   492  0077                     ??_setup:	
   493                           
   494                           	psect	cstackBANK0
   495  0020                     __pcstackBANK0:	
   496                           ; 1 bytes @ 0x7
   497                           
   498  0020                     ??_main:	
   499                           
   500                           ; 1 bytes @ 0x0
   501  0020                     	ds	2
   502                           
   503                           	psect	maintext
   504  0016                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 68 in file "master.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       2       0       0       0
   527 ;;      Totals:         0       2       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels required when called:    3
   530 ;; This function calls:
   531 ;;		_enviar
   532 ;;		_serial
   533 ;;		_setup
   534 ;;		_spiRead
   535 ;;		_spiWrite
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _main
   543  0016                     _main:	
   544  0016                     l836:	
   545                           ;incstack = 0
   546                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   547                           
   548                           
   549                           ;master.c: 69:     setup();
   550  0016  120A  118A  20A3  120A  118A  	fcall	_setup
   551                           
   552                           ;master.c: 70:     serial();
   553  001B  120A  118A  20D2  120A  118A  	fcall	_serial
   554  0020                     l838:	
   555                           
   556                           ;master.c: 75:        PORTCbits.RC2 = 0;
   557  0020  1283               	bcf	3,5	;RP0=0, select bank0
   558  0021  1303               	bcf	3,6	;RP1=0, select bank0
   559  0022  1107               	bcf	7,2	;volatile
   560  0023                     l840:	
   561                           
   562                           ;master.c: 76:        _delay((unsigned long)((1)*(4000000/4000.0)));
   563  0023  30C7               	movlw	199
   564  0024  1283               	bcf	3,5	;RP0=0, select bank0
   565  0025  1303               	bcf	3,6	;RP1=0, select bank0
   566  0026  00A0               	movwf	??_main
   567  0027                     u77:	
   568  0027  2828               	nop2
   569  0028  0BA0               	decfsz	??_main,f
   570  0029  2827               	goto	u77
   571  002A  282B               	nop2
   572  002B                     l842:	
   573                           
   574                           ;master.c: 78:        spiWrite(1);
   575  002B  3001               	movlw	1
   576  002C  120A  118A  2117  120A  118A  	fcall	_spiWrite
   577  0031                     l844:	
   578                           
   579                           ;master.c: 79:        adc1 = spiRead();
   580  0031  120A  118A  2107  120A  118A  	fcall	_spiRead
   581  0036  1283               	bcf	3,5	;RP0=0, select bank0
   582  0037  1303               	bcf	3,6	;RP1=0, select bank0
   583  0038  00A0               	movwf	??_main
   584  0039  0820               	movf	??_main,w
   585  003A  00F8               	movwf	_adc1
   586  003B                     l846:	
   587                           
   588                           ;master.c: 80:        _delay((unsigned long)((10)*(4000000/4000.0)));
   589  003B  300D               	movlw	13
   590  003C  1283               	bcf	3,5	;RP0=0, select bank0
   591  003D  1303               	bcf	3,6	;RP1=0, select bank0
   592  003E  00A1               	movwf	??_main+1
   593  003F  30FB               	movlw	251
   594  0040  00A0               	movwf	??_main
   595  0041                     u87:	
   596  0041  0BA0               	decfsz	??_main,f
   597  0042  2841               	goto	u87
   598  0043  0BA1               	decfsz	??_main+1,f
   599  0044  2841               	goto	u87
   600                           
   601                           ;master.c: 82:        spiWrite(2);
   602  0045  3002               	movlw	2
   603  0046  120A  118A  2117  120A  118A  	fcall	_spiWrite
   604                           
   605                           ;master.c: 83:        adc2 = spiRead();
   606  004B  120A  118A  2107  120A  118A  	fcall	_spiRead
   607  0050  1283               	bcf	3,5	;RP0=0, select bank0
   608  0051  1303               	bcf	3,6	;RP1=0, select bank0
   609  0052  00A0               	movwf	??_main
   610  0053  0820               	movf	??_main,w
   611  0054  00F7               	movwf	_adc2
   612  0055                     l848:	
   613                           
   614                           ;master.c: 84:        _delay((unsigned long)((10)*(4000000/4000.0)));
   615  0055  300D               	movlw	13
   616  0056  1283               	bcf	3,5	;RP0=0, select bank0
   617  0057  1303               	bcf	3,6	;RP1=0, select bank0
   618  0058  00A1               	movwf	??_main+1
   619  0059  30FB               	movlw	251
   620  005A  00A0               	movwf	??_main
   621  005B                     u97:	
   622  005B  0BA0               	decfsz	??_main,f
   623  005C  285B               	goto	u97
   624  005D  0BA1               	decfsz	??_main+1,f
   625  005E  285B               	goto	u97
   626  005F                     l850:	
   627                           
   628                           ;master.c: 86:        PORTCbits.RC2 = 1;
   629  005F  1283               	bcf	3,5	;RP0=0, select bank0
   630  0060  1303               	bcf	3,6	;RP1=0, select bank0
   631  0061  1507               	bsf	7,2	;volatile
   632  0062                     l852:	
   633                           
   634                           ;master.c: 95:        enviar(adc1);
   635  0062  0878               	movf	_adc1,w
   636  0063  00A0               	movwf	??_main
   637  0064  01A1               	clrf	??_main+1
   638  0065  0820               	movf	??_main,w
   639  0066  00F3               	movwf	enviar@dat
   640  0067  0821               	movf	??_main+1,w
   641  0068  00F4               	movwf	enviar@dat+1
   642  0069  120A  118A  20FC  120A  118A  	fcall	_enviar
   643                           
   644                           ;master.c: 96:        _delay((unsigned long)((5)*(4000000/4000.0)));
   645  006E  3007               	movlw	7
   646  006F  1283               	bcf	3,5	;RP0=0, select bank0
   647  0070  1303               	bcf	3,6	;RP1=0, select bank0
   648  0071  00A1               	movwf	??_main+1
   649  0072  307C               	movlw	124
   650  0073  00A0               	movwf	??_main
   651  0074                     u107:	
   652  0074  0BA0               	decfsz	??_main,f
   653  0075  2874               	goto	u107
   654  0076  0BA1               	decfsz	??_main+1,f
   655  0077  2874               	goto	u107
   656  0078  0000               	nop
   657  0079                     l854:	
   658                           
   659                           ;master.c: 97:        enviar(adc2);
   660  0079  0877               	movf	_adc2,w
   661  007A  1283               	bcf	3,5	;RP0=0, select bank0
   662  007B  1303               	bcf	3,6	;RP1=0, select bank0
   663  007C  00A0               	movwf	??_main
   664  007D  01A1               	clrf	??_main+1
   665  007E  0820               	movf	??_main,w
   666  007F  00F3               	movwf	enviar@dat
   667  0080  0821               	movf	??_main+1,w
   668  0081  00F4               	movwf	enviar@dat+1
   669  0082  120A  118A  20FC  120A  118A  	fcall	_enviar
   670  0087                     l856:	
   671                           
   672                           ;master.c: 98:        _delay((unsigned long)((5)*(4000000/4000.0)));
   673  0087  3007               	movlw	7
   674  0088  1283               	bcf	3,5	;RP0=0, select bank0
   675  0089  1303               	bcf	3,6	;RP1=0, select bank0
   676  008A  00A1               	movwf	??_main+1
   677  008B  307C               	movlw	124
   678  008C  00A0               	movwf	??_main
   679  008D                     u117:	
   680  008D  0BA0               	decfsz	??_main,f
   681  008E  288D               	goto	u117
   682  008F  0BA1               	decfsz	??_main+1,f
   683  0090  288D               	goto	u117
   684  0091  0000               	nop
   685                           
   686                           ;master.c: 99:        enviar(193);
   687  0092  30C1               	movlw	193
   688  0093  00F3               	movwf	enviar@dat
   689  0094  3000               	movlw	0
   690  0095  00F4               	movwf	enviar@dat+1
   691  0096  120A  118A  20FC  120A  118A  	fcall	_enviar
   692  009B                     l858:	
   693                           
   694                           ;master.c: 100:        PORTB = datos;
   695  009B  0879               	movf	_datos,w
   696  009C  1283               	bcf	3,5	;RP0=0, select bank0
   697  009D  1303               	bcf	3,6	;RP1=0, select bank0
   698  009E  0086               	movwf	6	;volatile
   699  009F  2820               	goto	l838
   700  00A0  120A  118A  280C   	ljmp	start
   701  00A3                     __end_of_main:	
   702                           
   703                           	psect	text1
   704  0117                     __ptext1:	
   705 ;; *************** function _spiWrite *****************
   706 ;; Defined at:
   707 ;;		line 35 in file "SPI.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  dat             1    wreg     unsigned char 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  dat             1    3[COMMON] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   721 ;;      Params:         0       0       0       0       0
   722 ;;      Locals:         1       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0
   724 ;;      Totals:         1       0       0       0       0
   725 ;;Total ram usage:        1 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; Hardware stack levels required when called:    1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           
   736                           ;psect for function _spiWrite
   737  0117                     _spiWrite:	
   738                           
   739                           ;incstack = 0
   740                           ; Regs used in _spiWrite: [wreg]
   741                           ;spiWrite@dat stored from wreg
   742  0117  00F3               	movwf	spiWrite@dat
   743  0118                     l726:	
   744                           
   745                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   746  0118  0873               	movf	spiWrite@dat,w
   747  0119  1283               	bcf	3,5	;RP0=0, select bank0
   748  011A  1303               	bcf	3,6	;RP1=0, select bank0
   749  011B  0093               	movwf	19	;volatile
   750  011C                     l28:	
   751  011C  0008               	return
   752  011D                     __end_of_spiWrite:	
   753                           
   754                           	psect	text2
   755  0107                     __ptext2:	
   756 ;; *************** function _spiRead *****************
   757 ;; Defined at:
   758 ;;		line 48 in file "SPI.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      unsigned char 
   765 ;; Registers used:
   766 ;;		wreg, status,2, status,0, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    2
   779 ;; This function calls:
   780 ;;		_spiReceiveWait
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _spiRead
   788  0107                     _spiRead:	
   789  0107                     l728:	
   790                           ;incstack = 0
   791                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   792                           
   793                           
   794                           ;SPI.c: 50:     spiReceiveWait();
   795  0107  120A  118A  2110  120A  118A  	fcall	_spiReceiveWait
   796  010C                     l730:	
   797                           
   798                           ;SPI.c: 51:     return(SSPBUF);
   799  010C  1283               	bcf	3,5	;RP0=0, select bank0
   800  010D  1303               	bcf	3,6	;RP1=0, select bank0
   801  010E  0813               	movf	19,w	;volatile
   802  010F                     l36:	
   803  010F  0008               	return
   804  0110                     __end_of_spiRead:	
   805                           
   806                           	psect	text3
   807  0110                     __ptext3:	
   808 ;; *************** function _spiReceiveWait *****************
   809 ;; Defined at:
   810 ;;		line 30 in file "SPI.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		None
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_spiRead
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function _spiReceiveWait
   840  0110                     _spiReceiveWait:	
   841  0110                     l724:	
   842                           ;incstack = 0
   843                           ; Regs used in _spiReceiveWait: []
   844                           
   845  0110                     l22:	
   846                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
   847                           
   848  0110  1683               	bsf	3,5	;RP0=1, select bank1
   849  0111  1303               	bcf	3,6	;RP1=0, select bank1
   850  0112  1C14               	btfss	20,0	;volatile
   851  0113  2915               	goto	u21
   852  0114  2916               	goto	u20
   853  0115                     u21:	
   854  0115  2910               	goto	l22
   855  0116                     u20:	
   856  0116                     l25:	
   857  0116  0008               	return
   858  0117                     __end_of_spiReceiveWait:	
   859                           
   860                           	psect	text4
   861  00A3                     __ptext4:	
   862 ;; *************** function _setup *****************
   863 ;; Defined at:
   864 ;;		line 108 in file "master.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, pclath, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    2
   885 ;; This function calls:
   886 ;;		_spiInit
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _setup
   894  00A3                     _setup:	
   895  00A3                     l804:	
   896                           ;incstack = 0
   897                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   898                           
   899                           
   900                           ;master.c: 109:     ANSEL = 0;
   901  00A3  1683               	bsf	3,5	;RP0=1, select bank3
   902  00A4  1703               	bsf	3,6	;RP1=1, select bank3
   903  00A5  0188               	clrf	8	;volatile
   904                           
   905                           ;master.c: 110:     ANSELH = 0;
   906  00A6  0189               	clrf	9	;volatile
   907  00A7                     l806:	
   908                           
   909                           ;master.c: 111:     TRISC2 = 0;
   910  00A7  1683               	bsf	3,5	;RP0=1, select bank1
   911  00A8  1303               	bcf	3,6	;RP1=0, select bank1
   912  00A9  1107               	bcf	7,2	;volatile
   913                           
   914                           ;master.c: 112:     TRISB = 0;
   915  00AA  0186               	clrf	6	;volatile
   916                           
   917                           ;master.c: 113:     TRISD = 0;
   918  00AB  0188               	clrf	8	;volatile
   919                           
   920                           ;master.c: 114:     PORTB = 0;
   921  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   922  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   923  00AE  0186               	clrf	6	;volatile
   924                           
   925                           ;master.c: 115:     PORTD = 0;
   926  00AF  0188               	clrf	8	;volatile
   927  00B0                     l808:	
   928                           
   929                           ;master.c: 116:     PORTCbits.RC2 = 1;
   930  00B0  1507               	bsf	7,2	;volatile
   931  00B1                     l810:	
   932                           
   933                           ;master.c: 117:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   934  00B1  01F3               	clrf	spiInit@sDataSample
   935  00B2  01F4               	clrf	spiInit@sClockIdle
   936  00B3  01F5               	clrf	spiInit@sTransmitEdge
   937  00B4  3020               	movlw	32
   938  00B5  120A  118A  20BB  120A  118A  	fcall	_spiInit
   939  00BA                     l122:	
   940  00BA  0008               	return
   941  00BB                     __end_of_setup:	
   942                           
   943                           	psect	text5
   944  00BB                     __ptext5:	
   945 ;; *************** function _spiInit *****************
   946 ;; Defined at:
   947 ;;		line 12 in file "SPI.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  sType           1    wreg     enum E1264
   950 ;;  sDataSample     1    3[COMMON] enum E1272
   951 ;;  sClockIdle      1    4[COMMON] enum E1276
   952 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  sType           1    6[COMMON] enum E1264
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         3       0       0       0       0
   965 ;;      Locals:         1       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0
   967 ;;      Totals:         4       0       0       0       0
   968 ;;Total ram usage:        4 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_setup
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _spiInit
   980  00BB                     _spiInit:	
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   984                           ;spiInit@sType stored from wreg
   985  00BB  00F6               	movwf	spiInit@sType
   986  00BC                     l790:	
   987                           
   988                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   989  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   990  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   991  00BE  1287               	bcf	7,5	;volatile
   992                           
   993                           ;SPI.c: 15:     TRISC4 = 1;
   994  00BF  1607               	bsf	7,4	;volatile
   995                           
   996                           ;SPI.c: 16:     if(sType & 0b00000100)
   997  00C0  1D76               	btfss	spiInit@sType,2
   998  00C1  28C3               	goto	u51
   999  00C2  28C4               	goto	u50
  1000  00C3                     u51:	
  1001  00C3  28C8               	goto	l796
  1002  00C4                     u50:	
  1003  00C4                     l792:	
  1004                           
  1005                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  1006  00C4  0875               	movf	spiInit@sTransmitEdge,w
  1007  00C5  0094               	movwf	20	;volatile
  1008  00C6                     l794:	
  1009                           
  1010                           ;SPI.c: 19:         TRISC3 = 1;
  1011  00C6  1587               	bsf	7,3	;volatile
  1012                           
  1013                           ;SPI.c: 20:     }
  1014  00C7  28CC               	goto	l18
  1015  00C8                     l796:	
  1016                           
  1017                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  1018  00C8  0873               	movf	spiInit@sDataSample,w
  1019  00C9  0475               	iorwf	spiInit@sTransmitEdge,w
  1020  00CA  0094               	movwf	20	;volatile
  1021  00CB                     l798:	
  1022                           
  1023                           ;SPI.c: 24:         TRISC3 = 0;
  1024  00CB  1187               	bcf	7,3	;volatile
  1025  00CC                     l18:	
  1026                           ;SPI.c: 25:     }
  1027                           
  1028                           
  1029                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  1030  00CC  0876               	movf	spiInit@sType,w
  1031  00CD  0474               	iorwf	spiInit@sClockIdle,w
  1032  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1033  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1034  00D0  0094               	movwf	20	;volatile
  1035  00D1                     l19:	
  1036  00D1  0008               	return
  1037  00D2                     __end_of_spiInit:	
  1038                           
  1039                           	psect	text6
  1040  00D2                     __ptext6:	
  1041 ;; *************** function _serial *****************
  1042 ;; Defined at:
  1043 ;;		line 7 in file "USART.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _serial
  1073  00D2                     _serial:	
  1074  00D2                     l734:	
  1075                           ;incstack = 0
  1076                           ; Regs used in _serial: [wreg]
  1077                           
  1078                           
  1079                           ;USART.c: 8:     INTCONbits.GIE = 1;
  1080  00D2  178B               	bsf	11,7	;volatile
  1081                           
  1082                           ;USART.c: 9:     INTCONbits.PEIE = 1;
  1083  00D3  170B               	bsf	11,6	;volatile
  1084                           
  1085                           ;USART.c: 10:     TRISCbits.TRISC7 = 1;
  1086  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1087  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1088  00D6  1787               	bsf	7,7	;volatile
  1089                           
  1090                           ;USART.c: 11:     TRISCbits.TRISC6 = 0;
  1091  00D7  1307               	bcf	7,6	;volatile
  1092                           
  1093                           ;USART.c: 12:     PIE1bits.RCIE = 1;
  1094  00D8  168C               	bsf	12,5	;volatile
  1095  00D9                     l736:	
  1096                           
  1097                           ;USART.c: 13:     TXSTA = 0b00100110;
  1098  00D9  3026               	movlw	38
  1099  00DA  0098               	movwf	24	;volatile
  1100                           
  1101                           ;USART.c: 14:     RCSTA = 0b10010000;
  1102  00DB  3090               	movlw	144
  1103  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1104  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1105  00DE  0098               	movwf	24	;volatile
  1106  00DF                     l738:	
  1107                           
  1108                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1109  00DF  1683               	bsf	3,5	;RP0=1, select bank3
  1110  00E0  1703               	bsf	3,6	;RP1=1, select bank3
  1111  00E1  1587               	bsf	7,3	;volatile
  1112                           
  1113                           ;USART.c: 16:     SPBRG = 103;
  1114  00E2  3067               	movlw	103
  1115  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  1116  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  1117  00E5  0099               	movwf	25	;volatile
  1118  00E6                     l57:	
  1119  00E6  0008               	return
  1120  00E7                     __end_of_serial:	
  1121                           
  1122                           	psect	text7
  1123  00FC                     __ptext7:	
  1124 ;; *************** function _enviar *****************
  1125 ;; Defined at:
  1126 ;;		line 21 in file "USART.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  dat             2    3[COMMON] int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         2       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0
  1143 ;;      Totals:         2       0       0       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _enviar
  1156  00FC                     _enviar:	
  1157  00FC                     l800:	
  1158                           ;incstack = 0
  1159                           ; Regs used in _enviar: [wreg]
  1160                           
  1161  00FC                     l60:	
  1162                           ;USART.c: 29:     }
  1163                           
  1164                           
  1165                           ;USART.c: 28:     while (TXSTAbits.TRMT == 0){
  1166  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1167  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1168  00FE  1C98               	btfss	24,1	;volatile
  1169  00FF  2901               	goto	u61
  1170  0100  2902               	goto	u60
  1171  0101                     u61:	
  1172  0101  28FC               	goto	l60
  1173  0102                     u60:	
  1174  0102                     l802:	
  1175                           
  1176                           ;USART.c: 30:     TXREG = dat;
  1177  0102  0873               	movf	enviar@dat,w
  1178  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0105  0099               	movwf	25	;volatile
  1181  0106                     l63:	
  1182  0106  0008               	return
  1183  0107                     __end_of_enviar:	
  1184                           
  1185                           	psect	text8
  1186  00E7                     __ptext8:	
  1187 ;; *************** function _isr *****************
  1188 ;; Defined at:
  1189 ;;		line 51 in file "master.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0
  1205 ;;      Temps:          3       0       0       0       0
  1206 ;;      Totals:         3       0       0       0       0
  1207 ;;Total ram usage:        3 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		Interrupt level 1
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           
  1217                           ;psect for function _isr
  1218  00E7                     _isr:	
  1219  00E7                     i1l758:	
  1220                           
  1221                           ;master.c: 52:     INTCONbits.GIE = 0;
  1222  00E7  138B               	bcf	11,7	;volatile
  1223                           
  1224                           ;master.c: 53:     INTCONbits.PEIE = 0;
  1225  00E8  130B               	bcf	11,6	;volatile
  1226                           
  1227                           ;master.c: 55:     if (PIR1bits.RCIF == 1){
  1228  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1229  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1230  00EB  1E8C               	btfss	12,5	;volatile
  1231  00EC  28EE               	goto	u4_21
  1232  00ED  28EF               	goto	u4_20
  1233  00EE                     u4_21:	
  1234  00EE  28F3               	goto	i1l762
  1235  00EF                     u4_20:	
  1236  00EF                     i1l760:	
  1237                           
  1238                           ;master.c: 56:         datos = RCREG;
  1239  00EF  081A               	movf	26,w	;volatile
  1240  00F0  00F0               	movwf	??_isr
  1241  00F1  0870               	movf	??_isr,w
  1242  00F2  00F9               	movwf	_datos
  1243  00F3                     i1l762:	
  1244                           
  1245                           ;master.c: 58:     INTCONbits.GIE = 1;
  1246  00F3  178B               	bsf	11,7	;volatile
  1247  00F4                     i1l764:	
  1248                           
  1249                           ;master.c: 59:     INTCONbits.PEIE = 1;
  1250  00F4  170B               	bsf	11,6	;volatile
  1251  00F5                     i1l111:	
  1252  00F5  0872               	movf	??_isr+2,w
  1253  00F6  008A               	movwf	10
  1254  00F7  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1255  00F8  0083               	movwf	3
  1256  00F9  0EFE               	swapf	btemp,f
  1257  00FA  0E7E               	swapf	btemp,w
  1258  00FB  0009               	retfie
  1259  00FC                     __end_of_isr:	
  1260  007E                     btemp	set	126	;btemp
  1261  007E                     wtemp0	set	126
  1262                           
  1263                           	psect	intentry
  1264  0004                     __pintentry:	
  1265                           ;incstack = 0
  1266                           ; Regs used in _isr: [wreg]
  1267                           
  1268  0004                     interrupt_function:	
  1269  007E                     saved_w	set	btemp
  1270  0004  00FE               	movwf	btemp
  1271  0005  0E03               	swapf	3,w
  1272  0006  00F1               	movwf	??_isr+1
  1273  0007  080A               	movf	10,w
  1274  0008  00F2               	movwf	??_isr+2
  1275  0009  120A  118A  28E7   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     625
                                              0 BANK0      2     2      0
                             _enviar
                             _serial
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _serial                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar                                               2     0      2     250
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enviar
   _serial
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 14:53:11 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l22 0110  
                      l25 0116                        l18 00CC                        l19 00D1  
                      l60 00FC                        l36 010F                        l28 011C  
                      l63 0106                        l57 00E6                        u20 0116  
                      u21 0115                        u50 00C4                        u51 00C3  
                      u60 0102                        u61 0101                        u77 0027  
                      u87 0041                        u97 005B                       l122 00BA  
                     l800 00FC                       l802 0102                       l810 00B1  
                     l730 010C                       l804 00A3                       l724 0110  
                     l734 00D2                       l806 00A7                       l726 0118  
                     l736 00D9                       l808 00B0                       l728 0107  
                     l840 0023                       l738 00DF                       l850 005F  
                     l842 002B                       l852 0062                       l844 0031  
                     l836 0016                       l790 00BC                       l854 0079  
                     l846 003B                       l838 0020                       l792 00C4  
                     l856 0087                       l848 0055                       l794 00C6  
                     l858 009B                       l796 00C8                       l798 00CB  
                     u107 0074                       u117 008D              __CFG_CPD$OFF 0000  
                     _isr 00E7              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    u4_20 00EF                      u4_21 00EE              __CFG_WRT$OFF 0000  
                    _adc1 0078                      _adc2 0077                      _main 0016  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l111 00F5                     i1l760 00EF  
                   i1l762 00F3                     i1l764 00F4                     i1l758 00E7  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _TXREG 0019                     _TXSTA 0098  
          __CFG_FCMEN$OFF 0000                     _datos 0079                     _setup 00A3  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 00D2  
         __end_of_spiRead 0110                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00A3  
                  ??_main 0020                    ?_setup 0070                    _ANSELH 0189  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    _enviar 00FC                    _serial 00D2  
                  saved_w 007E          __end_of_spiWrite 011D                 ??_spiInit 0076  
               ??_spiRead 0073   __end_of__initialization 0012            __pcstackCOMMON 0070  
           __end_of_setup 00BB                   ??_setup 0077                __pmaintext 0016  
              __pintentry 0004   __size_of_spiReceiveWait 0007                   ?_enviar 0073  
                 ?_serial 0070                   _SSPSTAT 0094                 ?_spiWrite 0070  
         __size_of_enviar 000B                   __ptext1 0117                   __ptext2 0107  
         __size_of_serial 0015                   __ptext3 0110                   __ptext4 00A3  
                 __ptext5 00BB                   __ptext6 00D2                   __ptext7 00FC  
                 __ptext8 00E7              __size_of_isr 0015                   _spiInit 00BB  
                 _spiRead 0107      end_of_initialization 0012                ??_spiWrite 0073  
               _PORTCbits 0007                 _TRISCbits 0087               spiWrite@dat 0073  
               _TXSTAbits 0098            _spiReceiveWait 0110               _BAUDCTLbits 0187  
          __end_of_enviar 0107            __end_of_serial 00E7       start_initialization 000F  
             __end_of_isr 00FC  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 0117  
                ??_enviar 0075                  ??_serial 0073               __pbssCOMMON 0077  
               ___latbits 0002             __pcstackBANK0 0020           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006                  ?_spiInit 0073                  ?_spiRead 0070  
          __size_of_setup 0018      spiInit@sTransmitEdge 0075         interrupt_function 0004  
                _PIE1bits 008C        spiInit@sDataSample 0073                  _PIR1bits 000C  
               enviar@dat 0073          __size_of_spiInit 0017          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 008D                  _spiWrite 0117  
            spiInit@sType 0076         spiInit@sClockIdle 0074                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0073  
