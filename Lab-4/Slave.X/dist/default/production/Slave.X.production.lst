

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 18 23:14:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  000B                     _INTCONbits	set	11
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  000C                     _PIR1bits	set	12
   371  0005                     _PORTA	set	5
   372  001F                     _ADCON0bits	set	31
   373  001E                     _ADRESH	set	30
   374  0006                     _PORTB	set	6
   375  0008                     _PORTD	set	8
   376  0063                     _SSPIF	set	99
   377  009F                     _ADCON1bits	set	159
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  008C                     _PIE1bits	set	140
   381  0088                     _TRISD	set	136
   382  0086                     _TRISB	set	134
   383  0085                     _TRISAbits	set	133
   384  043B                     _TRISC3	set	1083
   385  043D                     _TRISC5	set	1085
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           ; #config settings
   390  0000                     
   391                           	psect	cinit
   392  000F                     start_initialization:	
   393  000F                     __initialization:	
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   397                           
   398                           ; Clear objects allocated to BANK0
   399  0010  1283               	bcf	3,5	;RP0=0, select bank0
   400  0011  1303               	bcf	3,6	;RP1=0, select bank0
   401  0012  01AE               	clrf	__pbssBANK0& (0+127)
   402  0013  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   403  0014  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   404  0015  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   405  0016  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   406  0017  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   407  0018  01B4               	clrf	(__pbssBANK0+6)& (0+127)
   408  0019  01B5               	clrf	(__pbssBANK0+7)& (0+127)
   409  001A                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  001A                     __end_of__initialization:	
   413  001A  0183               	clrf	3
   414  001B  120A  118A  28DA   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417  0077                     __pbssCOMMON:	
   418  0077                     _adc:	
   419  0077                     	ds	1
   420                           
   421                           	psect	bssBANK0
   422  002E                     __pbssBANK0:	
   423  002E                     _pot2:	
   424  002E                     	ds	4
   425  0032                     _pot1:	
   426  0032                     	ds	4
   427                           
   428                           	psect	cstackCOMMON
   429  0070                     __pcstackCOMMON:	
   430  0070                     ?_spiRead:	
   431  0070                     ??_spiRead:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_spiWrite:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_spiWrite:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_setup:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_ADC1:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_isr:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_main:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_spiReceiveWait:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_spiReceiveWait:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     spiWrite@dat:	
   459                           ; 1 bytes @ 0x0
   460                           
   461                           
   462                           ; 1 bytes @ 0x0
   463  0070                     	ds	1
   464  0071                     ??_isr:	
   465                           
   466                           ; 1 bytes @ 0x1
   467  0071                     	ds	2
   468  0073                     ??_ADC1:	
   469  0073                     ?_spiInit:	
   470                           ; 1 bytes @ 0x3
   471                           
   472  0073                     ?___xxtofl:	
   473                           ; 1 bytes @ 0x3
   474                           
   475  0073                     spiInit@sDataSample:	
   476                           ; 4 bytes @ 0x3
   477                           
   478  0073                     ___xxtofl@val:	
   479                           ; 1 bytes @ 0x3
   480                           
   481                           
   482                           ; 4 bytes @ 0x3
   483  0073                     	ds	1
   484  0074                     spiInit@sClockIdle:	
   485                           
   486                           ; 1 bytes @ 0x4
   487  0074                     	ds	1
   488  0075                     spiInit@sTransmitEdge:	
   489                           
   490                           ; 1 bytes @ 0x5
   491  0075                     	ds	1
   492  0076                     ??_spiInit:	
   493  0076                     spiInit@sType:	
   494                           ; 1 bytes @ 0x6
   495                           
   496                           
   497                           ; 1 bytes @ 0x6
   498  0076                     	ds	1
   499  0077                     ??_setup:	
   500                           
   501                           	psect	cstackBANK0
   502  0020                     __pcstackBANK0:	
   503                           ; 1 bytes @ 0x7
   504                           
   505  0020                     ??___xxtofl:	
   506                           
   507                           ; 1 bytes @ 0x0
   508  0020                     	ds	4
   509  0024                     ___xxtofl@sign:	
   510                           
   511                           ; 1 bytes @ 0x4
   512  0024                     	ds	1
   513  0025                     ___xxtofl@exp:	
   514                           
   515                           ; 1 bytes @ 0x5
   516  0025                     	ds	1
   517  0026                     ___xxtofl@arg:	
   518                           
   519                           ; 4 bytes @ 0x6
   520  0026                     	ds	4
   521  002A                     ??_main:	
   522                           
   523                           ; 1 bytes @ 0xA
   524  002A                     	ds	4
   525                           
   526                           	psect	maintext
   527  00DA                     __pmaintext:	
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 61 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : B00/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       4       0       0       0
   550 ;;      Totals:         0       4       0       0       0
   551 ;;Total ram usage:        4 bytes
   552 ;; Hardware stack levels required when called:    5
   553 ;; This function calls:
   554 ;;		_ADC1
   555 ;;		___xxtofl
   556 ;;		_setup
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _main
   564  00DA                     _main:	
   565  00DA                     l1002:	
   566                           ;incstack = 0
   567                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   568                           
   569                           
   570                           ;main.c: 62:     setup();
   571  00DA  120A  118A  210E  120A  118A  	fcall	_setup
   572  00DF                     l53:	
   573                           ;main.c: 64:     while(1){
   574                           
   575                           
   576                           ;main.c: 65:         ADC1();
   577  00DF  120A  118A  214A  120A  118A  	fcall	_ADC1
   578  00E4                     l1004:	
   579                           
   580                           ;main.c: 66:         if(adc == 1){
   581  00E4  0377               	decf	_adc,w
   582  00E5  1D03               	btfss	3,2
   583  00E6  28E8               	goto	u491
   584  00E7  28E9               	goto	u490
   585  00E8                     u491:	
   586  00E8  28DF               	goto	l53
   587  00E9                     u490:	
   588  00E9                     l1006:	
   589                           
   590                           ;main.c: 67:             pot1 = ADRESH;
   591  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   592  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   593  00EB  081E               	movf	30,w	;volatile
   594  00EC  00AA               	movwf	??_main
   595  00ED  01AB               	clrf	??_main+1
   596  00EE  01AC               	clrf	??_main+2
   597  00EF  01AD               	clrf	??_main+3
   598  00F0  082D               	movf	??_main+3,w
   599  00F1  00F6               	movwf	___xxtofl@val+3
   600  00F2  082C               	movf	??_main+2,w
   601  00F3  00F5               	movwf	___xxtofl@val+2
   602  00F4  082B               	movf	??_main+1,w
   603  00F5  00F4               	movwf	___xxtofl@val+1
   604  00F6  082A               	movf	??_main,w
   605  00F7  00F3               	movwf	___xxtofl@val
   606  00F8  3000               	movlw	0
   607  00F9  120A  118A  201E  120A  118A  	fcall	___xxtofl
   608  00FE  0876               	movf	?___xxtofl+3,w
   609  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   610  0100  1303               	bcf	3,6	;RP1=0, select bank0
   611  0101  00B5               	movwf	_pot1+3
   612  0102  0875               	movf	?___xxtofl+2,w
   613  0103  00B4               	movwf	_pot1+2
   614  0104  0874               	movf	?___xxtofl+1,w
   615  0105  00B3               	movwf	_pot1+1
   616  0106  0873               	movf	?___xxtofl,w
   617  0107  00B2               	movwf	_pot1
   618  0108                     l1008:	
   619                           
   620                           ;main.c: 68:             adc = 0;
   621  0108  01F7               	clrf	_adc
   622  0109                     l1010:	
   623                           
   624                           ;main.c: 69:             ADCON0bits.GO_DONE = 1;
   625  0109  149F               	bsf	31,1	;volatile
   626  010A  28DF               	goto	l53
   627  010B  120A  118A  280C   	ljmp	start
   628  010E                     __end_of_main:	
   629                           
   630                           	psect	text1
   631  010E                     __ptext1:	
   632 ;; *************** function _setup *****************
   633 ;; Defined at:
   634 ;;		line 76 in file "main.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; Hardware stack levels required when called:    4
   655 ;; This function calls:
   656 ;;		_spiInit
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           
   663                           ;psect for function _setup
   664  010E                     _setup:	
   665  010E                     l864:	
   666                           ;incstack = 0
   667                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   668                           
   669                           
   670                           ;main.c: 77:     ANSEL = 0;
   671  010E  1683               	bsf	3,5	;RP0=1, select bank3
   672  010F  1703               	bsf	3,6	;RP1=1, select bank3
   673  0110  0188               	clrf	8	;volatile
   674                           
   675                           ;main.c: 78:     ANSELH = 0;
   676  0111  0189               	clrf	9	;volatile
   677  0112                     l866:	
   678                           
   679                           ;main.c: 80:     TRISAbits.TRISA0 = 1;
   680  0112  1683               	bsf	3,5	;RP0=1, select bank1
   681  0113  1303               	bcf	3,6	;RP1=0, select bank1
   682  0114  1405               	bsf	5,0	;volatile
   683  0115                     l868:	
   684                           
   685                           ;main.c: 81:     TRISAbits.TRISA1 = 1;
   686  0115  1485               	bsf	5,1	;volatile
   687                           
   688                           ;main.c: 82:     TRISB = 0;
   689  0116  0186               	clrf	6	;volatile
   690                           
   691                           ;main.c: 83:     TRISD = 0;
   692  0117  0188               	clrf	8	;volatile
   693                           
   694                           ;main.c: 85:     PORTA = 0;
   695  0118  1283               	bcf	3,5	;RP0=0, select bank0
   696  0119  1303               	bcf	3,6	;RP1=0, select bank0
   697  011A  0185               	clrf	5	;volatile
   698                           
   699                           ;main.c: 86:     PORTB = 0;
   700  011B  0186               	clrf	6	;volatile
   701                           
   702                           ;main.c: 87:     PORTD = 0;
   703  011C  0188               	clrf	8	;volatile
   704  011D                     l870:	
   705                           
   706                           ;main.c: 90:     PIR1bits.SSPIF = 0;
   707  011D  118C               	bcf	12,3	;volatile
   708  011E                     l872:	
   709                           
   710                           ;main.c: 91:     PIE1bits.SSPIE = 1;
   711  011E  1683               	bsf	3,5	;RP0=1, select bank1
   712  011F  1303               	bcf	3,6	;RP1=0, select bank1
   713  0120  158C               	bsf	12,3	;volatile
   714  0121                     l874:	
   715                           
   716                           ;main.c: 92:     TRISAbits.TRISA5 = 1;
   717  0121  1685               	bsf	5,5	;volatile
   718  0122                     l876:	
   719                           
   720                           ;main.c: 94:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   721  0122  01F3               	clrf	spiInit@sDataSample
   722  0123  01F4               	clrf	spiInit@sClockIdle
   723  0124  01F5               	clrf	spiInit@sTransmitEdge
   724  0125  3024               	movlw	36
   725  0126  120A  118A  2162  120A  118A  	fcall	_spiInit
   726  012B                     l60:	
   727  012B  0008               	return
   728  012C                     __end_of_setup:	
   729                           
   730                           	psect	text2
   731  0162                     __ptext2:	
   732 ;; *************** function _spiInit *****************
   733 ;; Defined at:
   734 ;;		line 12 in file "SPI.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  sType           1    wreg     enum E1264
   737 ;;  sDataSample     1    3[COMMON] enum E1272
   738 ;;  sClockIdle      1    4[COMMON] enum E1276
   739 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  sType           1    6[COMMON] enum E1264
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         3       0       0       0       0
   752 ;;      Locals:         1       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0
   754 ;;      Totals:         4       0       0       0       0
   755 ;;Total ram usage:        4 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    3
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_setup
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _spiInit
   767  0162                     _spiInit:	
   768                           
   769                           ;incstack = 0
   770                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   771                           ;spiInit@sType stored from wreg
   772  0162  00F6               	movwf	spiInit@sType
   773  0163                     l854:	
   774                           
   775                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   776  0163  1683               	bsf	3,5	;RP0=1, select bank1
   777  0164  1303               	bcf	3,6	;RP1=0, select bank1
   778  0165  1287               	bcf	7,5	;volatile
   779                           
   780                           ;SPI.c: 15:     if(sType & 0b00000100)
   781  0166  1D76               	btfss	spiInit@sType,2
   782  0167  2969               	goto	u191
   783  0168  296A               	goto	u190
   784  0169                     u191:	
   785  0169  296E               	goto	l860
   786  016A                     u190:	
   787  016A                     l856:	
   788                           
   789                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   790  016A  0875               	movf	spiInit@sTransmitEdge,w
   791  016B  0094               	movwf	20	;volatile
   792  016C                     l858:	
   793                           
   794                           ;SPI.c: 18:         TRISC3 = 1;
   795  016C  1587               	bsf	7,3	;volatile
   796                           
   797                           ;SPI.c: 19:     }
   798  016D  2972               	goto	l76
   799  016E                     l860:	
   800                           
   801                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   802  016E  0873               	movf	spiInit@sDataSample,w
   803  016F  0475               	iorwf	spiInit@sTransmitEdge,w
   804  0170  0094               	movwf	20	;volatile
   805  0171                     l862:	
   806                           
   807                           ;SPI.c: 23:         TRISC3 = 0;
   808  0171  1187               	bcf	7,3	;volatile
   809  0172                     l76:	
   810                           ;SPI.c: 24:     }
   811                           
   812                           
   813                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   814  0172  0876               	movf	spiInit@sType,w
   815  0173  0474               	iorwf	spiInit@sClockIdle,w
   816  0174  1283               	bcf	3,5	;RP0=0, select bank0
   817  0175  1303               	bcf	3,6	;RP1=0, select bank0
   818  0176  0094               	movwf	20	;volatile
   819  0177                     l77:	
   820  0177  0008               	return
   821  0178                     __end_of_spiInit:	
   822                           
   823                           	psect	text3
   824  001E                     __ptext3:	
   825 ;; *************** function ___xxtofl *****************
   826 ;; Defined at:
   827 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  sign            1    wreg     unsigned char 
   830 ;;  val             4    3[COMMON] long 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  sign            1    4[BANK0 ] unsigned char 
   833 ;;  arg             4    6[BANK0 ] unsigned long 
   834 ;;  exp             1    5[BANK0 ] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  4    3[COMMON] unsigned char 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         4       0       0       0       0
   845 ;;      Locals:         0       6       0       0       0
   846 ;;      Temps:          0       4       0       0       0
   847 ;;      Totals:         4      10       0       0       0
   848 ;;Total ram usage:       14 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    3
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function ___xxtofl
   860  001E                     ___xxtofl:	
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
   864                           ;___xxtofl@sign stored from wreg
   865  001E  1283               	bcf	3,5	;RP0=0, select bank0
   866  001F  1303               	bcf	3,6	;RP1=0, select bank0
   867  0020  00A4               	movwf	___xxtofl@sign
   868  0021                     l958:	
   869  0021  0824               	movf	___xxtofl@sign,w
   870  0022  1903               	btfsc	3,2
   871  0023  2825               	goto	u351
   872  0024  2826               	goto	u350
   873  0025                     u351:	
   874  0025  283A               	goto	l964
   875  0026                     u350:	
   876  0026                     l960:	
   877  0026  1FF6               	btfss	___xxtofl@val+3,7
   878  0027  2829               	goto	u361
   879  0028  282A               	goto	u360
   880  0029                     u361:	
   881  0029  283A               	goto	l964
   882  002A                     u360:	
   883  002A                     l962:	
   884  002A  0973               	comf	___xxtofl@val,w
   885  002B  00A6               	movwf	___xxtofl@arg
   886  002C  0974               	comf	___xxtofl@val+1,w
   887  002D  00A7               	movwf	___xxtofl@arg+1
   888  002E  0975               	comf	___xxtofl@val+2,w
   889  002F  00A8               	movwf	___xxtofl@arg+2
   890  0030  0976               	comf	___xxtofl@val+3,w
   891  0031  00A9               	movwf	___xxtofl@arg+3
   892  0032  0AA6               	incf	___xxtofl@arg,f
   893  0033  1903               	skipnz
   894  0034  0AA7               	incf	___xxtofl@arg+1,f
   895  0035  1903               	skipnz
   896  0036  0AA8               	incf	___xxtofl@arg+2,f
   897  0037  1903               	skipnz
   898  0038  0AA9               	incf	___xxtofl@arg+3,f
   899  0039  2842               	goto	l623
   900  003A                     l964:	
   901  003A  0876               	movf	___xxtofl@val+3,w
   902  003B  00A9               	movwf	___xxtofl@arg+3
   903  003C  0875               	movf	___xxtofl@val+2,w
   904  003D  00A8               	movwf	___xxtofl@arg+2
   905  003E  0874               	movf	___xxtofl@val+1,w
   906  003F  00A7               	movwf	___xxtofl@arg+1
   907  0040  0873               	movf	___xxtofl@val,w
   908  0041  00A6               	movwf	___xxtofl@arg
   909  0042                     l623:	
   910  0042  0876               	movf	___xxtofl@val+3,w
   911  0043  0475               	iorwf	___xxtofl@val+2,w
   912  0044  0474               	iorwf	___xxtofl@val+1,w
   913  0045  0473               	iorwf	___xxtofl@val,w
   914  0046  1D03               	skipz
   915  0047  2849               	goto	u371
   916  0048  284A               	goto	u370
   917  0049                     u371:	
   918  0049  2853               	goto	l970
   919  004A                     u370:	
   920  004A                     l966:	
   921  004A  3000               	movlw	0
   922  004B  00F6               	movwf	?___xxtofl+3
   923  004C  3000               	movlw	0
   924  004D  00F5               	movwf	?___xxtofl+2
   925  004E  3000               	movlw	0
   926  004F  00F4               	movwf	?___xxtofl+1
   927  0050  3000               	movlw	0
   928  0051  00F3               	movwf	?___xxtofl
   929  0052  28D9               	goto	l625
   930  0053                     l970:	
   931  0053  3096               	movlw	150
   932  0054  00A0               	movwf	??___xxtofl
   933  0055  0820               	movf	??___xxtofl,w
   934  0056  00A5               	movwf	___xxtofl@exp
   935  0057  2865               	goto	l974
   936  0058                     l972:	
   937  0058  3001               	movlw	1
   938  0059  00A0               	movwf	??___xxtofl
   939  005A  0820               	movf	??___xxtofl,w
   940  005B  07A5               	addwf	___xxtofl@exp,f
   941  005C  3001               	movlw	1
   942  005D                     u385:	
   943  005D  1003               	clrc
   944  005E  0CA9               	rrf	___xxtofl@arg+3,f
   945  005F  0CA8               	rrf	___xxtofl@arg+2,f
   946  0060  0CA7               	rrf	___xxtofl@arg+1,f
   947  0061  0CA6               	rrf	___xxtofl@arg,f
   948  0062  3EFF               	addlw	-1
   949  0063  1D03               	skipz
   950  0064  285D               	goto	u385
   951  0065                     l974:	
   952  0065  30FE               	movlw	254
   953  0066  0529               	andwf	___xxtofl@arg+3,w
   954  0067  1D03               	btfss	3,2
   955  0068  286A               	goto	u391
   956  0069  286B               	goto	u390
   957  006A                     u391:	
   958  006A  2858               	goto	l972
   959  006B                     u390:	
   960  006B  2887               	goto	l629
   961  006C                     l976:	
   962  006C  3001               	movlw	1
   963  006D  00A0               	movwf	??___xxtofl
   964  006E  0820               	movf	??___xxtofl,w
   965  006F  07A5               	addwf	___xxtofl@exp,f
   966  0070                     l978:	
   967  0070  3001               	movlw	1
   968  0071  07A6               	addwf	___xxtofl@arg,f
   969  0072  3000               	movlw	0
   970  0073  1803               	skipnc
   971  0074  3001               	movlw	1
   972  0075  07A7               	addwf	___xxtofl@arg+1,f
   973  0076  3000               	movlw	0
   974  0077  1803               	skipnc
   975  0078  3001               	movlw	1
   976  0079  07A8               	addwf	___xxtofl@arg+2,f
   977  007A  3000               	movlw	0
   978  007B  1803               	skipnc
   979  007C  3001               	movlw	1
   980  007D  07A9               	addwf	___xxtofl@arg+3,f
   981  007E                     l980:	
   982  007E  3001               	movlw	1
   983  007F                     u405:	
   984  007F  1003               	clrc
   985  0080  0CA9               	rrf	___xxtofl@arg+3,f
   986  0081  0CA8               	rrf	___xxtofl@arg+2,f
   987  0082  0CA7               	rrf	___xxtofl@arg+1,f
   988  0083  0CA6               	rrf	___xxtofl@arg,f
   989  0084  3EFF               	addlw	-1
   990  0085  1D03               	skipz
   991  0086  287F               	goto	u405
   992  0087                     l629:	
   993  0087  30FF               	movlw	255
   994  0088  0529               	andwf	___xxtofl@arg+3,w
   995  0089  1D03               	btfss	3,2
   996  008A  288C               	goto	u411
   997  008B  288D               	goto	u410
   998  008C                     u411:	
   999  008C  286C               	goto	l976
  1000  008D                     u410:	
  1001  008D  2899               	goto	l984
  1002  008E                     l982:	
  1003  008E  3001               	movlw	1
  1004  008F  02A5               	subwf	___xxtofl@exp,f
  1005  0090  3001               	movlw	1
  1006  0091  00A0               	movwf	??___xxtofl
  1007  0092                     u425:	
  1008  0092  1003               	clrc
  1009  0093  0DA6               	rlf	___xxtofl@arg,f
  1010  0094  0DA7               	rlf	___xxtofl@arg+1,f
  1011  0095  0DA8               	rlf	___xxtofl@arg+2,f
  1012  0096  0DA9               	rlf	___xxtofl@arg+3,f
  1013  0097  0BA0               	decfsz	??___xxtofl,f
  1014  0098  2892               	goto	u425
  1015  0099                     l984:	
  1016  0099  1BA8               	btfsc	___xxtofl@arg+2,7
  1017  009A  289C               	goto	u431
  1018  009B  289D               	goto	u430
  1019  009C                     u431:	
  1020  009C  28A3               	goto	l636
  1021  009D                     u430:	
  1022  009D                     l986:	
  1023  009D  3002               	movlw	2
  1024  009E  0225               	subwf	___xxtofl@exp,w
  1025  009F  1803               	skipnc
  1026  00A0  28A2               	goto	u441
  1027  00A1  28A3               	goto	u440
  1028  00A2                     u441:	
  1029  00A2  288E               	goto	l982
  1030  00A3                     u440:	
  1031  00A3                     l636:	
  1032  00A3  1825               	btfsc	___xxtofl@exp,0
  1033  00A4  28A6               	goto	u451
  1034  00A5  28A7               	goto	u450
  1035  00A6                     u451:	
  1036  00A6  28AF               	goto	l637
  1037  00A7                     u450:	
  1038  00A7                     l988:	
  1039  00A7  30FF               	movlw	255
  1040  00A8  05A6               	andwf	___xxtofl@arg,f
  1041  00A9  30FF               	movlw	255
  1042  00AA  05A7               	andwf	___xxtofl@arg+1,f
  1043  00AB  307F               	movlw	127
  1044  00AC  05A8               	andwf	___xxtofl@arg+2,f
  1045  00AD  30FF               	movlw	255
  1046  00AE  05A9               	andwf	___xxtofl@arg+3,f
  1047  00AF                     l637:	
  1048  00AF  1003               	clrc
  1049  00B0  0CA5               	rrf	___xxtofl@exp,f
  1050  00B1                     l990:	
  1051  00B1  0825               	movf	___xxtofl@exp,w
  1052  00B2  00A0               	movwf	??___xxtofl
  1053  00B3  01A1               	clrf	??___xxtofl+1
  1054  00B4  01A2               	clrf	??___xxtofl+2
  1055  00B5  01A3               	clrf	??___xxtofl+3
  1056  00B6  3018               	movlw	24
  1057  00B7                     u465:	
  1058  00B7  1003               	clrc
  1059  00B8  0DA0               	rlf	??___xxtofl,f
  1060  00B9  0DA1               	rlf	??___xxtofl+1,f
  1061  00BA  0DA2               	rlf	??___xxtofl+2,f
  1062  00BB  0DA3               	rlf	??___xxtofl+3,f
  1063  00BC                     u460:	
  1064  00BC  3EFF               	addlw	-1
  1065  00BD  1D03               	skipz
  1066  00BE  28B7               	goto	u465
  1067  00BF  0820               	movf	??___xxtofl,w
  1068  00C0  04A6               	iorwf	___xxtofl@arg,f
  1069  00C1  0821               	movf	??___xxtofl+1,w
  1070  00C2  04A7               	iorwf	___xxtofl@arg+1,f
  1071  00C3  0822               	movf	??___xxtofl+2,w
  1072  00C4  04A8               	iorwf	___xxtofl@arg+2,f
  1073  00C5  0823               	movf	??___xxtofl+3,w
  1074  00C6  04A9               	iorwf	___xxtofl@arg+3,f
  1075  00C7                     l992:	
  1076  00C7  0824               	movf	___xxtofl@sign,w
  1077  00C8  1903               	btfsc	3,2
  1078  00C9  28CB               	goto	u471
  1079  00CA  28CC               	goto	u470
  1080  00CB                     u471:	
  1081  00CB  28D1               	goto	l998
  1082  00CC                     u470:	
  1083  00CC                     l994:	
  1084  00CC  1FF6               	btfss	___xxtofl@val+3,7
  1085  00CD  28CF               	goto	u481
  1086  00CE  28D0               	goto	u480
  1087  00CF                     u481:	
  1088  00CF  28D1               	goto	l998
  1089  00D0                     u480:	
  1090  00D0                     l996:	
  1091  00D0  17A9               	bsf	___xxtofl@arg+3,7
  1092  00D1                     l998:	
  1093  00D1  0829               	movf	___xxtofl@arg+3,w
  1094  00D2  00F6               	movwf	?___xxtofl+3
  1095  00D3  0828               	movf	___xxtofl@arg+2,w
  1096  00D4  00F5               	movwf	?___xxtofl+2
  1097  00D5  0827               	movf	___xxtofl@arg+1,w
  1098  00D6  00F4               	movwf	?___xxtofl+1
  1099  00D7  0826               	movf	___xxtofl@arg,w
  1100  00D8  00F3               	movwf	?___xxtofl
  1101  00D9                     l625:	
  1102  00D9  0008               	return
  1103  00DA                     __end_of___xxtofl:	
  1104                           
  1105                           	psect	text4
  1106  014A                     __ptext4:	
  1107 ;; *************** function _ADC1 *****************
  1108 ;; Defined at:
  1109 ;;		line 5 in file "ADC.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    3
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _ADC1
  1139  014A                     _ADC1:	
  1140  014A                     l878:	
  1141                           ;incstack = 0
  1142                           ; Regs used in _ADC1: [wreg+status,2+status,0]
  1143                           
  1144                           
  1145                           ;ADC.c: 7:     INTCONbits.GIE = 1;
  1146  014A  178B               	bsf	11,7	;volatile
  1147                           
  1148                           ;ADC.c: 8:     INTCONbits.PEIE = 1;
  1149  014B  170B               	bsf	11,6	;volatile
  1150  014C                     l880:	
  1151                           
  1152                           ;ADC.c: 10:     ADCON0bits.ADCS=01;
  1153  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1154  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1155  014E  081F               	movf	31,w	;volatile
  1156  014F  393F               	andlw	-193
  1157  0150  3840               	iorlw	64
  1158  0151  009F               	movwf	31	;volatile
  1159  0152                     l882:	
  1160                           
  1161                           ;ADC.c: 11:     ADCON0bits.CHS0=0;
  1162  0152  111F               	bcf	31,2	;volatile
  1163  0153                     l884:	
  1164                           
  1165                           ;ADC.c: 12:     ADCON0bits.CHS1=0;
  1166  0153  119F               	bcf	31,3	;volatile
  1167  0154                     l886:	
  1168                           
  1169                           ;ADC.c: 13:     ADCON0bits.CHS2=0;
  1170  0154  121F               	bcf	31,4	;volatile
  1171  0155                     l888:	
  1172                           
  1173                           ;ADC.c: 14:     ADCON0bits.CHS3=0;
  1174  0155  129F               	bcf	31,5	;volatile
  1175  0156                     l890:	
  1176                           
  1177                           ;ADC.c: 15:     ADCON0bits.ADON=1;
  1178  0156  141F               	bsf	31,0	;volatile
  1179  0157                     l892:	
  1180                           
  1181                           ;ADC.c: 16:     ADCON1bits.ADFM=0;
  1182  0157  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0158  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0159  139F               	bcf	31,7	;volatile
  1185  015A                     l894:	
  1186                           
  1187                           ;ADC.c: 17:     ADCON1bits.VCFG0=0;
  1188  015A  121F               	bcf	31,4	;volatile
  1189  015B                     l896:	
  1190                           
  1191                           ;ADC.c: 18:     ADCON1bits.VCFG1=0;
  1192  015B  129F               	bcf	31,5	;volatile
  1193  015C                     l898:	
  1194                           
  1195                           ;ADC.c: 19:     PIE1bits.ADIE=1;
  1196  015C  170C               	bsf	12,6	;volatile
  1197  015D                     l900:	
  1198                           
  1199                           ;ADC.c: 20:     PIR1bits.ADIF=0;
  1200  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1201  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1202  015F  130C               	bcf	12,6	;volatile
  1203  0160                     l902:	
  1204                           
  1205                           ;ADC.c: 24:     ADCON0bits.GO_DONE=1;
  1206  0160  149F               	bsf	31,1	;volatile
  1207  0161                     l107:	
  1208  0161  0008               	return
  1209  0162                     __end_of_ADC1:	
  1210                           
  1211                           	psect	text5
  1212  012C                     __ptext5:	
  1213 ;; *************** function _isr *****************
  1214 ;; Defined at:
  1215 ;;		line 52 in file "main.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0
  1231 ;;      Temps:          2       0       0       0       0
  1232 ;;      Totals:         2       0       0       0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    2
  1236 ;; This function calls:
  1237 ;;		_spiRead
  1238 ;;		_spiWrite
  1239 ;; This function is called by:
  1240 ;;		Interrupt level 1
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _isr
  1246  012C                     _isr:	
  1247  012C                     i1l806:	
  1248                           
  1249                           ;main.c: 53:    if(SSPIF == 1){
  1250  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1251  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1252  012E  1D8C               	btfss	12,3	;volatile
  1253  012F  2931               	goto	u17_21
  1254  0130  2932               	goto	u17_20
  1255  0131                     u17_21:	
  1256  0131  2943               	goto	i1l48
  1257  0132                     u17_20:	
  1258  0132                     i1l808:	
  1259                           
  1260                           ;main.c: 54:         PORTD = spiRead();
  1261  0132  120A  118A  2178  120A  118A  	fcall	_spiRead
  1262  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0139  0088               	movwf	8	;volatile
  1265                           
  1266                           ;main.c: 55:         spiWrite(PORTB);
  1267  013A  0806               	movf	6,w	;volatile
  1268  013B  120A  118A  2188  120A  118A  	fcall	_spiWrite
  1269  0140                     i1l810:	
  1270                           
  1271                           ;main.c: 56:         SSPIF = 0;
  1272  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0142  118C               	bcf	12,3	;volatile
  1275  0143                     i1l48:	
  1276  0143  0872               	movf	??_isr+1,w
  1277  0144  008A               	movwf	10
  1278  0145  0E71               	swapf	??_isr^(0+4294967168),w
  1279  0146  0083               	movwf	3
  1280  0147  0EFE               	swapf	btemp,f
  1281  0148  0E7E               	swapf	btemp,w
  1282  0149  0009               	retfie
  1283  014A                     __end_of_isr:	
  1284                           
  1285                           	psect	intentry
  1286  0004                     __pintentry:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1289                           
  1290  0004                     interrupt_function:	
  1291  007E                     saved_w	set	btemp
  1292  0004  00FE               	movwf	btemp
  1293  0005  0E03               	swapf	3,w
  1294  0006  00F1               	movwf	??_isr
  1295  0007  080A               	movf	10,w
  1296  0008  00F2               	movwf	??_isr+1
  1297  0009  120A  118A  292C   	ljmp	_isr
  1298                           
  1299                           	psect	text6
  1300  0188                     __ptext6:	
  1301 ;; *************** function _spiWrite *****************
  1302 ;; Defined at:
  1303 ;;		line 34 in file "SPI.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  dat             1    wreg     unsigned char 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  dat             1    0[COMMON] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       0       0       0       0
  1318 ;;      Locals:         1       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0
  1320 ;;      Totals:         1       0       0       0       0
  1321 ;;Total ram usage:        1 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; This function calls:
  1324 ;;		Nothing
  1325 ;; This function is called by:
  1326 ;;		_isr
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _spiWrite
  1332  0188                     _spiWrite:	
  1333                           
  1334                           ;incstack = 0
  1335                           ; Regs used in _spiWrite: [wreg]
  1336                           ;spiWrite@dat stored from wreg
  1337  0188  00F0               	movwf	spiWrite@dat
  1338  0189                     i1l720:	
  1339                           
  1340                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1341  0189  0870               	movf	spiWrite@dat,w
  1342  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1343  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1344  018C  0093               	movwf	19	;volatile
  1345  018D                     i1l86:	
  1346  018D  0008               	return
  1347  018E                     __end_of_spiWrite:	
  1348                           
  1349                           	psect	text7
  1350  0178                     __ptext7:	
  1351 ;; *************** function _spiRead *****************
  1352 ;; Defined at:
  1353 ;;		line 47 in file "SPI.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      unsigned char 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0
  1370 ;;      Totals:         0       0       0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    1
  1374 ;; This function calls:
  1375 ;;		_spiReceiveWait
  1376 ;; This function is called by:
  1377 ;;		_isr
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _spiRead
  1383  0178                     _spiRead:	
  1384  0178                     i1l714:	
  1385                           ;incstack = 0
  1386                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1387                           
  1388                           
  1389                           ;SPI.c: 49:     spiReceiveWait();
  1390  0178  120A  118A  2181  120A  118A  	fcall	_spiReceiveWait
  1391  017D                     i1l716:	
  1392                           
  1393                           ;SPI.c: 50:     return(SSPBUF);
  1394  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1395  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1396  017F  0813               	movf	19,w	;volatile
  1397  0180                     i1l94:	
  1398  0180  0008               	return
  1399  0181                     __end_of_spiRead:	
  1400                           
  1401                           	psect	text8
  1402  0181                     __ptext8:	
  1403 ;; *************** function _spiReceiveWait *****************
  1404 ;; Defined at:
  1405 ;;		line 29 in file "SPI.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		None
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0
  1422 ;;      Totals:         0       0       0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_spiRead
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _spiReceiveWait
  1434  0181                     _spiReceiveWait:	
  1435  0181                     i1l712:	
  1436                           ;incstack = 0
  1437                           ; Regs used in _spiReceiveWait: []
  1438                           
  1439  0181                     i1l80:	
  1440                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1441                           
  1442  0181  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0182  1303               	bcf	3,6	;RP1=0, select bank1
  1444  0183  1C14               	btfss	20,0	;volatile
  1445  0184  2986               	goto	u2_21
  1446  0185  2987               	goto	u2_20
  1447  0186                     u2_21:	
  1448  0186  2981               	goto	i1l80
  1449  0187                     u2_20:	
  1450  0187                     i1l83:	
  1451  0187  0008               	return
  1452  0188                     __end_of_spiReceiveWait:	
  1453  007E                     btemp	set	126	;btemp
  1454  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     14      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___xxtofl
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     926
                                             10 BANK0      4     4      0
                               _ADC1
                           ___xxtofl
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _ADC1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1
   ___xxtofl
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 18 23:14:05 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l60 012B  
                      l53 00DF                        l76 0172                        l77 0177  
                     l107 0161                       l623 0042                       l625 00D9  
                     l900 015D                       l636 00A3                       l637 00AF  
                     l629 0087                       l902 0160                       l860 016E  
                     l862 0171                       l854 0163                       l870 011D  
                     l880 014C                       l960 0026                       l856 016A  
                     l872 011E                       l864 010E                       l890 0156  
                     l882 0152                       l970 0053                       l962 002A  
                     l858 016C                       l874 0121                       l866 0112  
                     l892 0157                       l884 0153                       l980 007E  
                     l972 0058                       l964 003A                       l876 0122  
                     l868 0115                       l894 015A                       l886 0154  
                     l878 014A                       l990 00B1                       l982 008E  
                     l974 0065                       l966 004A                       l958 0021  
                     l896 015B                       l888 0155                       l992 00C7  
                     l984 0099                       l976 006C                       l898 015C  
                     l994 00CC                       l986 009D                       l978 0070  
                     l996 00D0                       l988 00A7                       l998 00D1  
                     u410 008D                       u411 008C                       u405 007F  
                     u430 009D                       u350 0026                       u190 016A  
                     u431 009C                       u351 0025                       u191 0169  
                     u440 00A3                       u360 002A                       u441 00A2  
                     u425 0092                       u361 0029                       u450 00A7  
                     u370 004A              __CFG_CPD$OFF 0000                       u451 00A6  
                     u371 0049                       u460 00BC                       u470 00CC  
                     u390 006B                       u471 00CB                       u391 006A  
                     u480 00D0                       u481 00CF                       u465 00B7  
                     u385 005D                       u490 00E9                       u491 00E8  
                     _adc 0077                       _isr 012C              __CFG_LVP$OFF 0000  
                    l1010 0109                      l1002 00DA                      l1004 00E4  
                    l1006 00E9                      l1008 0108                      _ADC1 014A  
                    ?_isr 0070                      i1l80 0181                      i1l48 0143  
                    i1l83 0187                      i1l94 0180                      i1l86 018D  
                    u2_20 0187                      u2_21 0186              __CFG_WRT$OFF 0000  
                    _main 00DA                      _pot1 0032                      _pot2 002E  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ?_ADC1 0070                     ??_isr 0071                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l712 0181  
                   i1l720 0189                     i1l714 0178                     i1l810 0140  
                   i1l716 017D                     i1l806 012C                     i1l808 0132  
                   u17_20 0132                     u17_21 0131                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
                   _setup 010E            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 0178           __end_of_spiRead 0181                     status 0003  
                   wtemp0 007E              __end_of_ADC1 0162            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 010E                    ??_ADC1 0073  
                  ??_main 002A                    _ADRESH 001E                    ?_setup 0070  
                  _ANSELH 0189                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of___xxtofl 00DA  
          __CFG_PWRTE$OFF 0000                    saved_w 007E          __end_of_spiWrite 018E  
               ??_spiInit 0076                 ??_spiRead 0070              ___xxtofl@arg 0026  
            ___xxtofl@exp 0025              ___xxtofl@val 0073   __end_of__initialization 001A  
          __pcstackCOMMON 0070             __end_of_setup 012C                   ??_setup 0077  
              __pbssBANK0 002E                __pmaintext 00DA                __pintentry 0004  
 __size_of_spiReceiveWait 0007                 ?___xxtofl 0073                   _SSPSTAT 0094  
               ?_spiWrite 0070                   __ptext1 010E                   __ptext2 0162  
                 __ptext3 001E                   __ptext4 014A                   __ptext5 012C  
                 __ptext6 0188                   __ptext7 0178                   __ptext8 0181  
            __size_of_isr 001E                ??___xxtofl 0020                   _spiInit 0162  
                 _spiRead 0178      end_of_initialization 001A                ??_spiWrite 0070  
           ___xxtofl@sign 0024                 _TRISAbits 0085               spiWrite@dat 0070  
          _spiReceiveWait 0181       start_initialization 000F               __end_of_isr 014A  
  __end_of_spiReceiveWait 0188               __pbssCOMMON 0077                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of___xxtofl 00BC           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006                  ?_spiInit 0073                  ?_spiRead 0070  
          __size_of_setup 001E      spiInit@sTransmitEdge 0075         interrupt_function 0004  
                _PIE1bits 008C  __CFG_FOSC$EXTRC_NOCLKOUT 0000        spiInit@sDataSample 0073  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
                ___xxtofl 001E          __size_of_spiInit 0016          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_ADC1 0018             __size_of_main 0034  
                _spiWrite 0188              spiInit@sType 0076         spiInit@sClockIdle 0074  
              _INTCONbits 000B                  intlevel1 0000          ??_spiReceiveWait 0070  
