

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 13:30:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.10
    23                           ; Generated 31/07/2019 GMT
    24                           ; 
    25                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0006                     _PORTB	set	6
   369  0008                     _PORTD	set	8
   370  001E                     _ADRESH	set	30
   371  000C                     _PIR1bits	set	12
   372  001F                     _ADCON0bits	set	31
   373  000B                     _INTCONbits	set	11
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCON	set	20
   376  0063                     _SSPIF	set	99
   377  0085                     _TRISAbits	set	133
   378  0088                     _TRISD	set	136
   379  0086                     _TRISB	set	134
   380  008C                     _PIE1bits	set	140
   381  009F                     _ADCON1bits	set	159
   382  0094                     _SSPSTATbits	set	148
   383  0094                     _SSPSTAT	set	148
   384  043B                     _TRISC3	set	1083
   385  043C                     _TRISC4	set	1084
   386  043D                     _TRISC5	set	1085
   387  0189                     _ANSELH	set	393
   388  0188                     _ANSEL	set	392
   389                           
   390                           ; #config settings
   391  0000                     
   392                           	psect	cinit
   393  000F                     start_initialization:	
   394  000F                     __initialization:	
   395                           
   396                           ; Clear objects allocated to COMMON
   397  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   398  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   399  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   400  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   401                           
   402                           ; Clear objects allocated to BANK0
   403  0013  1383               	bcf	3,7	;select IRP bank0
   404  0014  3020               	movlw	low __pbssBANK0
   405  0015  0084               	movwf	4
   406  0016  3036               	movlw	low (__pbssBANK0+22)
   407  0017  120A  118A  210C  120A  118A  	fcall	clear_ram0
   408  001C                     end_of_initialization:	
   409                           ;End of C runtime variable initialization code
   410                           
   411  001C                     __end_of__initialization:	
   412  001C  0183               	clrf	3
   413  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   414                           
   415                           	psect	bssCOMMON
   416  0075                     __pbssCOMMON:	
   417  0075                     _valor:	
   418  0075                     	ds	1
   419  0076                     _adc2:	
   420  0076                     	ds	1
   421  0077                     _adc1:	
   422  0077                     	ds	1
   423  0078                     _adc:	
   424  0078                     	ds	1
   425                           
   426                           	psect	bssBANK0
   427  0020                     __pbssBANK0:	
   428  0020                     _deci2:	
   429  0020                     	ds	4
   430  0024                     _deci1:	
   431  0024                     	ds	4
   432  0028                     _pot2:	
   433  0028                     	ds	4
   434  002C                     _pot1:	
   435  002C                     	ds	4
   436  0030                     _cont:	
   437  0030                     	ds	1
   438  0031                     _datos:	
   439  0031                     	ds	1
   440  0032                     _dec2:	
   441  0032                     	ds	1
   442  0033                     _dec1:	
   443  0033                     	ds	1
   444  0034                     _ent2:	
   445  0034                     	ds	1
   446  0035                     _ent1:	
   447  0035                     	ds	1
   448                           
   449                           	psect	clrtext
   450  010C                     clear_ram0:	
   451                           ;	Called with FSR containing the base address, and
   452                           ;	W with the last address+1
   453                           
   454  010C  0064               	clrwdt	;clear the watchdog before getting into this loop
   455  010D                     clrloop0:	
   456  010D  0180               	clrf	0	;clear RAM location pointed to by FSR
   457  010E  0A84               	incf	4,f	;increment pointer
   458  010F  0604               	xorwf	4,w	;XOR with final address
   459  0110  1903               	btfsc	3,2	;have we reached the end yet?
   460  0111  3400               	retlw	0	;all done for this memory range, return
   461  0112  0604               	xorwf	4,w	;XOR again to restore value
   462  0113  290D               	goto	clrloop0	;do the next byte
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:	
   466  0070                     ?_setup:	
   467  0070                     ?_spiReceiveWait:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ??_spiReceiveWait:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_spiWrite:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ??_spiWrite:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_spiRead:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ??_spiRead:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_ADC1:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_ADC2:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_isr:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_main:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     spiWrite@dat:	
   498                           ; 1 bytes @ 0x0
   499                           
   500                           
   501                           ; 1 bytes @ 0x0
   502  0070                     	ds	1
   503  0071                     ??_isr:	
   504                           
   505                           ; 1 bytes @ 0x1
   506  0071                     	ds	3
   507  0074                     ??_spiInit:	
   508  0074                     ??_ADC1:	
   509                           ; 1 bytes @ 0x4
   510                           
   511  0074                     ??_ADC2:	
   512                           ; 1 bytes @ 0x4
   513                           
   514  0074                     spiInit@sType:	
   515                           ; 1 bytes @ 0x4
   516                           
   517                           
   518                           ; 1 bytes @ 0x4
   519  0074                     	ds	1
   520  0075                     ??_setup:	
   521                           
   522                           	psect	cstackBANK0
   523  0036                     __pcstackBANK0:	
   524                           ; 1 bytes @ 0x5
   525                           
   526  0036                     ?_spiInit:	
   527  0036                     spiInit@sDataSample:	
   528                           ; 1 bytes @ 0x0
   529                           
   530                           
   531                           ; 1 bytes @ 0x0
   532  0036                     	ds	1
   533  0037                     spiInit@sClockIdle:	
   534                           
   535                           ; 1 bytes @ 0x1
   536  0037                     	ds	1
   537  0038                     spiInit@sTransmitEdge:	
   538                           
   539                           ; 1 bytes @ 0x2
   540  0038                     	ds	1
   541  0039                     ??_main:	
   542                           
   543                           ; 1 bytes @ 0x3
   544  0039                     	ds	2
   545                           
   546                           	psect	maintext
   547  0020                     __pmaintext:	
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 83 in file "slave.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : B00/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       2       0       0       0
   570 ;;      Totals:         0       2       0       0       0
   571 ;;Total ram usage:        2 bytes
   572 ;; Hardware stack levels required when called:    5
   573 ;; This function calls:
   574 ;;		_ADC1
   575 ;;		_ADC2
   576 ;;		_setup
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  0020                     _main:	
   585  0020                     l946:	
   586                           ;incstack = 0
   587                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   588                           
   589                           
   590                           ;slave.c: 84:     setup();
   591  0020  120A  118A  2095  120A  118A  	fcall	_setup
   592  0025                     l134:	
   593                           ;slave.c: 89:     while(1){
   594                           
   595                           
   596                           ;slave.c: 90:         ADC1();
   597  0025  120A  118A  20EB  120A  118A  	fcall	_ADC1
   598  002A                     l948:	
   599                           
   600                           ;slave.c: 91:         if(adc == 1){
   601  002A  0378               	decf	_adc,w
   602  002B  1D03               	btfss	3,2
   603  002C  282E               	goto	u131
   604  002D  282F               	goto	u130
   605  002E                     u131:	
   606  002E  2839               	goto	l958
   607  002F                     u130:	
   608  002F                     l950:	
   609                           
   610                           ;slave.c: 92:             adc1 = ADRESH;
   611  002F  1283               	bcf	3,5	;RP0=0, select bank0
   612  0030  1303               	bcf	3,6	;RP1=0, select bank0
   613  0031  081E               	movf	30,w	;volatile
   614  0032  00B9               	movwf	??_main
   615  0033  0839               	movf	??_main,w
   616  0034  00F7               	movwf	_adc1
   617  0035                     l952:	
   618                           
   619                           ;slave.c: 93:             adc = 0;
   620  0035  01F8               	clrf	_adc
   621  0036                     l954:	
   622                           
   623                           ;slave.c: 94:             PORTD = adc1;
   624  0036  0877               	movf	_adc1,w
   625  0037  0088               	movwf	8	;volatile
   626  0038                     l956:	
   627                           
   628                           ;slave.c: 95:             ADCON0bits.GO_DONE = 1;
   629  0038  149F               	bsf	31,1	;volatile
   630  0039                     l958:	
   631                           
   632                           ;slave.c: 98:         ADC2();
   633  0039  120A  118A  20D3  120A  118A  	fcall	_ADC2
   634  003E                     l960:	
   635                           
   636                           ;slave.c: 99:         if(adc == 1){
   637  003E  0378               	decf	_adc,w
   638  003F  1D03               	btfss	3,2
   639  0040  2842               	goto	u141
   640  0041  2843               	goto	u140
   641  0042                     u141:	
   642  0042  284D               	goto	l970
   643  0043                     u140:	
   644  0043                     l962:	
   645                           
   646                           ;slave.c: 100:             adc2 = ADRESH;
   647  0043  1283               	bcf	3,5	;RP0=0, select bank0
   648  0044  1303               	bcf	3,6	;RP1=0, select bank0
   649  0045  081E               	movf	30,w	;volatile
   650  0046  00B9               	movwf	??_main
   651  0047  0839               	movf	??_main,w
   652  0048  00F6               	movwf	_adc2
   653  0049                     l964:	
   654                           
   655                           ;slave.c: 101:             adc = 0;
   656  0049  01F8               	clrf	_adc
   657  004A                     l966:	
   658                           
   659                           ;slave.c: 102:             PORTB = adc2;
   660  004A  0876               	movf	_adc2,w
   661  004B  0086               	movwf	6	;volatile
   662  004C                     l968:	
   663                           
   664                           ;slave.c: 103:             ADCON0bits.GO_DONE = 1;
   665  004C  149F               	bsf	31,1	;volatile
   666  004D                     l970:	
   667                           
   668                           ;slave.c: 109:         _delay((unsigned long)((10)*(4000000/4000.0)));
   669  004D  300D               	movlw	13
   670  004E  1283               	bcf	3,5	;RP0=0, select bank0
   671  004F  1303               	bcf	3,6	;RP1=0, select bank0
   672  0050  00BA               	movwf	??_main+1
   673  0051  30FB               	movlw	251
   674  0052  00B9               	movwf	??_main
   675  0053                     u157:	
   676  0053  0BB9               	decfsz	??_main,f
   677  0054  2853               	goto	u157
   678  0055  0BBA               	decfsz	??_main+1,f
   679  0056  2853               	goto	u157
   680  0057  2825               	goto	l134
   681  0058  120A  118A  280C   	ljmp	start
   682  005B                     __end_of_main:	
   683                           
   684                           	psect	text1
   685  0095                     __ptext1:	
   686 ;; *************** function _setup *****************
   687 ;; Defined at:
   688 ;;		line 117 in file "slave.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0
   705 ;;      Totals:         0       0       0       0       0
   706 ;;Total ram usage:        0 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    4
   709 ;; This function calls:
   710 ;;		_spiInit
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _setup
   718  0095                     _setup:	
   719  0095                     l932:	
   720                           ;incstack = 0
   721                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   722                           
   723                           
   724                           ;slave.c: 118:     ANSEL = 0;
   725  0095  1683               	bsf	3,5	;RP0=1, select bank3
   726  0096  1703               	bsf	3,6	;RP1=1, select bank3
   727  0097  0188               	clrf	8	;volatile
   728                           
   729                           ;slave.c: 119:     ANSELH = 0;
   730  0098  0189               	clrf	9	;volatile
   731                           
   732                           ;slave.c: 121:     TRISB = 0;
   733  0099  1683               	bsf	3,5	;RP0=1, select bank1
   734  009A  1303               	bcf	3,6	;RP1=0, select bank1
   735  009B  0186               	clrf	6	;volatile
   736                           
   737                           ;slave.c: 122:     TRISD = 0;
   738  009C  0188               	clrf	8	;volatile
   739                           
   740                           ;slave.c: 124:     PORTB = 0;
   741  009D  1283               	bcf	3,5	;RP0=0, select bank0
   742  009E  1303               	bcf	3,6	;RP1=0, select bank0
   743  009F  0186               	clrf	6	;volatile
   744                           
   745                           ;slave.c: 125:     PORTD = 0;
   746  00A0  0188               	clrf	8	;volatile
   747  00A1                     l934:	
   748                           
   749                           ;slave.c: 127:     INTCONbits.GIE = 1;
   750  00A1  178B               	bsf	11,7	;volatile
   751  00A2                     l936:	
   752                           
   753                           ;slave.c: 128:     INTCONbits.PEIE = 1;
   754  00A2  170B               	bsf	11,6	;volatile
   755  00A3                     l938:	
   756                           
   757                           ;slave.c: 129:     PIR1bits.SSPIF = 0;
   758  00A3  118C               	bcf	12,3	;volatile
   759  00A4                     l940:	
   760                           
   761                           ;slave.c: 130:     PIE1bits.SSPIE = 1;
   762  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   763  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   764  00A6  158C               	bsf	12,3	;volatile
   765  00A7                     l942:	
   766                           
   767                           ;slave.c: 131:     TRISAbits.TRISA5 = 1;
   768  00A7  1685               	bsf	5,5	;volatile
   769  00A8                     l944:	
   770                           
   771                           ;slave.c: 133:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   772  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   773  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   774  00AA  01B6               	clrf	spiInit@sDataSample
   775  00AB  01B7               	clrf	spiInit@sClockIdle
   776  00AC  01B8               	clrf	spiInit@sTransmitEdge
   777  00AD  3024               	movlw	36
   778  00AE  120A  118A  20B4  120A  118A  	fcall	_spiInit
   779  00B3                     l142:	
   780  00B3  0008               	return
   781  00B4                     __end_of_setup:	
   782                           
   783                           	psect	text2
   784  00B4                     __ptext2:	
   785 ;; *************** function _spiInit *****************
   786 ;; Defined at:
   787 ;;		line 12 in file "SPI.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  sType           1    wreg     enum E1264
   790 ;;  sDataSample     1    0[BANK0 ] enum E1272
   791 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   792 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  sType           1    4[COMMON] enum E1264
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       3       0       0       0
   805 ;;      Locals:         1       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0
   807 ;;      Totals:         1       3       0       0       0
   808 ;;Total ram usage:        4 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    3
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_setup
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _spiInit
   820  00B4                     _spiInit:	
   821                           
   822                           ;incstack = 0
   823                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   824                           ;spiInit@sType stored from wreg
   825  00B4  00F4               	movwf	spiInit@sType
   826  00B5                     l922:	
   827                           
   828                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   829  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   830  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   831  00B7  1287               	bcf	7,5	;volatile
   832                           
   833                           ;SPI.c: 15:     TRISC4 = 1;
   834  00B8  1607               	bsf	7,4	;volatile
   835                           
   836                           ;SPI.c: 16:     if(sType & 0b00000100)
   837  00B9  1D74               	btfss	spiInit@sType,2
   838  00BA  28BC               	goto	u121
   839  00BB  28BD               	goto	u120
   840  00BC                     u121:	
   841  00BC  28C5               	goto	l928
   842  00BD                     u120:	
   843  00BD                     l924:	
   844                           
   845                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   846  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   847  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   848  00BF  0838               	movf	spiInit@sTransmitEdge,w
   849  00C0  1683               	bsf	3,5	;RP0=1, select bank1
   850  00C1  1303               	bcf	3,6	;RP1=0, select bank1
   851  00C2  0094               	movwf	20	;volatile
   852  00C3                     l926:	
   853                           
   854                           ;SPI.c: 19:         TRISC3 = 1;
   855  00C3  1587               	bsf	7,3	;volatile
   856                           
   857                           ;SPI.c: 20:     }
   858  00C4  28CD               	goto	l18
   859  00C5                     l928:	
   860                           
   861                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   862  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   863  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   864  00C7  0836               	movf	spiInit@sDataSample,w
   865  00C8  0438               	iorwf	spiInit@sTransmitEdge,w
   866  00C9  1683               	bsf	3,5	;RP0=1, select bank1
   867  00CA  1303               	bcf	3,6	;RP1=0, select bank1
   868  00CB  0094               	movwf	20	;volatile
   869  00CC                     l930:	
   870                           
   871                           ;SPI.c: 24:         TRISC3 = 0;
   872  00CC  1187               	bcf	7,3	;volatile
   873  00CD                     l18:	
   874                           ;SPI.c: 25:     }
   875                           
   876                           
   877                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   878  00CD  0874               	movf	spiInit@sType,w
   879  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   880  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   881  00D0  0437               	iorwf	spiInit@sClockIdle,w
   882  00D1  0094               	movwf	20	;volatile
   883  00D2                     l19:	
   884  00D2  0008               	return
   885  00D3                     __end_of_spiInit:	
   886                           
   887                           	psect	text3
   888  00D3                     __ptext3:	
   889 ;; *************** function _ADC2 *****************
   890 ;; Defined at:
   891 ;;		line 28 in file "ADC.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0
   908 ;;      Totals:         0       0       0       0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    3
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _ADC2
   921  00D3                     _ADC2:	
   922  00D3                     l780:	
   923                           ;incstack = 0
   924                           ; Regs used in _ADC2: [wreg+status,2+status,0]
   925                           
   926                           
   927                           ;ADC.c: 30:     INTCONbits.GIE = 1;
   928  00D3  178B               	bsf	11,7	;volatile
   929                           
   930                           ;ADC.c: 31:     INTCONbits.PEIE = 1;
   931  00D4  170B               	bsf	11,6	;volatile
   932  00D5                     l782:	
   933                           
   934                           ;ADC.c: 32:     ADCON0bits.ADCS=01;
   935  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   936  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   937  00D7  081F               	movf	31,w	;volatile
   938  00D8  393F               	andlw	-193
   939  00D9  3840               	iorlw	64
   940  00DA  009F               	movwf	31	;volatile
   941  00DB                     l784:	
   942                           
   943                           ;ADC.c: 33:     ADCON0bits.CHS0=1;
   944  00DB  151F               	bsf	31,2	;volatile
   945  00DC                     l786:	
   946                           
   947                           ;ADC.c: 34:     ADCON0bits.CHS1=0;
   948  00DC  119F               	bcf	31,3	;volatile
   949  00DD                     l788:	
   950                           
   951                           ;ADC.c: 35:     ADCON0bits.CHS2=0;
   952  00DD  121F               	bcf	31,4	;volatile
   953  00DE                     l790:	
   954                           
   955                           ;ADC.c: 36:     ADCON0bits.CHS3=0;
   956  00DE  129F               	bcf	31,5	;volatile
   957  00DF                     l792:	
   958                           
   959                           ;ADC.c: 37:     ADCON0bits.ADON=1;
   960  00DF  141F               	bsf	31,0	;volatile
   961  00E0                     l794:	
   962                           
   963                           ;ADC.c: 38:     ADCON1bits.ADFM=0;
   964  00E0  1683               	bsf	3,5	;RP0=1, select bank1
   965  00E1  1303               	bcf	3,6	;RP1=0, select bank1
   966  00E2  139F               	bcf	31,7	;volatile
   967  00E3                     l796:	
   968                           
   969                           ;ADC.c: 39:     ADCON1bits.VCFG0=0;
   970  00E3  121F               	bcf	31,4	;volatile
   971  00E4                     l798:	
   972                           
   973                           ;ADC.c: 40:     ADCON1bits.VCFG1=0;
   974  00E4  129F               	bcf	31,5	;volatile
   975  00E5                     l800:	
   976                           
   977                           ;ADC.c: 41:     PIE1bits.ADIE=1;
   978  00E5  170C               	bsf	12,6	;volatile
   979  00E6                     l802:	
   980                           
   981                           ;ADC.c: 42:     PIR1bits.ADIF=0;
   982  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   983  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   984  00E8  130C               	bcf	12,6	;volatile
   985  00E9                     l804:	
   986                           
   987                           ;ADC.c: 44:     ADCON0bits.GO_DONE=1;
   988  00E9  149F               	bsf	31,1	;volatile
   989  00EA                     l52:	
   990  00EA  0008               	return
   991  00EB                     __end_of_ADC2:	
   992                           
   993                           	psect	text4
   994  00EB                     __ptext4:	
   995 ;; *************** function _ADC1 *****************
   996 ;; Defined at:
   997 ;;		line 5 in file "ADC.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    3
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _ADC1
  1027  00EB                     _ADC1:	
  1028  00EB                     l754:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _ADC1: [wreg+status,2+status,0]
  1031                           
  1032                           
  1033                           ;ADC.c: 8:     INTCONbits.GIE = 1;
  1034  00EB  178B               	bsf	11,7	;volatile
  1035                           
  1036                           ;ADC.c: 9:     INTCONbits.PEIE = 1;
  1037  00EC  170B               	bsf	11,6	;volatile
  1038  00ED                     l756:	
  1039                           
  1040                           ;ADC.c: 11:     ADCON0bits.ADCS=01;
  1041  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1042  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1043  00EF  081F               	movf	31,w	;volatile
  1044  00F0  393F               	andlw	-193
  1045  00F1  3840               	iorlw	64
  1046  00F2  009F               	movwf	31	;volatile
  1047  00F3                     l758:	
  1048                           
  1049                           ;ADC.c: 12:     ADCON0bits.CHS0=0;
  1050  00F3  111F               	bcf	31,2	;volatile
  1051  00F4                     l760:	
  1052                           
  1053                           ;ADC.c: 13:     ADCON0bits.CHS1=0;
  1054  00F4  119F               	bcf	31,3	;volatile
  1055  00F5                     l762:	
  1056                           
  1057                           ;ADC.c: 14:     ADCON0bits.CHS2=0;
  1058  00F5  121F               	bcf	31,4	;volatile
  1059  00F6                     l764:	
  1060                           
  1061                           ;ADC.c: 15:     ADCON0bits.CHS3=0;
  1062  00F6  129F               	bcf	31,5	;volatile
  1063  00F7                     l766:	
  1064                           
  1065                           ;ADC.c: 16:     ADCON0bits.ADON=1;
  1066  00F7  141F               	bsf	31,0	;volatile
  1067  00F8                     l768:	
  1068                           
  1069                           ;ADC.c: 17:     ADCON1bits.ADFM=0;
  1070  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  1071  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  1072  00FA  139F               	bcf	31,7	;volatile
  1073  00FB                     l770:	
  1074                           
  1075                           ;ADC.c: 18:     ADCON1bits.VCFG0=0;
  1076  00FB  121F               	bcf	31,4	;volatile
  1077  00FC                     l772:	
  1078                           
  1079                           ;ADC.c: 19:     ADCON1bits.VCFG1=0;
  1080  00FC  129F               	bcf	31,5	;volatile
  1081  00FD                     l774:	
  1082                           
  1083                           ;ADC.c: 20:     PIE1bits.ADIE=1;
  1084  00FD  170C               	bsf	12,6	;volatile
  1085  00FE                     l776:	
  1086                           
  1087                           ;ADC.c: 21:     PIR1bits.ADIF=0;
  1088  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1089  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0100  130C               	bcf	12,6	;volatile
  1091  0101                     l778:	
  1092                           
  1093                           ;ADC.c: 25:     ADCON0bits.GO_DONE=1;
  1094  0101  149F               	bsf	31,1	;volatile
  1095  0102                     l49:	
  1096  0102  0008               	return
  1097  0103                     __end_of_ADC1:	
  1098                           
  1099                           	psect	text5
  1100  005B                     __ptext5:	
  1101 ;; *************** function _isr *****************
  1102 ;; Defined at:
  1103 ;;		line 56 in file "slave.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1117 ;;      Params:         0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0
  1119 ;;      Temps:          3       0       0       0       0
  1120 ;;      Totals:         3       0       0       0       0
  1121 ;;Total ram usage:        3 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		_spiRead
  1126 ;;		_spiWrite
  1127 ;; This function is called by:
  1128 ;;		Interrupt level 1
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _isr
  1134  005B                     _isr:	
  1135  005B                     i1l826:	
  1136                           
  1137                           ;slave.c: 57:     INTCONbits.GIE = 0;
  1138  005B  138B               	bcf	11,7	;volatile
  1139                           
  1140                           ;slave.c: 58:     INTCONbits.PEIE = 0;
  1141  005C  130B               	bcf	11,6	;volatile
  1142                           
  1143                           ;slave.c: 60:     if (PIR1bits.ADIF == 1){
  1144  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1145  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1146  005F  1F0C               	btfss	12,6	;volatile
  1147  0060  2862               	goto	u3_21
  1148  0061  2863               	goto	u3_20
  1149  0062                     u3_21:	
  1150  0062  2866               	goto	i1l125
  1151  0063                     u3_20:	
  1152  0063                     i1l828:	
  1153                           
  1154                           ;slave.c: 61:         adc = 1;
  1155  0063  01F8               	clrf	_adc
  1156  0064  0AF8               	incf	_adc,f
  1157                           
  1158                           ;slave.c: 62:         PIR1bits.ADIF = 0;
  1159  0065  130C               	bcf	12,6	;volatile
  1160  0066                     i1l125:	
  1161                           ;slave.c: 64:     }
  1162                           
  1163                           
  1164                           ;slave.c: 66:    if(SSPIF == 1){
  1165  0066  1D8C               	btfss	12,3	;volatile
  1166  0067  2869               	goto	u4_21
  1167  0068  286A               	goto	u4_20
  1168  0069                     u4_21:	
  1169  0069  288C               	goto	i1l842
  1170  006A                     u4_20:	
  1171  006A                     i1l830:	
  1172                           
  1173                           ;slave.c: 67:         valor = spiRead();
  1174  006A  120A  118A  2103  120A  118A  	fcall	_spiRead
  1175  006F  00F1               	movwf	??_isr
  1176  0070  0871               	movf	??_isr,w
  1177  0071  00F5               	movwf	_valor
  1178  0072                     i1l832:	
  1179                           
  1180                           ;slave.c: 68:         if(valor == 1){
  1181  0072  0375               	decf	_valor,w
  1182  0073  1D03               	btfss	3,2
  1183  0074  2876               	goto	u5_21
  1184  0075  2877               	goto	u5_20
  1185  0076                     u5_21:	
  1186  0076  287D               	goto	i1l836
  1187  0077                     u5_20:	
  1188  0077                     i1l834:	
  1189                           
  1190                           ;slave.c: 69:             spiWrite(adc1);
  1191  0077  0877               	movf	_adc1,w
  1192  0078  120A  118A  211B  120A  118A  	fcall	_spiWrite
  1193  007D                     i1l836:	
  1194                           
  1195                           ;slave.c: 71:         if(valor == 2){
  1196  007D  3002               	movlw	2
  1197  007E  0675               	xorwf	_valor,w
  1198  007F  1D03               	btfss	3,2
  1199  0080  2882               	goto	u6_21
  1200  0081  2883               	goto	u6_20
  1201  0082                     u6_21:	
  1202  0082  2889               	goto	i1l840
  1203  0083                     u6_20:	
  1204  0083                     i1l838:	
  1205                           
  1206                           ;slave.c: 72:             spiWrite(adc2);
  1207  0083  0876               	movf	_adc2,w
  1208  0084  120A  118A  211B  120A  118A  	fcall	_spiWrite
  1209  0089                     i1l840:	
  1210                           
  1211                           ;slave.c: 74:         SSPIF = 0;
  1212  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1213  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1214  008B  118C               	bcf	12,3	;volatile
  1215  008C                     i1l842:	
  1216                           
  1217                           ;slave.c: 77:     INTCONbits.GIE = 1;
  1218  008C  178B               	bsf	11,7	;volatile
  1219  008D                     i1l844:	
  1220                           
  1221                           ;slave.c: 78:     INTCONbits.PEIE = 1;
  1222  008D  170B               	bsf	11,6	;volatile
  1223  008E                     i1l129:	
  1224  008E  0873               	movf	??_isr+2,w
  1225  008F  008A               	movwf	10
  1226  0090  0E72               	swapf	(??_isr+1)^(0+4294967168),w
  1227  0091  0083               	movwf	3
  1228  0092  0EFE               	swapf	btemp,f
  1229  0093  0E7E               	swapf	btemp,w
  1230  0094  0009               	retfie
  1231  0095                     __end_of_isr:	
  1232                           
  1233                           	psect	intentry
  1234  0004                     __pintentry:	
  1235                           ;incstack = 0
  1236                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1237                           
  1238  0004                     interrupt_function:	
  1239  007E                     saved_w	set	btemp
  1240  0004  00FE               	movwf	btemp
  1241  0005  0E03               	swapf	3,w
  1242  0006  00F2               	movwf	??_isr+1
  1243  0007  080A               	movf	10,w
  1244  0008  00F3               	movwf	??_isr+2
  1245  0009  120A  118A  285B   	ljmp	_isr
  1246                           
  1247                           	psect	text6
  1248  011B                     __ptext6:	
  1249 ;; *************** function _spiWrite *****************
  1250 ;; Defined at:
  1251 ;;		line 35 in file "SPI.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;  dat             1    wreg     unsigned char 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  dat             1    0[COMMON] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1265 ;;      Params:         0       0       0       0       0
  1266 ;;      Locals:         1       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0
  1268 ;;      Totals:         1       0       0       0       0
  1269 ;;Total ram usage:        1 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_isr
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _spiWrite
  1280  011B                     _spiWrite:	
  1281                           
  1282                           ;incstack = 0
  1283                           ; Regs used in _spiWrite: [wreg]
  1284                           ;spiWrite@dat stored from wreg
  1285  011B  00F0               	movwf	spiWrite@dat
  1286  011C                     i1l746:	
  1287                           
  1288                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1289  011C  0870               	movf	spiWrite@dat,w
  1290  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1291  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1292  011F  0093               	movwf	19	;volatile
  1293  0120                     i1l28:	
  1294  0120  0008               	return
  1295  0121                     __end_of_spiWrite:	
  1296                           
  1297                           	psect	text7
  1298  0103                     __ptext7:	
  1299 ;; *************** function _spiRead *****************
  1300 ;; Defined at:
  1301 ;;		line 48 in file "SPI.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      unsigned char 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1315 ;;      Params:         0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0
  1318 ;;      Totals:         0       0       0       0       0
  1319 ;;Total ram usage:        0 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    1
  1322 ;; This function calls:
  1323 ;;		_spiReceiveWait
  1324 ;; This function is called by:
  1325 ;;		_isr
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _spiRead
  1331  0103                     _spiRead:	
  1332  0103                     i1l748:	
  1333                           ;incstack = 0
  1334                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1335                           
  1336                           
  1337                           ;SPI.c: 50:     spiReceiveWait();
  1338  0103  120A  118A  2114  120A  118A  	fcall	_spiReceiveWait
  1339  0108                     i1l750:	
  1340                           
  1341                           ;SPI.c: 51:     return(SSPBUF);
  1342  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1344  010A  0813               	movf	19,w	;volatile
  1345  010B                     i1l36:	
  1346  010B  0008               	return
  1347  010C                     __end_of_spiRead:	
  1348                           
  1349                           	psect	text8
  1350  0114                     __ptext8:	
  1351 ;; *************** function _spiReceiveWait *****************
  1352 ;; Defined at:
  1353 ;;		line 30 in file "SPI.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		None
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0
  1370 ;;      Totals:         0       0       0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_spiRead
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _spiReceiveWait
  1382  0114                     _spiReceiveWait:	
  1383  0114                     i1l744:	
  1384                           ;incstack = 0
  1385                           ; Regs used in _spiReceiveWait: []
  1386                           
  1387  0114                     i1l22:	
  1388                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1389                           
  1390  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1391  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1392  0116  1C14               	btfss	20,0	;volatile
  1393  0117  2919               	goto	u2_21
  1394  0118  291A               	goto	u2_20
  1395  0119                     u2_21:	
  1396  0119  2914               	goto	i1l22
  1397  011A                     u2_20:	
  1398  011A                     i1l25:	
  1399  011A  0008               	return
  1400  011B                     __end_of_spiReceiveWait:	
  1401  007E                     btemp	set	126	;btemp
  1402  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      5      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     456
                                              3 BANK0      2     2      0
                               _ADC1
                               _ADC2
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ADC2                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1
   _ADC2
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 13:30:25 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l18 00CD  
                      l19 00D2                        l52 00EA                        l49 0102  
                      fsr 0004                       l142 00B3                       l134 0025  
                     l800 00E5                       l802 00E6                       l804 00E9  
                     l760 00F4                       l770 00FB                       l762 00F5  
                     l754 00EB                       l930 00CC                       l922 00B5  
                     l772 00FC                       l764 00F6                       l756 00ED  
                     l780 00D3                       l924 00BD                       l940 00A4  
                     l932 0095                       l774 00FD                       l766 00F7  
                     l758 00F3                       l790 00DE                       l782 00D5  
                     l926 00C3                       l942 00A7                       l934 00A1  
                     l950 002F                       l776 00FE                       l768 00F8  
                     l792 00DF                       l784 00DB                       l928 00C5  
                     l944 00A8                       l936 00A2                       l960 003E  
                     l952 0035                       l778 0101                       l794 00E0  
                     l786 00DC                       l938 00A3                       l962 0043  
                     l970 004D                       l954 0036                       l946 0020  
                     l796 00E3                       l788 00DD                       l964 0049  
                     l956 0038                       l948 002A                       l798 00E4  
                     l966 004A                       l958 0039                       l968 004C  
                     u120 00BD                       u121 00BC                       u130 002F  
                     u131 002E                       u140 0043                       u141 0042  
                     u157 0053              __CFG_CPD$OFF 0000                       _adc 0078  
                     _isr 005B                       indf 0000              __CFG_LVP$OFF 0000  
                    _ADC1 00EB                      _ADC2 00D3                      ?_isr 0070  
                    i1l22 0114                      i1l25 011A                      i1l36 010B  
                    i1l28 0120                      u2_20 011A                      u2_21 0119  
                    u3_20 0063                      u3_21 0062                      u4_20 006A  
                    u4_21 0069                      u5_20 0077                      u5_21 0076  
                    u6_20 0083                      u6_21 0082              __CFG_WRT$OFF 0000  
                    _adc1 0077                      _adc2 0076                      _dec1 0033  
                    _dec2 0032                      _ent1 0035                      _ent2 0034  
                    _cont 0030                      _main 0020                      _pot1 002C  
                    _pot2 0028                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ?_ADC1 0070                     ?_ADC2 0070  
                   ??_isr 0071                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l125 0066                     i1l129 008E  
                   i1l750 0108                     i1l830 006A                     i1l744 0114  
                   i1l840 0089                     i1l832 0072                     i1l746 011C  
                   i1l834 0077                     i1l842 008C                     i1l826 005B  
                   i1l748 0103                     i1l844 008D                     i1l836 007D  
                   i1l828 0063                     i1l838 0083                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000                     _deci1 0024  
                   _deci2 0020                     _datos 0031                     _valor 0075  
                   _setup 0095            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 00D3           __end_of_spiRead 010C                     status 0003  
                   wtemp0 007E              __end_of_ADC1 0103              __end_of_ADC2 00EB  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 005B  
                  ??_ADC1 0074                    ??_ADC2 0074                    ??_main 0039  
                  _ADRESH 001E                    ?_setup 0070                    _ANSELH 0189  
                  _TRISC3 043B                    _TRISC4 043C                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  saved_w 007E          __end_of_spiWrite 0121                 ??_spiInit 0074  
               ??_spiRead 0070   __end_of__initialization 001C            __pcstackCOMMON 0070  
           __end_of_setup 00B4                   ??_setup 0075                __pbssBANK0 0020  
              __pmaintext 0020                __pintentry 0004   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   __ptext1 0095  
                 __ptext2 00B4                   __ptext3 00D3                   __ptext4 00EB  
                 __ptext5 005B                   __ptext6 011B                   __ptext7 0103  
                 __ptext8 0114              __size_of_isr 003A                   _spiInit 00B4  
                 _spiRead 0103                   clrloop0 010D      end_of_initialization 001C  
              ??_spiWrite 0070                 _TRISAbits 0085               spiWrite@dat 0070  
          _spiReceiveWait 0114       start_initialization 000F               __end_of_isr 0095  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 011B               __pbssCOMMON 0075  
               ___latbits 0002             __pcstackBANK0 0036           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006                  ?_spiInit 0036                  ?_spiRead 0070  
          __size_of_setup 001F      spiInit@sTransmitEdge 0038         interrupt_function 0004  
               clear_ram0 010C                  _PIE1bits 008C        spiInit@sDataSample 0036  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
        __size_of_spiInit 001F          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_ADC1 0018             __size_of_ADC2 0018             __size_of_main 003B  
                _spiWrite 011B              spiInit@sType 0074         spiInit@sClockIdle 0037  
              _INTCONbits 000B                  intlevel1 0000          ??_spiReceiveWait 0070  
