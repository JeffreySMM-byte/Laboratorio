

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 05 14:25:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362                           
   363                           	psect	strings
   364  0100                     __pstrings:	
   365  0100                     stringtab:	
   366  0100                     __stringtab:	
   367  0100                     stringcode:	
   368                           ;	String table - string pointers are 1 byte each
   369                           
   370  0100                     stringdir:	
   371  0100  3001               	movlw	high stringdir
   372  0101  008A               	movwf	10
   373  0102  0804               	movf	4,w
   374  0103  0A84               	incf	4,f
   375  0104  0782               	addwf	2,f
   376  0105                     __stringbase:	
   377  0105  3400               	retlw	0
   378  0106                     __end_of__stringtab:	
   379  0106                     _SEGMENT_MAP:	
   380  0106  343F               	retlw	63
   381  0107  3406               	retlw	6
   382  0108  345B               	retlw	91
   383  0109  344F               	retlw	79
   384  010A  3466               	retlw	102
   385  010B  346D               	retlw	109
   386  010C  347D               	retlw	125
   387  010D  3407               	retlw	7
   388  010E  346F               	retlw	111
   389  010F  3477               	retlw	119
   390  0110                     __end_of_SEGMENT_MAP:	
   391  000B                     _INTCON	set	11
   392  0009                     _PORTE	set	9
   393  0008                     _PORTD	set	8
   394  0006                     _PORTB	set	6
   395  0007                     _PORTC	set	7
   396  0008                     _PORTDbits	set	8
   397  001E                     _ADRESH	set	30
   398  001F                     _ADCON0bits	set	31
   399  0001                     _TMR0	set	1
   400  000C                     _PIR1bits	set	12
   401  0005                     _PORTA	set	5
   402  0006                     _PORTBbits	set	6
   403  000B                     _INTCONbits	set	11
   404  0081                     _OPTION_REG	set	129
   405  009F                     _ADCON1bits	set	159
   406  008C                     _PIE1bits	set	140
   407  0096                     _IOCBbits	set	150
   408  0085                     _TRISA	set	133
   409  0086                     _TRISBbits	set	134
   410  0087                     _TRISC	set	135
   411  0088                     _TRISD	set	136
   412  0188                     _ANSEL	set	392
   413  0189                     _ANSELH	set	393
   414                           
   415                           ; #config settings
   416  0000                     
   417                           	psect	cinit
   418  000F                     start_initialization:	
   419  000F                     __initialization:	
   420                           
   421                           ; Clear objects allocated to COMMON
   422  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   423  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   424  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   425  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   426  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   427  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   428  0015                     end_of_initialization:	
   429                           ;End of C runtime variable initialization code
   430                           
   431  0015                     __end_of__initialization:	
   432  0015  0183               	clrf	3
   433  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	bssCOMMON
   436  0070                     __pbssCOMMON:	
   437  0070                     _adc:	
   438  0070                     	ds	1
   439  0071                     _d:	
   440  0071                     	ds	1
   441  0072                     _d2:	
   442  0072                     	ds	1
   443  0073                     _d1:	
   444  0073                     	ds	1
   445  0074                     _contador:	
   446  0074                     	ds	1
   447  0075                     _i:	
   448  0075                     	ds	1
   449                           
   450                           	psect	cstackCOMMON
   451  0076                     __pcstackCOMMON:	
   452  0076                     ?_init:	
   453  0076                     ?_ADC:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0076                     ?_initTMR0:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0076                     ?_ISR:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0076                     ??_ISR:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0076                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0076                     	ds	3
   471  0079                     ??_init:	
   472  0079                     ??_ADC:	
   473                           ; 1 bytes @ 0x3
   474                           
   475  0079                     ??_initTMR0:	
   476                           ; 1 bytes @ 0x3
   477                           
   478  0079                     ??_main:	
   479                           ; 1 bytes @ 0x3
   480                           
   481                           
   482                           ; 1 bytes @ 0x3
   483  0079                     	ds	2
   484                           
   485                           	psect	maintext
   486  0019                     __pmaintext:	
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 94 in file "main1.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : B00/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          2       0       0       0       0
   509 ;;      Totals:         2       0       0       0       0
   510 ;;Total ram usage:        2 bytes
   511 ;; Hardware stack levels required when called:    2
   512 ;; This function calls:
   513 ;;		_ADC
   514 ;;		_init
   515 ;;		_initTMR0
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           
   522                           ;psect for function _main
   523  0019                     _main:	
   524  0019                     l816:	
   525                           ;incstack = 0
   526                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   527                           
   528                           
   529                           ;main1.c: 95:     init();
   530  0019  120A  118A  20C6  120A  118A  	fcall	_init
   531  001E                     l818:	
   532                           
   533                           ;main1.c: 96:     ADC();
   534  001E  120A  118A  20E3  120A  118A  	fcall	_ADC
   535  0023                     l820:	
   536                           
   537                           ;main1.c: 97:     initTMR0();
   538  0023  120A  118A  2110  120A  118A  	fcall	_initTMR0
   539  0028                     l822:	
   540                           
   541                           ;main1.c: 101:         _delay((unsigned long)((10)*(8000000/4000.0)));
   542  0028  301A               	movlw	26
   543  0029  00FA               	movwf	??_main+1
   544  002A  30F8               	movlw	248
   545  002B  00F9               	movwf	??_main
   546  002C                     u137:	
   547  002C  0BF9               	decfsz	??_main,f
   548  002D  282C               	goto	u137
   549  002E  0BFA               	decfsz	??_main+1,f
   550  002F  282C               	goto	u137
   551  0030  0000               	nop
   552  0031                     l824:	
   553                           
   554                           ;main1.c: 102:         ADCON0bits.GO_DONE = 1;
   555  0031  1283               	bcf	3,5	;RP0=0, select bank0
   556  0032  1303               	bcf	3,6	;RP1=0, select bank0
   557  0033  149F               	bsf	31,1	;volatile
   558  0034                     l826:	
   559                           
   560                           ;main1.c: 103:         if (adc == 1){
   561  0034  0370               	decf	_adc,w
   562  0035  1D03               	btfss	3,2
   563  0036  2838               	goto	u101
   564  0037  2839               	goto	u100
   565  0038                     u101:	
   566  0038  2850               	goto	l836
   567  0039                     u100:	
   568  0039                     l828:	
   569                           
   570                           ;main1.c: 104:         d1 = ADRESH&0b00001111;
   571  0039  081E               	movf	30,w	;volatile
   572  003A  390F               	andlw	15
   573  003B  00F9               	movwf	??_main
   574  003C  0879               	movf	??_main,w
   575  003D  00F3               	movwf	_d1
   576  003E                     l830:	
   577                           
   578                           ;main1.c: 105:         d2 = (ADRESH&0b11110000)>>4;
   579  003E  081E               	movf	30,w	;volatile
   580  003F  00F9               	movwf	??_main
   581  0040  3004               	movlw	4
   582  0041                     u115:	
   583  0041  1003               	clrc
   584  0042  0CF9               	rrf	??_main,f
   585  0043  3EFF               	addlw	-1
   586  0044  1D03               	skipz
   587  0045  2841               	goto	u115
   588  0046  0879               	movf	??_main,w
   589  0047  390F               	andlw	15
   590  0048  00FA               	movwf	??_main+1
   591  0049  087A               	movf	??_main+1,w
   592  004A  00F2               	movwf	_d2
   593  004B                     l832:	
   594                           
   595                           ;main1.c: 106:         d = ADRESH;
   596  004B  081E               	movf	30,w	;volatile
   597  004C  00F9               	movwf	??_main
   598  004D  0879               	movf	??_main,w
   599  004E  00F1               	movwf	_d
   600  004F                     l834:	
   601                           
   602                           ;main1.c: 107:         adc = 0;}
   603  004F  01F0               	clrf	_adc
   604  0050                     l836:	
   605                           
   606                           ;main1.c: 108:         if (i <= d){
   607  0050  0875               	movf	_i,w
   608  0051  0271               	subwf	_d,w
   609  0052  1C03               	skipc
   610  0053  2855               	goto	u121
   611  0054  2856               	goto	u120
   612  0055                     u121:	
   613  0055  2858               	goto	l81
   614  0056                     u120:	
   615  0056                     l838:	
   616                           
   617                           ;main1.c: 109:             PORTDbits.RD2 = 1;
   618  0056  1508               	bsf	8,2	;volatile
   619                           
   620                           ;main1.c: 110:         }else{
   621  0057  2859               	goto	l82
   622  0058                     l81:	
   623                           
   624                           ;main1.c: 111:             PORTDbits.RD2 = 0;
   625  0058  1108               	bcf	8,2	;volatile
   626  0059                     l82:	
   627                           ;main1.c: 112:         }
   628                           
   629                           
   630                           ;main1.c: 113:                 PORTDbits.RD1 = 1;
   631  0059  1488               	bsf	8,1	;volatile
   632                           
   633                           ;main1.c: 114:                 PORTDbits.RD0 = 0;
   634  005A  1008               	bcf	8,0	;volatile
   635  005B                     l840:	
   636                           
   637                           ;main1.c: 115:                 PORTC = SEGMENT_MAP[d1];
   638  005B  0873               	movf	_d1,w
   639  005C  3E01               	addlw	low ((_SEGMENT_MAP-__stringbase)| (0+32768))
   640  005D  0084               	movwf	4
   641  005E  120A  118A  2100  120A  118A  	fcall	stringdir
   642  0063  0087               	movwf	7	;volatile
   643  0064                     l842:	
   644                           
   645                           ;main1.c: 116:                 _delay((unsigned long)((5)*(8000000/4000.0)));
   646  0064  300D               	movlw	13
   647  0065  00FA               	movwf	??_main+1
   648  0066  30FB               	movlw	251
   649  0067  00F9               	movwf	??_main
   650  0068                     u147:	
   651  0068  0BF9               	decfsz	??_main,f
   652  0069  2868               	goto	u147
   653  006A  0BFA               	decfsz	??_main+1,f
   654  006B  2868               	goto	u147
   655  006C  286D               	nop2
   656  006D                     l844:	
   657                           
   658                           ;main1.c: 118:                 PORTDbits.RD1 = 0;
   659  006D  1283               	bcf	3,5	;RP0=0, select bank0
   660  006E  1303               	bcf	3,6	;RP1=0, select bank0
   661  006F  1088               	bcf	8,1	;volatile
   662  0070                     l846:	
   663                           
   664                           ;main1.c: 119:                 PORTDbits.RD0 = 1;
   665  0070  1408               	bsf	8,0	;volatile
   666  0071                     l848:	
   667                           
   668                           ;main1.c: 120:                 PORTC = SEGMENT_MAP[d2];
   669  0071  0872               	movf	_d2,w
   670  0072  3E01               	addlw	low ((_SEGMENT_MAP-__stringbase)| (0+32768))
   671  0073  0084               	movwf	4
   672  0074  120A  118A  2100  120A  118A  	fcall	stringdir
   673  0079  0087               	movwf	7	;volatile
   674                           
   675                           ;main1.c: 121:                 _delay((unsigned long)((5)*(8000000/4000.0)));
   676  007A  300D               	movlw	13
   677  007B  00FA               	movwf	??_main+1
   678  007C  30FB               	movlw	251
   679  007D  00F9               	movwf	??_main
   680  007E                     u157:	
   681  007E  0BF9               	decfsz	??_main,f
   682  007F  287E               	goto	u157
   683  0080  0BFA               	decfsz	??_main+1,f
   684  0081  287E               	goto	u157
   685  0082  2883               	nop2
   686  0083  2828               	goto	l822
   687  0084  120A  118A  280C   	ljmp	start
   688  0087                     __end_of_main:	
   689                           
   690                           	psect	text1
   691  0110                     __ptext1:	
   692 ;; *************** function _initTMR0 *****************
   693 ;; Defined at:
   694 ;;		line 5 in file "TMR0.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    1
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           
   723                           ;psect for function _initTMR0
   724  0110                     _initTMR0:	
   725  0110                     l742:	
   726                           ;incstack = 0
   727                           ; Regs used in _initTMR0: [wreg]
   728                           
   729                           
   730                           ;TMR0.c: 6:     OPTION_REG = 0x81;
   731  0110  3081               	movlw	129
   732  0111  1683               	bsf	3,5	;RP0=1, select bank1
   733  0112  1303               	bcf	3,6	;RP1=0, select bank1
   734  0113  0081               	movwf	1	;volatile
   735                           
   736                           ;TMR0.c: 7:     TMR0 = 4;
   737  0114  3004               	movlw	4
   738  0115  1283               	bcf	3,5	;RP0=0, select bank0
   739  0116  1303               	bcf	3,6	;RP1=0, select bank0
   740  0117  0081               	movwf	1	;volatile
   741  0118                     l744:	
   742                           
   743                           ;TMR0.c: 8:     INTCONbits.T0IE = 1;
   744  0118  168B               	bsf	11,5	;volatile
   745  0119                     l108:	
   746  0119  0008               	return
   747  011A                     __end_of_initTMR0:	
   748                           
   749                           	psect	text2
   750  00C6                     __ptext2:	
   751 ;; *************** function _init *****************
   752 ;; Defined at:
   753 ;;		line 132 in file "main1.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		status,2
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _init
   783  00C6                     _init:	
   784  00C6                     l700:	
   785                           ;incstack = 0
   786                           ; Regs used in _init: [status,2]
   787                           
   788                           
   789                           ;main1.c: 133:     TRISD = 0;
   790  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   791  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   792  00C8  0188               	clrf	8	;volatile
   793                           
   794                           ;main1.c: 134:     TRISC = 0;
   795  00C9  0187               	clrf	7	;volatile
   796  00CA                     l702:	
   797                           
   798                           ;main1.c: 135:     TRISBbits.TRISB2 = 1;
   799  00CA  1506               	bsf	6,2	;volatile
   800  00CB                     l704:	
   801                           
   802                           ;main1.c: 136:     TRISBbits.TRISB0 = 1;
   803  00CB  1406               	bsf	6,0	;volatile
   804  00CC                     l706:	
   805                           
   806                           ;main1.c: 137:     TRISBbits.TRISB1 = 1;
   807  00CC  1486               	bsf	6,1	;volatile
   808                           
   809                           ;main1.c: 138:     TRISA = 0;
   810  00CD  0185               	clrf	5	;volatile
   811                           
   812                           ;main1.c: 139:     ANSELH = 0;
   813  00CE  1683               	bsf	3,5	;RP0=1, select bank3
   814  00CF  1703               	bsf	3,6	;RP1=1, select bank3
   815  00D0  0189               	clrf	9	;volatile
   816                           
   817                           ;main1.c: 140:     ANSEL = 0;
   818  00D1  0188               	clrf	8	;volatile
   819                           
   820                           ;main1.c: 141:     PORTA = 0;
   821  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   822  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   823  00D4  0185               	clrf	5	;volatile
   824                           
   825                           ;main1.c: 142:     PORTB = 0;
   826  00D5  0186               	clrf	6	;volatile
   827                           
   828                           ;main1.c: 143:     PORTC = 0;
   829  00D6  0187               	clrf	7	;volatile
   830                           
   831                           ;main1.c: 144:     PORTD = 0;
   832  00D7  0188               	clrf	8	;volatile
   833                           
   834                           ;main1.c: 145:     PORTE = 0;
   835  00D8  0189               	clrf	9	;volatile
   836                           
   837                           ;main1.c: 146:     INTCON=0;
   838  00D9  018B               	clrf	11	;volatile
   839  00DA                     l708:	
   840                           
   841                           ;main1.c: 147:     INTCONbits.GIE = 1;
   842  00DA  178B               	bsf	11,7	;volatile
   843  00DB                     l710:	
   844                           
   845                           ;main1.c: 148:     INTCONbits.RBIE = 1;
   846  00DB  158B               	bsf	11,3	;volatile
   847  00DC                     l712:	
   848                           
   849                           ;main1.c: 149:     INTCONbits.RBIF = 0;
   850  00DC  100B               	bcf	11,0	;volatile
   851  00DD                     l714:	
   852                           
   853                           ;main1.c: 150:     IOCBbits.IOCB0 = 1;
   854  00DD  1683               	bsf	3,5	;RP0=1, select bank1
   855  00DE  1303               	bcf	3,6	;RP1=0, select bank1
   856  00DF  1416               	bsf	22,0	;volatile
   857  00E0                     l716:	
   858                           
   859                           ;main1.c: 151:     IOCBbits.IOCB1 = 1;
   860  00E0  1496               	bsf	22,1	;volatile
   861  00E1                     l718:	
   862                           
   863                           ;main1.c: 152:     IOCBbits.IOCB2 = 1;
   864  00E1  1516               	bsf	22,2	;volatile
   865  00E2                     l88:	
   866  00E2  0008               	return
   867  00E3                     __end_of_init:	
   868                           
   869                           	psect	text3
   870  00E3                     __ptext3:	
   871 ;; *************** function _ADC *****************
   872 ;; Defined at:
   873 ;;		line 5 in file "ADC.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0
   890 ;;      Totals:         0       0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           
   902                           ;psect for function _ADC
   903  00E3                     _ADC:	
   904  00E3                     l720:	
   905                           ;incstack = 0
   906                           ; Regs used in _ADC: [wreg+status,2+status,0]
   907                           
   908                           
   909                           ;ADC.c: 6: PIE1bits.ADIE=1;
   910  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   911  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   912  00E5  170C               	bsf	12,6	;volatile
   913                           
   914                           ;ADC.c: 7: PIR1bits.ADIF=1;
   915  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   916  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   917  00E8  170C               	bsf	12,6	;volatile
   918  00E9                     l722:	
   919                           
   920                           ;ADC.c: 8: ADCON0bits.ADCS=01;
   921  00E9  081F               	movf	31,w	;volatile
   922  00EA  393F               	andlw	-193
   923  00EB  3840               	iorlw	64
   924  00EC  009F               	movwf	31	;volatile
   925  00ED                     l724:	
   926                           
   927                           ;ADC.c: 9: ADCON0bits.CHS0=0;
   928  00ED  111F               	bcf	31,2	;volatile
   929  00EE                     l726:	
   930                           
   931                           ;ADC.c: 10: ADCON0bits.CHS1=0;
   932  00EE  119F               	bcf	31,3	;volatile
   933  00EF                     l728:	
   934                           
   935                           ;ADC.c: 11: ADCON0bits.CHS2=0;
   936  00EF  121F               	bcf	31,4	;volatile
   937  00F0                     l730:	
   938                           
   939                           ;ADC.c: 12: ADCON0bits.CHS3=1;
   940  00F0  169F               	bsf	31,5	;volatile
   941  00F1                     l732:	
   942                           
   943                           ;ADC.c: 13: ADCON0bits.GO_nDONE=0;
   944  00F1  109F               	bcf	31,1	;volatile
   945  00F2                     l734:	
   946                           
   947                           ;ADC.c: 14: ADCON0bits.ADON=1;
   948  00F2  141F               	bsf	31,0	;volatile
   949  00F3                     l736:	
   950                           
   951                           ;ADC.c: 15: ADCON1bits.ADFM=0;
   952  00F3  1683               	bsf	3,5	;RP0=1, select bank1
   953  00F4  1303               	bcf	3,6	;RP1=0, select bank1
   954  00F5  139F               	bcf	31,7	;volatile
   955  00F6                     l738:	
   956                           
   957                           ;ADC.c: 16: ADCON1bits.VCFG0=0;
   958  00F6  121F               	bcf	31,4	;volatile
   959  00F7                     l740:	
   960                           
   961                           ;ADC.c: 17: ADCON1bits.VCFG1=0;
   962  00F7  129F               	bcf	31,5	;volatile
   963  00F8                     l99:	
   964  00F8  0008               	return
   965  00F9                     __end_of_ADC:	
   966                           
   967                           	psect	text4
   968  0087                     __ptext4:	
   969 ;; *************** function _ISR *****************
   970 ;; Defined at:
   971 ;;		line 49 in file "main1.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          3       0       0       0       0
   988 ;;      Totals:         3       0       0       0       0
   989 ;;Total ram usage:        3 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		Interrupt level 1
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _ISR
  1000  0087                     _ISR:	
  1001  0087                     i1l746:	
  1002                           
  1003                           ;main1.c: 51:     INTCONbits.GIE = 0;
  1004  0087  138B               	bcf	11,7	;volatile
  1005                           
  1006                           ;main1.c: 52:     INTCONbits.RBIE = 0;
  1007  0088  118B               	bcf	11,3	;volatile
  1008                           
  1009                           ;main1.c: 53:     INTCONbits.T0IE = 0;
  1010  0089  128B               	bcf	11,5	;volatile
  1011                           
  1012                           ;main1.c: 54:     if(INTCONbits.RBIF == 1){
  1013  008A  1C0B               	btfss	11,0	;volatile
  1014  008B  288D               	goto	u1_21
  1015  008C  288E               	goto	u1_20
  1016  008D                     u1_21:	
  1017  008D  28A3               	goto	i1l762
  1018  008E                     u1_20:	
  1019  008E                     i1l748:	
  1020                           
  1021                           ;main1.c: 56:         if(PORTBbits.RB0 == 1){
  1022  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1023  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0090  1C06               	btfss	6,0	;volatile
  1025  0091  2893               	goto	u2_21
  1026  0092  2894               	goto	u2_20
  1027  0093                     u2_21:	
  1028  0093  289A               	goto	i1l754
  1029  0094                     u2_20:	
  1030  0094                     i1l750:	
  1031                           
  1032                           ;main1.c: 57:             i++;
  1033  0094  3001               	movlw	1
  1034  0095  00F6               	movwf	??_ISR
  1035  0096  0876               	movf	??_ISR,w
  1036  0097  07F5               	addwf	_i,f
  1037  0098                     i1l752:	
  1038                           
  1039                           ;main1.c: 58:             PORTA = i;
  1040  0098  0875               	movf	_i,w
  1041  0099  0085               	movwf	5	;volatile
  1042  009A                     i1l754:	
  1043                           
  1044                           ;main1.c: 61:         if(PORTBbits.RB1 == 1){
  1045  009A  1C86               	btfss	6,1	;volatile
  1046  009B  289D               	goto	u3_21
  1047  009C  289E               	goto	u3_20
  1048  009D                     u3_21:	
  1049  009D  28A2               	goto	i1l760
  1050  009E                     u3_20:	
  1051  009E                     i1l756:	
  1052                           
  1053                           ;main1.c: 62:             i--;
  1054  009E  3001               	movlw	1
  1055  009F  02F5               	subwf	_i,f
  1056  00A0                     i1l758:	
  1057                           
  1058                           ;main1.c: 63:             PORTA = i;
  1059  00A0  0875               	movf	_i,w
  1060  00A1  0085               	movwf	5	;volatile
  1061  00A2                     i1l760:	
  1062                           
  1063                           ;main1.c: 67:         INTCONbits.RBIF = 0;
  1064  00A2  100B               	bcf	11,0	;volatile
  1065  00A3                     i1l762:	
  1066                           
  1067                           ;main1.c: 72:     if (PIR1bits.ADIF == 1){
  1068  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1069  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1070  00A5  1F0C               	btfss	12,6	;volatile
  1071  00A6  28A8               	goto	u4_21
  1072  00A7  28A9               	goto	u4_20
  1073  00A8                     u4_21:	
  1074  00A8  28AC               	goto	i1l70
  1075  00A9                     u4_20:	
  1076  00A9                     i1l764:	
  1077                           
  1078                           ;main1.c: 73:         adc = 1;
  1079  00A9  01F0               	clrf	_adc
  1080  00AA  0AF0               	incf	_adc,f
  1081                           
  1082                           ;main1.c: 74:         PIR1bits.ADIF = 0;
  1083  00AB  130C               	bcf	12,6	;volatile
  1084  00AC                     i1l70:	
  1085                           ;main1.c: 76:     }
  1086                           
  1087                           
  1088                           ;main1.c: 77:     if (INTCONbits.TMR0IF == 1) {
  1089  00AC  1D0B               	btfss	11,2	;volatile
  1090  00AD  28AF               	goto	u5_21
  1091  00AE  28B0               	goto	u5_20
  1092  00AF                     u5_21:	
  1093  00AF  28BC               	goto	i1l776
  1094  00B0                     u5_20:	
  1095  00B0                     i1l766:	
  1096                           
  1097                           ;main1.c: 78:         INTCONbits.TMR0IF = 0;
  1098  00B0  110B               	bcf	11,2	;volatile
  1099  00B1                     i1l768:	
  1100                           
  1101                           ;main1.c: 79:         TMR0 = 4;
  1102  00B1  3004               	movlw	4
  1103  00B2  0081               	movwf	1	;volatile
  1104  00B3                     i1l770:	
  1105                           
  1106                           ;main1.c: 80:         if(contador == 0){
  1107  00B3  0874               	movf	_contador,w
  1108  00B4  1D03               	btfss	3,2
  1109  00B5  28B7               	goto	u6_21
  1110  00B6  28B8               	goto	u6_20
  1111  00B7                     u6_21:	
  1112  00B7  28BB               	goto	i1l774
  1113  00B8                     u6_20:	
  1114  00B8                     i1l772:	
  1115                           
  1116                           ;main1.c: 81:             contador = 1;
  1117  00B8  01F4               	clrf	_contador
  1118  00B9  0AF4               	incf	_contador,f
  1119                           
  1120                           ;main1.c: 82:         } else {
  1121  00BA  28BC               	goto	i1l776
  1122  00BB                     i1l774:	
  1123                           
  1124                           ;main1.c: 83:             contador = 0;
  1125  00BB  01F4               	clrf	_contador
  1126  00BC                     i1l776:	
  1127                           
  1128                           ;main1.c: 86:     INTCONbits.GIE = 1;
  1129  00BC  178B               	bsf	11,7	;volatile
  1130  00BD                     i1l778:	
  1131                           
  1132                           ;main1.c: 87:     INTCONbits.RBIE = 1;
  1133  00BD  158B               	bsf	11,3	;volatile
  1134  00BE                     i1l780:	
  1135                           
  1136                           ;main1.c: 88:     INTCONbits.T0IE = 1;
  1137  00BE  168B               	bsf	11,5	;volatile
  1138  00BF                     i1l74:	
  1139  00BF  0878               	movf	??_ISR+2,w
  1140  00C0  008A               	movwf	10
  1141  00C1  0E77               	swapf	(??_ISR+1)^(0+4294967168),w
  1142  00C2  0083               	movwf	3
  1143  00C3  0EFE               	swapf	btemp,f
  1144  00C4  0E7E               	swapf	btemp,w
  1145  00C5  0009               	retfie
  1146  00C6                     __end_of_ISR:	
  1147  007E                     btemp	set	126	;btemp
  1148  007E                     wtemp0	set	126
  1149                           
  1150                           	psect	intentry
  1151  0004                     __pintentry:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1154                           
  1155  0004                     interrupt_function:	
  1156  007E                     saved_w	set	btemp
  1157  0004  00FE               	movwf	btemp
  1158  0005  0E03               	swapf	3,w
  1159  0006  00F7               	movwf	??_ISR+1
  1160  0007  080A               	movf	10,w
  1161  0008  00F8               	movwf	??_ISR+2
  1162  0009  120A  118A  2887   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                                _ADC
                               _init
                           _initTMR0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _init
   _initTMR0

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 05 14:25:47 2020

                       _d 0071                         _i 0075                         pc 0002  
             __CFG_CP$OFF 0000                        l81 0058                        l82 0059  
                      l88 00E2                        l99 00F8                        _d1 0073  
                      _d2 0072                        fsr 0004                       l108 0119  
                     _ADC 00E3                       l700 00C6                       l710 00DB  
                     l702 00CA                       l720 00E3                       l712 00DC  
                     l704 00CB                       l730 00F0                       l722 00E9  
                     l714 00DD                       l706 00CC                       l740 00F7  
                     l732 00F1                       l724 00ED                       l716 00E0  
                     l708 00DA                       l820 0023                       l734 00F2  
                     l726 00EE                       l718 00E1                       l742 0110  
                     l830 003E                       l822 0028                       l736 00F3  
                     l728 00EF                       l744 0118                       l840 005B  
                     l832 004B                       l824 0031                       l816 0019  
                     l738 00F6                       l842 0064                       l834 004F  
                     l826 0034                       l818 001E                       l844 006D  
                     l828 0039                       l836 0050                       l846 0070  
                     l838 0056                       l848 0071                       u100 0039  
                     u101 0038                       u120 0056                       u121 0055  
                     u115 0041                       u137 002C                       u147 0068  
                     u157 007E              __CFG_CPD$OFF 0000                       _ISR 0087  
                     _adc 0070                       fsr0 0004                      ?_ADC 0076  
            __CFG_LVP$OFF 0000                      ?_ISR 0076                      i1l70 00AC  
                    i1l74 00BF                      _TMR0 0001                      u1_20 008E  
                    u1_21 008D                      u2_20 0094                      u2_21 0093  
                    u3_20 009E                      u3_21 009D                      u4_20 00A9  
                    u4_21 00A8                      u5_20 00B0                      u5_21 00AF  
                    u6_20 00B8                      u6_21 00B7              __CFG_WRT$OFF 0000  
                    _main 0019                      _init 00C6                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ADC 0079  
                   ??_ISR 0076                     ?_main 0076                     ?_init 0076  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l750 0094  
                   i1l760 00A2                     i1l752 0098                     i1l770 00B3  
                   i1l754 009A                     i1l762 00A3                     i1l746 0087  
                   i1l780 00BE                     i1l772 00B8                     i1l764 00A9  
                   i1l756 009E                     i1l748 008E                     i1l774 00BB  
                   i1l766 00B0                     i1l758 00A0                     i1l768 00B1  
                   i1l776 00BC                     i1l778 00BD                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISC 0087  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0087  
            __end_of_init 00E3                    ??_main 0079                    ??_init 0079  
                  _ADRESH 001E                    _ANSELH 0189                    _INTCON 000B  
          __CFG_PWRTE$OFF 0000          __end_of_initTMR0 011A                    saved_w 007E  
 __end_of__initialization 0015            __pcstackCOMMON 0076                __pmaintext 0019  
              __pintentry 0004                __stringtab 0100                 ?_initTMR0 0076  
                 __ptext1 0110                   __ptext2 00C6                   __ptext3 00E3  
                 __ptext4 0087              __size_of_ADC 0016              __size_of_ISR 003F  
    end_of_initialization 0015                ??_initTMR0 0079                 _PORTBbits 0006  
               _PORTDbits 0008                 _TRISBbits 0086       start_initialization 000F  
             __end_of_ADC 00F9               __end_of_ISR 00C6  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0070                 ___latbits 0002         __size_of_initTMR0 000A  
               __pstrings 0100       __end_of_SEGMENT_MAP 0110         interrupt_function 0004  
                _IOCBbits 0096                  _PIE1bits 008C                  _PIR1bits 000C  
              _ADCON0bits 001F               __stringbase 0105                _ADCON1bits 009F  
      __end_of__stringtab 0106               _SEGMENT_MAP 0106         __CFG_BOR4V$BOR40V 0000  
                _contador 0074                  _initTMR0 0110             __size_of_main 006E  
           __size_of_init 001D                _INTCONbits 000B                  intlevel1 0000  
               stringcode 0100                _OPTION_REG 0081                  stringdir 0100  
                stringtab 0100  
